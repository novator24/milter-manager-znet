# ja.po for test-unit Reference.
# Copyright (C) 2011 Kouhei Sutou
# This file is distributed under the same license as the test-unit package.
# Kouhei Sutou <kou@cozmixng.org>, 2011.
msgid ""
msgstr ""
"Project-Id-Version: test-unit 2.3.1\n"
"POT-Creation-Date: 2011-11-20 22:17+0900\n"
"PO-Revision-Date: 2013-05-18 15:17+0900\n"
"Last-Translator: Kouhei Sutou <kou@cozmixng.org>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ./README.textile:1
msgid "h1. test-unit"
msgstr ""

#: ./README.textile:3
msgid ""
"* http://test-unit.rubyforge.org/\n"
"* https://github.com/test-unit/test-unit"
msgstr ""

#: ./README.textile:6
msgid "h2. Description"
msgstr "h2. 説明"

#: ./README.textile:8
msgid ""
"test-unit - Improved version of Test::Unit bundled in Ruby\n"
"1.8.x."
msgstr ""

#: ./README.textile:11
msgid ""
"Ruby 1.9.x bundles minitest not Test::Unit. Test::Unit\n"
"bundled in Ruby 1.8.x had not been improved but unbundled\n"
"Test::Unit (test-unit) is improved actively."
msgstr ""

#: ./README.textile:15
msgid "h2. Features"
msgstr ""

#: ./README.textile:17
msgid ""
"* Test::Unit 1.2.3 is the original Test::Unit, taken\n"
"  straight from the ruby distribution. It is being\n"
"  distributed as a gem to allow tool builders to use it as a\n"
"  stand-alone package. (The test framework in ruby is going\n"
"  to radically change very soon)."
msgstr ""

#: ./README.textile:23
msgid ""
"* test-unit will be improved actively and may break\n"
"  compatiblity with Test::Unit 1.2.3. (We will not hope it\n"
"  if it isn't needed.)"
msgstr ""

#: ./README.textile:27
msgid ""
"* Some features exist as separated gems like GUI test\n"
"  runner. (Tk, GTK+ and Fox) test-unit-full gem package\n"
"  provides for installing all Test::Unit related gems\n"
"  easily."
msgstr ""

#: ./README.textile:32
msgid "h2. How To"
msgstr "h2. 一歩進んだ使い方"

#: ./README.textile:34
msgid "* {file:doc/text/how-to.textile}"
msgstr ""

#: ./README.textile:36
msgid "h2. Install"
msgstr "h2. インストール"

#: ./README.textile:38
msgid ""
"<pre>\n"
"% sudo gem install test-unit\n"
"</pre>"
msgstr ""

#: ./README.textile:42
msgid "If you want to use full Test::Unit features:"
msgstr ""

#: ./README.textile:44
msgid ""
"<pre>\n"
"% sudo gem install test-unit-full\n"
"</pre>"
msgstr ""

#: ./README.textile:48
msgid "h2. License"
msgstr ""

#: ./README.textile:50
msgid "(The Ruby License)"
msgstr ""

#: ./README.textile:52
msgid "This software is distributed under the same terms as ruby."
msgstr ""

#: ./README.textile:54
msgid "Exception:"
msgstr ""

#: ./README.textile:56
msgid ""
"  * lib/test/unit/diff.rb is a double license of the Ruby license and\n"
"    PSF license."
msgstr ""

#: ./README.textile:59
msgid ""
"  * lib/test-unit.rb is a dual license of the Ruby license and LGPLv2.1\n"
"    or later."
msgstr ""

#: ./README.textile:62
msgid "h2. Authors"
msgstr ""

#: ./README.textile:64
msgid "h3. Active"
msgstr ""

#: ./README.textile:66
msgid ""
"* Kouhei Sutou: The current maintainer\n"
"* Haruka Yoshihara: Data driven test supports."
msgstr ""

#: ./README.textile:69
msgid "h3. Inactive"
msgstr ""

#: ./README.textile:71
msgid ""
"* Nathaniel Talbott: The original author\n"
"* Ryan Davis: The second maintainer"
msgstr ""

#: ./README.textile:74
msgid "h3. Images"
msgstr ""

#: ./README.textile:76
msgid "* Mayu & Co.: kinotan icons: http://cocooooooon.com/kinotan/"
msgstr ""

#: ./README.textile:78
msgid "h2. Thanks"
msgstr "h2. 感謝"

#: ./README.textile:80
msgid ""
"* Daniel Berger: Suggestions and bug reports.\n"
"* Designing Patterns: Suggestions.\n"
"* Erik Hollensbe: Suggestions and bug reports.\n"
"* Bill Lear: A suggestion.\n"
"* Diego Pettenò: A bug report.\n"
"* Angelo Lakra: A bug report.\n"
"* Mike Pomraning: A bug report.\n"
"* David MARCHALAND: Suggestions and bug reports.\n"
"* Andrew Grimm: A bug report.\n"
"* Champak Ch: A bug report.\n"
"* Florian Frank: A bug report.\n"
"* grafi-tt: Bug fixes and reports.\n"
"* Jeremy Stephens: A bug report.\n"
"* Hans de Graaff: Bug reports.\n"
"* James Mead: A bug report.\n"
"* Marc Seeger (Acquia): A bug report.\n"
"* boutil: A bug report.\n"
"* Vladislav Rassokhin: A bug report."
msgstr ""

#: ./doc/text/how-to.textile:1
msgid "How To"
msgstr "一歩進んだ使い方"

# encoding
#: ./doc/text/how-to.textile:2
msgid "utf-8"
msgstr ""

#: ./doc/text/how-to.textile:4
msgid "h1. How To"
msgstr "h1. 一歩進んだ使い方"

#: ./doc/text/how-to.textile:6
msgid "h2. Run all tests"
msgstr "h2. すべてのテストを実行する"

#: ./doc/text/how-to.textile:8
msgid ""
"To make it easy to run all your tests, you can add a @run_test.rb@ script\n"
"to your @test@ directory. A simple example might look like:"
msgstr "すべてのテストを簡単に実行するために、 @run_test.rb@ スクリプトを @test@ ディレクトリにおきます。スクリプトは以下のようにします。"

#: ./doc/text/how-to.textile:11
msgid ""
"<pre>\n"
"base_dir = File.expand_path(File.join(File.dirname(__FILE__), \"..\"))\n"
"lib_dir  = File.join(base_dir, \"lib\")\n"
"test_dir = File.join(base_dir, \"test\")"
msgstr ""

#: ./doc/text/how-to.textile:16
msgid "$LOAD_PATH.unshift(lib_dir)"
msgstr ""

#: ./doc/text/how-to.textile:18
msgid "require 'test/unit'"
msgstr ""

#: ./doc/text/how-to.textile:20
msgid ""
"exit Test::Unit::AutoRunner.run(true, test_dir)\n"
"</pre>"
msgstr ""

#: ./doc/text/how-to.textile:23
msgid "Then it's easy to run tests via the command line with,"
msgstr "これで以下のコマンドで簡単にテストを実行できます。"

#: ./doc/text/how-to.textile:25
msgid ""
"<pre>\n"
"$ ruby test/run_test.rb\n"
"</pre>"
msgstr ""

#: ./doc/text/how-to.textile:29
msgid "h2. Change test runner via the command line"
msgstr "h2. コマンドラインでテストランナーを変更する"

#: ./doc/text/how-to.textile:34
msgid ""
"<pre>\n"
"ruby test/run_test.rb --runner tap\n"
"</pre>"
msgstr ""

#: ./doc/text/how-to.textile:39
msgid "h2. Configure test-unit per-project"
msgstr "h2. プロジェクトごとにtest-unitを設定する"

#: ./doc/text/how-to.textile:41
msgid ""
"Test::Unit reads @test-unit.yml@ or @.test-unit.yml@ in the current working\n"
"directory as Test::Unit's configuration file. It can contain the following\n"
"settings:"
msgstr "Test::Unitは @test-unit.yml@ または現在のワーキングディレクトリにある @.test-unit.yml@ をTest::Unitの設定ファイルとして読み込みます。このファイルには以下のような設定をすることができます。"

# Test::Unit
#: ./doc/text/how-to.textile:45 ./lib/test-unit.rb:247
#: ./lib/test/unit.rb:247 ./lib/test/unit/assertionfailederror.rb:247
#: ./lib/test/unit/assertions.rb:247
#: ./lib/test/unit/attribute-matcher.rb:247
#: ./lib/test/unit/attribute.rb:247 ./lib/test/unit/autorunner.rb:247
#: ./lib/test/unit/code-snippet-fetcher.rb:247
#: ./lib/test/unit/collector.rb:247
#: ./lib/test/unit/collector/descendant.rb:247
#: ./lib/test/unit/collector/dir.rb:247
#: ./lib/test/unit/collector/load.rb:247
#: ./lib/test/unit/collector/objectspace.rb:247
#: ./lib/test/unit/collector/xml.rb:247
#: ./lib/test/unit/color-scheme.rb:247 ./lib/test/unit/color.rb:247
#: ./lib/test/unit/data.rb:247 ./lib/test/unit/diff.rb:247
#: ./lib/test/unit/error.rb:247 ./lib/test/unit/exceptionhandler.rb:247
#: ./lib/test/unit/failure.rb:247
#: ./lib/test/unit/fault-location-detector.rb:247
#: ./lib/test/unit/fixture.rb:247 ./lib/test/unit/notification.rb:247
#: ./lib/test/unit/omission.rb:247 ./lib/test/unit/pending.rb:247
#: ./lib/test/unit/priority.rb:247
#: ./lib/test/unit/runner/console.rb:247
#: ./lib/test/unit/runner/emacs.rb:247
#: ./lib/test/unit/runner/xml.rb:247 ./lib/test/unit/testcase.rb:247
#: ./lib/test/unit/testresult.rb:247 ./lib/test/unit/testsuite.rb:247
#: ./lib/test/unit/testsuitecreator.rb:247
#: ./lib/test/unit/ui/console/outputlevel.rb:247
#: ./lib/test/unit/ui/console/testrunner.rb:247
#: ./lib/test/unit/ui/emacs/testrunner.rb:247
#: ./lib/test/unit/ui/testrunner.rb:247
#: ./lib/test/unit/ui/testrunnermediator.rb:247
#: ./lib/test/unit/ui/testrunnerutilities.rb:247
#: ./lib/test/unit/ui/xml/testrunner.rb:247
#: ./lib/test/unit/util/backtracefilter.rb:247
#: ./lib/test/unit/util/method-owner-finder.rb:247
#: ./lib/test/unit/util/observable.rb:247
#: ./lib/test/unit/util/output.rb:247
#: ./lib/test/unit/util/procwrapper.rb:247
#: ./lib/test/unit/version.rb:247
msgid ""
"* color scheme definitions\n"
"* test runner to be used\n"
"* test runner options\n"
"* test collector to be used"
msgstr ""

#: ./doc/text/how-to.textile:50
msgid ""
"Except color scheme definitions, all of them can be specified by command\n"
"line option."
msgstr "カラースキーム定義以外はコマンドラインオプションで指定することができます。"

#: ./doc/text/how-to.textile:53 ./lib/test-unit.rb:255
#: ./lib/test/unit.rb:255 ./lib/test/unit/assertionfailederror.rb:255
#: ./lib/test/unit/assertions.rb:255
#: ./lib/test/unit/attribute-matcher.rb:255
#: ./lib/test/unit/attribute.rb:255 ./lib/test/unit/autorunner.rb:255
#: ./lib/test/unit/code-snippet-fetcher.rb:255
#: ./lib/test/unit/collector.rb:255
#: ./lib/test/unit/collector/descendant.rb:255
#: ./lib/test/unit/collector/dir.rb:255
#: ./lib/test/unit/collector/load.rb:255
#: ./lib/test/unit/collector/objectspace.rb:255
#: ./lib/test/unit/collector/xml.rb:255
#: ./lib/test/unit/color-scheme.rb:255 ./lib/test/unit/color.rb:255
#: ./lib/test/unit/data.rb:255 ./lib/test/unit/diff.rb:255
#: ./lib/test/unit/error.rb:255 ./lib/test/unit/exceptionhandler.rb:255
#: ./lib/test/unit/failure.rb:255
#: ./lib/test/unit/fault-location-detector.rb:255
#: ./lib/test/unit/fixture.rb:255 ./lib/test/unit/notification.rb:255
#: ./lib/test/unit/omission.rb:255 ./lib/test/unit/pending.rb:255
#: ./lib/test/unit/priority.rb:255
#: ./lib/test/unit/runner/console.rb:255
#: ./lib/test/unit/runner/emacs.rb:255
#: ./lib/test/unit/runner/xml.rb:255 ./lib/test/unit/testcase.rb:255
#: ./lib/test/unit/testresult.rb:255 ./lib/test/unit/testsuite.rb:255
#: ./lib/test/unit/testsuitecreator.rb:255
#: ./lib/test/unit/ui/console/outputlevel.rb:255
#: ./lib/test/unit/ui/console/testrunner.rb:255
#: ./lib/test/unit/ui/emacs/testrunner.rb:255
#: ./lib/test/unit/ui/testrunner.rb:255
#: ./lib/test/unit/ui/testrunnermediator.rb:255
#: ./lib/test/unit/ui/testrunnerutilities.rb:255
#: ./lib/test/unit/ui/xml/testrunner.rb:255
#: ./lib/test/unit/util/backtracefilter.rb:255
#: ./lib/test/unit/util/method-owner-finder.rb:255
#: ./lib/test/unit/util/observable.rb:255
#: ./lib/test/unit/util/output.rb:255
#: ./lib/test/unit/util/procwrapper.rb:255
#: ./lib/test/unit/version.rb:255
msgid "Here are sample color scheme definitions:"
msgstr "以下はカラースキームの定義例です。"

#: ./doc/text/how-to.textile:55
msgid ""
"<pre>\n"
"color_schemes:\n"
"  inverted:\n"
"    success:\n"
"      name: red\n"
"      bold: true\n"
"    failure:\n"
"      name: green\n"
"      bold: true\n"
"  other_scheme:\n"
"    ...\n"
"</pre>"
msgstr ""

#: ./doc/text/how-to.textile:68 ./lib/test-unit.rb:268
#: ./lib/test/unit.rb:268 ./lib/test/unit/assertionfailederror.rb:268
#: ./lib/test/unit/assertions.rb:268
#: ./lib/test/unit/attribute-matcher.rb:268
#: ./lib/test/unit/attribute.rb:268 ./lib/test/unit/autorunner.rb:268
#: ./lib/test/unit/code-snippet-fetcher.rb:268
#: ./lib/test/unit/collector.rb:268
#: ./lib/test/unit/collector/descendant.rb:268
#: ./lib/test/unit/collector/dir.rb:268
#: ./lib/test/unit/collector/load.rb:268
#: ./lib/test/unit/collector/objectspace.rb:268
#: ./lib/test/unit/collector/xml.rb:268
#: ./lib/test/unit/color-scheme.rb:268 ./lib/test/unit/color.rb:268
#: ./lib/test/unit/data.rb:268 ./lib/test/unit/diff.rb:268
#: ./lib/test/unit/error.rb:268 ./lib/test/unit/exceptionhandler.rb:268
#: ./lib/test/unit/failure.rb:268
#: ./lib/test/unit/fault-location-detector.rb:268
#: ./lib/test/unit/fixture.rb:268 ./lib/test/unit/notification.rb:268
#: ./lib/test/unit/omission.rb:268 ./lib/test/unit/pending.rb:268
#: ./lib/test/unit/priority.rb:268
#: ./lib/test/unit/runner/console.rb:268
#: ./lib/test/unit/runner/emacs.rb:268
#: ./lib/test/unit/runner/xml.rb:268 ./lib/test/unit/testcase.rb:268
#: ./lib/test/unit/testresult.rb:268 ./lib/test/unit/testsuite.rb:268
#: ./lib/test/unit/testsuitecreator.rb:268
#: ./lib/test/unit/ui/console/outputlevel.rb:268
#: ./lib/test/unit/ui/console/testrunner.rb:268
#: ./lib/test/unit/ui/emacs/testrunner.rb:268
#: ./lib/test/unit/ui/testrunner.rb:268
#: ./lib/test/unit/ui/testrunnermediator.rb:268
#: ./lib/test/unit/ui/testrunnerutilities.rb:268
#: ./lib/test/unit/ui/xml/testrunner.rb:268
#: ./lib/test/unit/util/backtracefilter.rb:268
#: ./lib/test/unit/util/method-owner-finder.rb:268
#: ./lib/test/unit/util/observable.rb:268
#: ./lib/test/unit/util/output.rb:268
#: ./lib/test/unit/util/procwrapper.rb:268
#: ./lib/test/unit/version.rb:268
msgid "Here are the syntax of color scheme definitions:"
msgstr ""

#: ./doc/text/how-to.textile:70
msgid ""
"<pre>\n"
"color_schemes:\n"
"  SCHEME_NAME:\n"
"    EVENT_NAME:\n"
"      name: COLOR_NAME\n"
"      intensity: BOOLEAN\n"
"      bold: BOOLEAN\n"
"      italic: BOOLEAN\n"
"      underline: BOOLEAN\n"
"    ...\n"
"  ...\n"
"</pre>"
msgstr ""

#: ./doc/text/how-to.textile:83
msgid ""
"| SCHEME_NAME | the name of the color scheme |\n"
"| EVENT_NAME  | success, failure, pending, omission, notification, error |\n"
"| COLOR_NAME  | black, red, green, yellow, blue, magenta, cyan, white    |\n"
"| BOOLEAN     | true or false |"
msgstr ""

#: ./doc/text/how-to.textile:88
msgid "You can use the above 'inverted' color scheme with the following configuration:"
msgstr "上で定義した'inverted'カラースキムを使う設定は以下の通りです。"

#: ./doc/text/how-to.textile:90
msgid ""
"<pre>\n"
"runner: console\n"
"console_options:\n"
"  color_scheme: inverted\n"
"color_schemes:\n"
"  inverted:\n"
"    success:\n"
"      name: red\n"
"      bold: true\n"
"    failure:\n"
"      name: green\n"
"      bold: true\n"
"</pre>"
msgstr ""

#: ./doc/text/news.textile:1
msgid "h1. News"
msgstr ""

#: ./doc/text/news.textile:3
msgid "h2(#2-5-5). 2.5.5 - 2013-05-18"
msgstr ""

#: ./doc/text/news.textile:5
msgid "It's Ruby 2.0.0 supported release!"
msgstr ""

#: ./doc/text/news.textile:15
msgid ""
"  * Fixed a typo in document.\n"
"    [GitHub#53] [Patch by Baptiste Fontaine]\n"
"  * Fixed a bug in {Test::Unit::Assertions#assert_in_epsilon}. It doesn't work\n"
"    as expected if expected value is negative value.\n"
"    [Ruby Bug #8317] [Reported by Nobuhiro IMAI]"
msgstr ""

#: ./doc/text/news.textile:23
msgid ""
"  * Baptiste Fontaine\n"
"  * mtasaka\n"
"  * Tom Miller\n"
"  * Nobuhiro IMAI"
msgstr ""

#: ./doc/text/news.textile:28
msgid "h2(#2-5-4). 2.5.4 - 2013-01-23"
msgstr ""

#: ./doc/text/news.textile:34
msgid ""
"  * Added documents for data driven test functionality.\n"
"  * Added TSV support for data driven test functionality.\n"
"  * Support tag inspection on JRuby."
msgstr ""

#: ./doc/text/news.textile:40
msgid ""
"  * Fixed a bug. It is too slow to filter tests when there are many\n"
"    tests. [GitHub#46]\n"
"  * Accept anonymous test suite.\n"
"    [GitHub:#49] [Reported by Matthew Rudy Jacobs]"
msgstr ""

#: ./doc/text/news.textile:47
msgid "  * Matthew Rudy Jacobs"
msgstr ""

#: ./doc/text/news.textile:49
msgid "h2(#2-5-3). 2.5.3 - 2012-11-28"
msgstr ""

#: ./doc/text/news.textile:51
msgid "It's a release for minitest compatibility and bug fix."
msgstr "minitestとの互換製の改良とバグフィックスのリリースです。"

#: ./doc/text/news.textile:55
msgid ""
"  * Supported diff in invalid encoding.\n"
"  * Added some assersion methods just for minitest compatibility.\n"
"    Added methods are assert_includes(), refute_*() and refute().\n"
"    If you are test-unit user, please don't use them.\n"
"    [GitHub#40] [Suggested by Michael Grosser]\n"
"  * Added --attribute option to select target tests by attribute.\n"
"    [test-unit-users-en:00098] [Suggested by Piotr Nestorow]"
msgstr ""
"  * Supported diff in invalid encoding.\n"
"  * minitestとの互換性のために、assert_includes(), refute_*() and refute()を追加た。minitestとの互換性のために入れただけのメソッドなので、もしtest-unitを使っているなら、これらのメソッドははできれば使わないでください。\n"
"    [GitHub#40] [Michael Grosserさんが提案]\n"
"  * Added --attribute option to select target tests by attribute.\n"
"    [test-unit-users-en:00098] [Suggested by Piotr Nestorow]"

#: ./doc/text/news.textile:65
msgid ""
"  * Allowed use of test for inheritance in ActionController::TestCase.\n"
"    [GitHub#42] [Patch by David Rasch]\n"
"  * Ensured evaluating at_exist block in top level.\n"
"    In IRB context, exit() specifies irb_exit().\n"
"    [test-unit-users-en:00089] [Reported by Daniel Berger]\n"
"  * Fixed a bug that decoration style description is ignored.\n"
"    \"decoration style description\" are using description method\n"
"    above \"def test_name\" or with Symbol specifying test_name.\n"
"    [GitHub#45] [Reported by Piotr Nestorow]"
msgstr ""

#: ./doc/text/news.textile:77
msgid ""
"  * Michael Grosser\n"
"  * David Rasch\n"
"  * Daniel Berger\n"
"  * Piotr Nestorow"
msgstr ""

#: ./doc/text/news.textile:82
msgid "h2(#2-5-2). 2.5.2 - 2012-08-29"
msgstr ""

#: ./doc/text/news.textile:84
msgid ""
"It's an improvement release for tmtms. @--location@ is a similar\n"
"feature to @--line_number@ in RSpec. @sub_test_case@ is a similar\n"
"feature to @context@ in shoulda-context and RSpec."
msgstr "とみたさん用に改良したリリースです。 @--location@ はRSpecの @--line_number@ と似た機能です。 @sub_test_case@ はshoulda-contextとRSpecの @context@ と似た機能です。"

#: ./doc/text/news.textile:90
msgid ""
"  * Cleaned up tests.\n"
"    [GitHub#34] [Patch by Michael Grosser]\n"
"  * Added missing background color for 8 color environment.\n"
"  * Added workaround for NetBeans.\n"
"    [GitHub#38] [Reported by Marc Cooper]\n"
"  * Added @--location@ command line option that selects target tests\n"
"    by test defined location.\n"
"  * Created sub test suite for each subclassed test case.\n"
"  * [ui][console] Supported nested test suites.\n"
"  * Added {Test::Unit.at_start} and {Test::Unit.at_exit} hooks that\n"
"    are run before/after all tests are run.\n"
"    [Good hook name is suggested by kdmsnr]\n"
"  * Improved code snippet target on failure. Test method is always used\n"
"    for code snippet target.\n"
"    [GitHub#39] [Suggested by Michael Grosser]\n"
"  * Added {Test::Unit::TestCase.sub_test_case} that creates sub test case.\n"
"    The sub test case name isn't limited Ruby's constant name rule. You can\n"
"    specify the sub test case name in free form."
msgstr ""

#: ./doc/text/news.textile:111
msgid ""
"  * Michael Grosser\n"
"  * Marc Cooper\n"
"  * kdmsnr"
msgstr ""

#: ./doc/text/news.textile:115
msgid "h2(#2-5-1). 2.5.1 - 2012-07-05"
msgstr ""

#: ./doc/text/news.textile:121
msgid ""
"  * Supported installing from GitHub.\n"
"    [GitHub#29] [Suggested by Michael Grosser]\n"
"  * Supported ActiveSupport::TestCase.\n"
"    [GitHub#30] [Reported by Michael Grosser]\n"
"  * [ui][console] Improved multiline falut message display."
msgstr ""

#: ./doc/text/news.textile:129
msgid ""
"  * [ui][console] Fixed a bug that expected and actual values are\n"
"    empty.\n"
"    [GitHub#31][GitHub#33]\n"
"    [Reported by Kendall Buchanan][Reported by Mathieu Martin]\n"
"    [Hinted by Michael Grosser]\n"
"  * Fixed a bug that .gemspec can't be loaded on LANG=C.\n"
"    [RubyForge#29595] [Reported by Jean-Denis Koeck]"
msgstr ""
"  * [ui][console] 期待値と実測値が空になる問題を修正。\n"
"    [GitHub#31][GitHub#33]\n"
"    [Kendall Buchananさんが報告][Mathieu Martinさんが報告]\n"
"    [Michael Grosserさんがヒントを提供]\n"
"  * Fixed a bug that .gemspec can't be loaded on LANG=C.\n"
"    [RubyForge#29595] [Reported by Jean-Denis Koeck]"

#: ./doc/text/news.textile:139
msgid ""
"  * Michael Grosser\n"
"  * Kendall Buchanan\n"
"  * Mathieu Martin\n"
"  * Jean-Denis Koeck"
msgstr ""

#: ./doc/text/news.textile:144
msgid "h2(#2-5-0). 2.5.0 - 2012-06-06"
msgstr ""

#: ./doc/text/news.textile:150
msgid ""
"  * Fixed a backward incompatibility of @TestUnitMediator#run_suite@\n"
"    introduced in 2.4.9.\n"
"    [GitHub#28] [Reported by Vladislav Rassokhin]"
msgstr ""
"  * 2.4.9で入った @TestUnitMediator#run_suite@ の後方非互換な変更を修正しました。\n"
"    [GitHub#28] [Vladislav Rassokhinさんが報告]"

#: ./doc/text/news.textile:156
msgid "  * Vladislav Rassokhin"
msgstr "  * Vladislav Rassokhinさん"

#: ./doc/text/news.textile:158
msgid "h2(#2-4-9). 2.4.9 - 2012-06-03"
msgstr ""

#: ./doc/text/news.textile:164
msgid ""
"  * @Test::Unit.run?@ ->\n"
"    @Test::Unit::AutoRunner.need_auto_run?@. @Test::Unit.run?@ is marked\n"
"    as deprecated but it is still available.\n"
"  * [experimental] Added top level \"run\" method for @\"ruby -rtest-unit -e\n"
"    run test/test_*.rb\"@. Is this API OK or dirty?\n"
"  * Made failure output more readable on no color mode.\n"
"  * Supported showing ASCII-8BIT diff in failure message.\n"
"  * [ui][console] Supported @ENV[\"TERM\"] == \"xterm-256color\"@ as color\n"
"    available terminal.\n"
"    [GitHub#26] [Reported by Michael Grosser]\n"
"  * [ui][console] Supported \"-256color\" suffix @ENV[\"TERM\"]@ terminal\n"
"    as 256 color supported terminal."
msgstr ""

#: ./doc/text/news.textile:179
msgid ""
"  * Fixed a bug that @--workdir@ doesn't work.\n"
"  * Consumed processed command line parameters in @ARGV@ as @--help@\n"
"    says.\n"
"    [RubyForge#29554] [Reported by Bob Saveland]\n"
"  * Added missing @require \"test/unit/diff\"@.\n"
"    [GitHub#25] [Reported by Stephan Kulow]"
msgstr ""

#: ./doc/text/news.textile:188
msgid ""
"  * Bob Saveland\n"
"  * Stephan Kulow\n"
"  * Michael Grosser"
msgstr ""

#: ./doc/text/news.textile:192
msgid "h2(#2-4-8). 2.4.8 - 2012-3-6"
msgstr ""

#: ./doc/text/news.textile:194
#: ./doc/text/news.textile:146 ./doc/text/news.textile:160
#: ./doc/text/news.textile:30 ./doc/text/news.textile:117
msgid "It's a bug fix release."
msgstr "バグフィックスリリースです。"

#: ./doc/text/news.textile:198
msgid ""
"  * Delayed at_exit registration until Test::Unit is used.\n"
"    [GitHub:#21] [Reported by Jason Lunn]\n"
"  * Added workaround for test-spec.\n"
"    [GitHub:#22] [Reported by Cédric Boutillier]"
msgstr ""

#: ./doc/text/news.textile:205
msgid ""
"  * Fixed an error on code snippet display on JRuby.\n"
"    [GitHub:#19][GitHub:#20]\n"
"    [Reported by Jørgen P. Tjernø][Patch by Junegunn Choi]"
msgstr ""
"  * JRuby上でテスト失敗時のコード表示時に発生していたエラーを修正した。\n"
"    [GitHub:#19][GitHub:#20]\n"
"    [Jørgen P. Tjernøさんが報告][Junegunn Choiさんがパッチ提供]"

#: ./doc/text/news.textile:211
msgid ""
"  * Jørgen P. Tjernø\n"
"  * Junegunn Choi\n"
"  * Jason Lunn"
msgstr ""

#: ./doc/text/news.textile:215
msgid "h2(#2-4-7). 2.4.7 - 2012-2-10"
msgstr ""

#: ./doc/text/news.textile:217
msgid "It's a code snippet improvement release."
msgstr "失敗時のコード表示を改良したリリースです。"

#: ./doc/text/news.textile:221
msgid "  * Supported code snippet display on all faults."
msgstr "  * 失敗時だけでなくエラー時などでもコードの一部を表示するようにした。"

#: ./doc/text/news.textile:223
msgid "h2(#2-4-6). 2.4.6 - 2012-2-9"
msgstr ""

#: ./doc/text/news.textile:225
msgid "It's a TAP runner separated release."
msgstr "TAPランナーサポートを分離したリリースです。"

#: ./doc/text/news.textile:229
msgid ""
"  * Moved TAP runner to test-unit-runner-tap gem from test-unit gem.\n"
"  * Supported code snippet display on failure."
msgstr ""

#: ./doc/text/news.textile:232
msgid "h2(#2-4-5). 2.4.5 - 2012-1-16"
msgstr ""

#: ./doc/text/news.textile:234
msgid "It's a failure message readability improvement release."
msgstr "失敗時のメッセージの読みやすさを改良したリリースです。"

#: ./doc/text/news.textile:238
msgid ""
"  * Removed needless information from exception inspected\n"
"    text on failure. It's for easy to read.\n"
"  * Supported custom inspector."
msgstr ""
"  * 失敗時に例外の内容を示すテキストから不必要な情報を削除した。これは例外の内容を読みやすくするためである。\n"
"  * Supported custom inspector."

#: ./doc/text/news.textile:242
msgid "h2(#2-4-4). 2.4.4 - 2012-1-2"
msgstr ""

#: ./doc/text/news.textile:244
msgid "It's a Rails integration improved release."
msgstr "Railsと一緒に使いやすくなったリリースです。"

#: ./doc/text/news.textile:248
msgid ""
"  * [ui][console] Don't break progress display when a test is failed.\n"
"  * [ui][console] Added markers betwen a failure detail\n"
"    message in progress to improve visibility.\n"
"  * [travis] Dropped Ruby 1.8.6 as a test target. [GitHub:#13]\n"
"    [Patch by Josh Kalderimis]\n"
"  * Supported expected value == 0 case in assert_in_epsilon. [RubyForge#29485]\n"
"    [Reported by Syver Enstad]\n"
"  * Supported a block style setup/teardown/cleanup."
msgstr ""

#: ./doc/text/news.textile:259
msgid ""
"  * Josh Kalderimis\n"
"  * Syver Enstad"
msgstr ""

#: ./doc/text/news.textile:262
msgid "h2(#2-4-3). 2.4.3 - 2011-12-11"
msgstr ""

#: ./doc/text/news.textile:266
#, fuzzy
msgid ""
"  * Improved SimpleCov integration by stopping to modify\n"
"    @ARGV@ in auto runner. [GitHub:#12]\n"
"    [Reported by Nikos Dimitrakopoulos]\n"
"  * Improved JRuby integration by removing JRuby internal backtrace."
msgstr ""
"  * 自動テストランナー内で<placeholder-1/>を変更しないようにしてSimpleCov連携を改良した。\n"
"    [GitHub:#12]\n"
"    [Nikos Dimitrakopoulosさんが報告]\n"
"  * Improved JRuby integration by removing JRuby internal backtrace.\n"

#: ./doc/text/news.textile:273
msgid "  * Nikos Dimitrakopoulos"
msgstr "  * Nikos Dimitrakopoulosさん"

#: ./doc/text/news.textile:275
msgid "h2(#2-4-2). 2.4.2 - 2011-11-26"
msgstr ""

#: ./doc/text/news.textile:279
msgid "  * @--name@ supported data label."
msgstr "  * @--name@ がデータのラベルも比較するようになった。"

#: ./doc/text/news.textile:281
msgid "h2. 2.4.1 - 2011-11-09"
msgstr ""

#: ./doc/text/news.textile:285
msgid ""
"  * Accepted AssertionMessage as assertion's user message.\n"
"    It is used in assert_select in actionpack.\n"
"    [Reported by David Heath]"
msgstr ""
"  * アサーションに指定するメッセージにAssertionMessageも使えるようにした。これはactionpack内のassert_selectで使われている。\n"
"    [David Heathさんが報告]"

#: ./doc/text/news.textile:291
msgid ""
"  * Fixed test failure on LANG=C. #11 [Reported by boutil]\n"
"  * Suppress warnings on Ruby 1.9.2."
msgstr ""

#: ./doc/text/news.textile:296
msgid ""
"  * boutil\n"
"  * David Heath"
msgstr ""

#: ./doc/text/news.textile:299
msgid "h2. 2.4.0 - 2011-09-18"
msgstr ""

#: ./doc/text/news.textile:303
msgid ""
"  * Supported Travis CI. #5 [Suggested by James Mead]\n"
"  * Added Gemfile. #6 [Suggested by James Mead]\n"
"  * [ui][console] Supported notification in show-detail-immediately.\n"
"  * [ui][console] enable --show-detail-immediately by default.\n"
"  * [ui] Added --max-diff-target-string-size option.\n"
"  * [ui][console] Supported 256 colors."
msgstr ""

#: ./doc/text/news.textile:312
msgid ""
"  * Added missing fixture file. #7 [Reported by grafi-tt]\n"
"  * [ui][console] Added missing the last newline for progress level.\n"
"  * Supported correct backtrace for redefined notification.\n"
"  * Don't handle Timeout::Error as pass through exception on Ruby 1.8. #8\n"
"    [Reported by Marc Seeger (Acquia)]"
msgstr ""

#: ./doc/text/news.textile:320
msgid ""
"  * James Mead\n"
"  * grafi-tt\n"
"  * Marc Seeger (Acquia)"
msgstr ""

#: ./doc/text/news.textile:324
msgid "h2. 2.3.2 - 2011-08-15"
msgstr ""

#: ./doc/text/news.textile:326
msgid "A bug fix release."
msgstr "バグフィックスリリース。"

#: ./doc/text/news.textile:330
msgid "  * [ui][console] Added some newlines to improve readability."
msgstr "  * [ui][console] 読み易くするために改行を追加。"

#: ./doc/text/news.textile:334
msgid ""
"  * [ui][console] Worked --verbose again.\n"
"  * Re-supported Ruby 1.8.6. [Reported by James Mead]"
msgstr ""
"  * [ui][console] Worked --verbose again.\n"
"  * Ruby 1.8.6を再サポート。\n"
"    [James Meadさんが報告]"

#: ./doc/text/news.textile:339
msgid "  * James Mead"
msgstr "  * James Meadさん"

#: ./doc/text/news.textile:341
msgid "h2(#2-3-1). 2.3.1 - 2011-08-06"
msgstr ""

#: ./doc/text/news.textile:343
msgid "Output improvement release!"
msgstr ""

#: ./doc/text/news.textile:345
#: ./doc/text/news.textile:119 ./doc/text/news.textile:162
#: ./doc/text/news.textile:196 ./doc/text/news.textile:219
#: ./doc/text/news.textile:227 ./doc/text/news.textile:236
#: ./doc/text/news.textile:246 ./doc/text/news.textile:264
#: ./doc/text/news.textile:277 ./doc/text/news.textile:283
#: ./doc/text/news.textile:301 ./doc/text/news.textile:328
#: ./doc/text/news.textile:53 ./doc/text/news.textile:88
#: ./doc/text/news.textile:7 ./doc/text/news.textile:32
msgid "h3. Improvements"
msgstr "h3. 改良"

#: ./doc/text/news.textile:347
msgid ""
"  * [ui][console] Outputs omissions and notifications in short.\n"
"  * [ui][console] Added \"important-only\" verbose level.\n"
"  * Intelligence diff supports recursive references.\n"
"  * [rubyforge #29325] Supported Ruby Enterprise Edition.\n"
"    [Reported by Hans de Graaff]\n"
"  * [rubyforge #29326] Supported JRuby.\n"
"    [Reported by Hans de Graaff]\n"
"  * Added --show-detail-immediately option that shows\n"
"    fault details when a fault is occurred."
msgstr ""

#: ./doc/text/news.textile:357
#: ./doc/text/news.textile:13 ./doc/text/news.textile:38
#: ./doc/text/news.textile:148 ./doc/text/news.textile:177
#: ./doc/text/news.textile:203 ./doc/text/news.textile:289
#: ./doc/text/news.textile:310 ./doc/text/news.textile:332
#: ./doc/text/news.textile:63 ./doc/text/news.textile:127
msgid "h3. Fixes"
msgstr "h3. 修正"

#: ./doc/text/news.textile:359
msgid ""
"  * [pull request #1] Fixed a problem that load collector\n"
"    can't load a test file on Ruby 1.9. [Patch by grafi-tt]\n"
"  * [issue #3] Fixed a problem that implicit method name\n"
"    override by declarative style test definition.\n"
"    [Reported by Jeremy Stephens]"
msgstr ""

#: ./doc/text/news.textile:367
msgid ""
"  * grafi-tt\n"
"  * Jeremy Stephens\n"
"  * Hans de Graaff"
msgstr ""

#: ./doc/text/news.textile:371
msgid "h2. 2.3.0 / 2011-04-17"
msgstr ""

#: ./doc/text/news.textile:373
msgid ""
"* 13 enhancements\n"
"  * improve Hash key sorting for diff.\n"
"  * [#28928] support any characters in declarative style description.\n"
"    [Daniel Berger]\n"
"  * add Error#location and make #backtrace deprecated.\n"
"  * make TestCase#passed? public.\n"
"  * add result finished and pass assertion notifications.\n"
"  * add TestSuite#passed? public.\n"
"  * add XML test runner.\n"
"  * add --output-file-descriptor option.\n"
"  * measure elapsed time for each test.\n"
"  * add --collector option.\n"
"  * support test driven test.\n"
"    [Haruka Yoshihara]\n"
"  * add cleanup hook it runs between after test and before teardown.\n"
"  * support recursive collection sort for diff."
msgstr ""

#: ./doc/text/news.textile:390
msgid ""
"* Thanks\n"
"  * Daniel Berger\n"
"  * Haruka Yoshihara"
msgstr ""

#: ./doc/text/news.textile:394
msgid "h2. 2.2.0 / 2011-02-14"
msgstr ""

#: ./doc/text/news.textile:396
msgid ""
"* 22 enhancements\n"
"  * [#28808] accept String as delta for assert_in_delta.\n"
"    [Daniel Berger]\n"
"  * [test-unit-users-en:00035] make GC-able finished tests.\n"
"    [Daniel Berger]\n"
"  * use also COLUMNS environment variable to guess terminal width.\n"
"  * make delta for assert_in_delta optional.\n"
"    [Nobuyoshi Nakada]\n"
"  * add assert_not_respond_to.\n"
"    [Nobuyoshi Nakada]\n"
"  * add assert_not_match. assert_no_match is deprecated.\n"
"    [Nobuyoshi Nakada]\n"
"  * add assert_not_in_delta.\n"
"    [Nobuyoshi Nakada]\n"
"  * add assert_in_epsilon.\n"
"    [Nobuyoshi Nakada]\n"
"  * add assert_not_in_epsilon.\n"
"    [Nobuyoshi Nakada]\n"
"  * add assert_include.\n"
"    [Nobuyoshi Nakada]\n"
"  * add assert_not_include.\n"
"    [Nobuyoshi Nakada]\n"
"  * add assert_empty.\n"
"    [Nobuyoshi Nakada]\n"
"  * add assert_not_empty.\n"
"    [Nobuyoshi Nakada]\n"
"  * notify require failed paths.\n"
"  * validate message value for assert.\n"
"  * show throughputs at the last.\n"
"  * support not ASCII compatible string diff.\n"
"  * support colorized diff on encoding different string.\n"
"  * normalize entry order of Hash for readable diff.\n"
"  * add --ignore-name option.\n"
"  * add --ignore-testcase option.\n"
"  * add assert_not_send."
msgstr ""

#: ./doc/text/news.textile:432
msgid ""
"* Thanks\n"
"  * Daniel Berger\n"
"  * Nobuyoshi Nakada"
msgstr ""

#: ./doc/text/news.textile:436
msgid "h2. 2.1.2 / 2010-11-25"
msgstr ""

#: ./doc/text/news.textile:438
msgid ""
"* 1 enhancement\n"
"  * support auto runner prepare hook."
msgstr ""

#: ./doc/text/news.textile:441
msgid "h2. 2.1.1 / 2010-07-29"
msgstr ""

#: ./doc/text/news.textile:443
msgid ""
"* 1 bug fix\n"
"  * [test-unit-users-en:00026] re-work tap runner.\n"
"    [Daniel Berger]"
msgstr ""

#: ./doc/text/news.textile:447 ./doc/text/news.textile:456
msgid ""
"* Thanks\n"
"  * Daniel Berger"
msgstr ""

#: ./doc/text/news.textile:450
msgid "=== 2.1.0 / 2010-07-17"
msgstr ""

#: ./doc/text/news.textile:452
msgid ""
"* 1 bug fix\n"
"  * [#28267] global config file ignored\n"
"    [Daniel Berger]"
msgstr ""

#: ./doc/text/news.textile:459
msgid "h2. 2.0.8 / 2010-06-02"
msgstr ""

#: ./doc/text/news.textile:461
msgid ""
"* 5 major enchancements\n"
"  * collect *_test.rb and *-test.rb files as test files.\n"
"  * [#28181] improve assert_in_delta message.\n"
"    [Suggested by David MARCHALAND]\n"
"  * show string encoding in assert_equal failure message if\n"
"    they are different.\n"
"  * change default color scheme:\n"
"    * success: green back + white\n"
"    * failure: red back + white\n"
"  * add capture_output."
msgstr ""

#: ./doc/text/news.textile:472
msgid ""
"* 2 bug fixes\n"
"  * fix a bug that console runner on verbose mode causes an\n"
"    error for long test name (>= 61).\n"
"  * [#28093] Autorunner ignores all files in a directory named test by default\n"
"    [Reported by Florian Frank]"
msgstr ""

#: ./doc/text/news.textile:478
msgid ""
"* Thanks\n"
"  * Florian Frank\n"
"  * David MARCHALAND"
msgstr ""

#: ./doc/text/news.textile:482
msgid "h2. 2.0.7 / 2010-03-09"
msgstr ""

#: ./doc/text/news.textile:484
msgid ""
"* 4 major enhancements\n"
"  * detect redefined test methods.\n"
"  * [INTERFACE IMCOMPATIBLE] multiple --name and --testcase\n"
"    options narrow down targets instead of adding targets.\n"
"  * [#27764] accept custom test_order for each test case.\n"
"    [Suggested by David MARCHALAND]\n"
"  * [#27790] ignore omitted tests from 'n% passed' report.\n"
"    [Suggested by Daniel Berger]"
msgstr ""

#: ./doc/text/news.textile:493
msgid ""
"* 2 minor enchancements\n"
"  * [#27832] ignore .git directory. [Suggested by Daniel Berger]\n"
"  * [#27792] require 'fileutils' and 'tmpdir' lazily for non-priority\n"
"    mode users. [Suggested by David MARCHALAND]"
msgstr ""

#: ./doc/text/news.textile:498
msgid ""
"* 2 bug fixes\n"
"  * [#27892] modify processed arguments array destructively.\n"
"    [Reported by Bob Saveland]\n"
"  * work without HOME environment variable.\n"
"    [Reported by Champak Ch]"
msgstr ""

#: ./doc/text/news.textile:504
msgid ""
"* Thanks\n"
"  * David MARCHALAND\n"
"  * Daniel Berger\n"
"  * Bob Saveland\n"
"  * Champak Ch"
msgstr ""

#: ./doc/text/news.textile:510
msgid "h2. 2.0.6 / 2010-01-09"
msgstr ""

#: ./doc/text/news.textile:512
msgid ""
"* 3 major enhancements\n"
"  * [#27380] Declarative syntax? [Daniel Berger]\n"
"    support declarative syntax:"
msgstr ""

#: ./doc/text/news.textile:516
msgid ""
"      test \"test description in natural language\" do\n"
"         ...\n"
"      end\n"
"  * support test description:\n"
"      description \"test description in natural language\"\n"
"      def test_my_test\n"
"         ...\n"
"      end\n"
"  * make max diff target string size customizable by\n"
"    TEST_UNIT_MAX_DIFF_TARGET_STRING_SIZE environment variable."
msgstr ""

#: ./doc/text/news.textile:527
msgid ""
"* 2 bug fixes\n"
"  * [#27374] omit_if unexpected behavior [David MARCHALAND]\n"
"  * fix a bug that tests in sub directories aren't load with --basedir.\n"
"    [Daniel Berger]"
msgstr ""

#: ./doc/text/news.textile:532
msgid ""
"* Thanks\n"
"  * David MARCHALAND\n"
"  * Daniel Berger"
msgstr ""

#: ./doc/text/news.textile:536
msgid "h2. 2.0.5 / 2009-10-18"
msgstr ""

#: ./doc/text/news.textile:538
msgid ""
"* 1 bug fixes\n"
"  * [#27314] fix diff may raise an exception. [Erik Hollensbe]"
msgstr ""

#: ./doc/text/news.textile:541
msgid ""
"* Thanks\n"
"  * Erik Hollensbe"
msgstr ""

#: ./doc/text/news.textile:544
msgid "h2. 2.0.4 / 2009-10-17"
msgstr ""

#: ./doc/text/news.textile:546
msgid ""
"* 4 major enhancements\n"
"  * use ~/.test-unit.yml as global configuration file.\n"
"  * add TAP runner. (--runner tap)\n"
"  * support colorized diff:\n"
"    http://test-unit.rubyforge.org/svn/trunk/images/color-diff.png\n"
"  * add Test::Unit::AutoRunner.default_runner= to specify default test runner."
msgstr ""

#: ./doc/text/news.textile:553
msgid ""
"* 4 minor enhancements\n"
"  * improve verbose mode output format. (use indent)\n"
"  * support NOT_PASS_THROUGH_EXCEPTIONS.\n"
"  * support arguments option in @#{runner}@_options.\n"
"  * TC_ -> Test in sample test case name."
msgstr ""

#: ./doc/text/news.textile:559
msgid ""
"* 1 bug fixes\n"
"  * [#27195] test-unit-2.0.3 + ruby-1.9.1 cannot properly test\n"
"    DelegateClass subclasses [Mike Pomraning]"
msgstr ""

#: ./doc/text/news.textile:563
msgid ""
"* Thanks\n"
"  * Mike Pomraning"
msgstr ""

#: ./doc/text/news.textile:566
msgid "h2. 2.0.3 / 2009-07-19"
msgstr ""

#: ./doc/text/news.textile:568
msgid ""
"* 6 major enhancements\n"
"  * add assert_predicate.\n"
"  * add assert_not_predicate.\n"
"  * [#24210] assert_kind_of supports an array of classes or modules.\n"
"    [Daniel Berger]\n"
"  * assert_instance_of supports an array of classes or modules.\n"
"  * add --default-priority option.\n"
"  * [#26627] add --order option. [Daniel Berger]"
msgstr ""

#: ./doc/text/news.textile:577
msgid ""
"* 4 minor enhancements\n"
"  * use yellow foreground + black background for error.\n"
"  * don't show diff for long string.\n"
"  * accept \"*term-color\" TERM environment as colorizable terminal.\n"
"    (e.g. Apple's Terminal)\n"
"  * [#26268] add a workaround for test-spec's after_all. [Angelo Lakra]"
msgstr ""

#: ./doc/text/news.textile:584
msgid ""
"* 1 bug fix\n"
"  * [#23586] re-support ruby 1.9.1. [Diego Pettenò]"
msgstr ""

#: ./doc/text/news.textile:587
msgid ""
"* Thanks\n"
"  * Diego Pettenò\n"
"  * Daniel Berger\n"
"  * Angelo Lakra"
msgstr ""

#: ./doc/text/news.textile:592
msgid "h2. 2.0.2 / 2008-12-21"
msgstr ""

#: ./doc/text/news.textile:594
msgid "* 2 major enhancements"
msgstr ""

#: ./doc/text/news.textile:596
msgid ""
"  * re-support ruby 1.8.5.\n"
"  * improve exception object comparison."
msgstr ""

#: ./doc/text/news.textile:599
msgid "* 3 bug fixes"
msgstr ""

#: ./doc/text/news.textile:601
msgid ""
"  * [#22723]: collector fails on anonymous classes\n"
"  * [#22986]: Test names with '?' blow up on Windows\n"
"  * [#22988]: don't create .test-result on non-priority mode."
msgstr ""

#: ./doc/text/news.textile:607
msgid ""
"  * Erik Hollensbe\n"
"  * Daniel Berger\n"
"  * Bill Lear"
msgstr ""

#: ./doc/text/news.textile:611
msgid "h2. 2.0.1 / 2008-11-09"
msgstr ""

#: ./doc/text/news.textile:613
msgid "* 19 major enhancements"
msgstr ""

#: ./doc/text/news.textile:615
msgid ""
"  * support ruby 1.9.1.\n"
"  * add run_test method to be extensible.\n"
"  * improve priority-mode auto off.\n"
"  * improve startup/shutdown RDoc. [Daniel Berger]\n"
"  * add assert_compare. [#20851] [Designing Patterns]\n"
"  * add assert_fail_assertion. [#20851] [Designing Patterns]\n"
"  * add assert_raise_message. [#20851] [Designing Patterns]\n"
"  * support folded diff.\n"
"  * add assert_raise_kind_of. [Daniel Berger]\n"
"  * ingore inherited test for nested test case.\n"
"  * add assert_const_defined.\n"
"  * add assert_not_const_defined.\n"
"  * support assert_raise with an exception object.\n"
"  * support assert_raise with no arguments that asserts any\n"
"    exception is raised. [#22602] [Daniel Berger]\n"
"  * support folded dot progress.\n"
"  * add --progress-row-max option.\n"
"  * support color scheme customize.\n"
"  * support configuration file. (YAML)\n"
"  * recognize test-XXX.rb files as test files not only test_XXX.rb"
msgstr ""

#: ./doc/text/news.textile:638
msgid ""
"  * Daniel Berger\n"
"  * Designing Patterns"
msgstr ""

#: ./doc/text/news.textile:641
msgid "h2. 2.0.0 / 2008-06-18"
msgstr ""

#: ./doc/text/news.textile:643
msgid "* 15 major enhancements"
msgstr ""

#: ./doc/text/news.textile:645
msgid ""
"  * support startup/shutdown. (test case level setup/teardown)\n"
"  * support multiple setup/teardown.\n"
"  * support pending.\n"
"  * support omission.\n"
"  * support notification.\n"
"  * support colorize.\n"
"  * support diff.\n"
"  * support test attribute.\n"
"  * add assert_boolean.\n"
"  * add assert_true.\n"
"  * add assert_false.\n"
"  * add --priority-mode option.\n"
"  * don't use ObjectSpace to collect test cases.\n"
"  * make more customizable. (additional options, exception handling and so on)\n"
"  * improve Emacs integration."
msgstr ""

#: ./doc/text/news.textile:661
msgid "* 4 major changes"
msgstr ""

#: ./doc/text/news.textile:663
msgid ""
"  * remove GTK+1 support.\n"
"  * split GTK+ runner as another gem.\n"
"  * split FOX runner as another gem.\n"
"  * split Tk runner as another gem."
msgstr ""

#: ./doc/text/news.textile:668
msgid "h2. 1.2.3 / 2008-02-25"
msgstr ""

#: ./doc/text/news.textile:670
msgid "* 1 major enhancement"
msgstr ""

#: ./doc/text/news.textile:672
msgid "  * Birthday (as a gem)!"
msgstr ""

#: ./doc/text/news.textile:137 ./doc/text/news.textile:154
#: ./doc/text/news.textile:186 ./doc/text/news.textile:209
#: ./doc/text/news.textile:21 ./doc/text/news.textile:45
#: ./doc/text/news.textile:257 ./doc/text/news.textile:271
#: ./doc/text/news.textile:294 ./doc/text/news.textile:318
#: ./doc/text/news.textile:337 ./doc/text/news.textile:365
#: ./doc/text/news.textile:75 ./doc/text/news.textile:109
msgid "h3. Thanks"
msgstr "h3. 感謝"

#: ./doc/text/news.textile:605 ./doc/text/news.textile:636
msgid "* Thanks"
msgstr "* 感謝"

# Test
#: ./lib/test-unit.rb:2 ./lib/test/unit.rb:2
#: ./lib/test/unit/assertionfailederror.rb:2
#: ./lib/test/unit/assertions.rb:2
#: ./lib/test/unit/attribute-matcher.rb:2
#: ./lib/test/unit/attribute.rb:2 ./lib/test/unit/autorunner.rb:2
#: ./lib/test/unit/code-snippet-fetcher.rb:2
#: ./lib/test/unit/collector.rb:2
#: ./lib/test/unit/collector/descendant.rb:2
#: ./lib/test/unit/collector/dir.rb:2
#: ./lib/test/unit/collector/load.rb:2
#: ./lib/test/unit/collector/objectspace.rb:2
#: ./lib/test/unit/collector/xml.rb:2 ./lib/test/unit/color-scheme.rb:2
#: ./lib/test/unit/color.rb:2 ./lib/test/unit/data.rb:2
#: ./lib/test/unit/diff.rb:2 ./lib/test/unit/error.rb:2
#: ./lib/test/unit/exceptionhandler.rb:2 ./lib/test/unit/failure.rb:2
#: ./lib/test/unit/fault-location-detector.rb:2
#: ./lib/test/unit/fixture.rb:2 ./lib/test/unit/notification.rb:2
#: ./lib/test/unit/omission.rb:2 ./lib/test/unit/pending.rb:2
#: ./lib/test/unit/priority.rb:2 ./lib/test/unit/runner/console.rb:2
#: ./lib/test/unit/runner/emacs.rb:2 ./lib/test/unit/runner/xml.rb:2
#: ./lib/test/unit/testcase.rb:2 ./lib/test/unit/testresult.rb:2
#: ./lib/test/unit/testsuite.rb:2 ./lib/test/unit/testsuitecreator.rb:2
#: ./lib/test/unit/ui/console/outputlevel.rb:2
#: ./lib/test/unit/ui/console/testrunner.rb:2
#: ./lib/test/unit/ui/emacs/testrunner.rb:2
#: ./lib/test/unit/ui/testrunner.rb:2
#: ./lib/test/unit/ui/testrunnermediator.rb:2
#: ./lib/test/unit/ui/testrunnerutilities.rb:2
#: ./lib/test/unit/ui/xml/testrunner.rb:2
#: ./lib/test/unit/util/backtracefilter.rb:2
#: ./lib/test/unit/util/method-owner-finder.rb:2
#: ./lib/test/unit/util/observable.rb:2
#: ./lib/test/unit/util/output.rb:2
#: ./lib/test/unit/util/procwrapper.rb:2 ./lib/test/unit/version.rb:2
msgid "port of Python's difflib."
msgstr ""

# Test
#: ./lib/test-unit.rb:4 ./lib/test/unit.rb:4
#: ./lib/test/unit/assertionfailederror.rb:4
#: ./lib/test/unit/assertions.rb:4
#: ./lib/test/unit/attribute-matcher.rb:4
#: ./lib/test/unit/attribute.rb:4 ./lib/test/unit/autorunner.rb:4
#: ./lib/test/unit/code-snippet-fetcher.rb:4
#: ./lib/test/unit/collector.rb:4
#: ./lib/test/unit/collector/descendant.rb:4
#: ./lib/test/unit/collector/dir.rb:4
#: ./lib/test/unit/collector/load.rb:4
#: ./lib/test/unit/collector/objectspace.rb:4
#: ./lib/test/unit/collector/xml.rb:4 ./lib/test/unit/color-scheme.rb:4
#: ./lib/test/unit/color.rb:4 ./lib/test/unit/data.rb:4
#: ./lib/test/unit/diff.rb:4 ./lib/test/unit/error.rb:4
#: ./lib/test/unit/exceptionhandler.rb:4 ./lib/test/unit/failure.rb:4
#: ./lib/test/unit/fault-location-detector.rb:4
#: ./lib/test/unit/fixture.rb:4 ./lib/test/unit/notification.rb:4
#: ./lib/test/unit/omission.rb:4 ./lib/test/unit/pending.rb:4
#: ./lib/test/unit/priority.rb:4 ./lib/test/unit/runner/console.rb:4
#: ./lib/test/unit/runner/emacs.rb:4 ./lib/test/unit/runner/xml.rb:4
#: ./lib/test/unit/testcase.rb:4 ./lib/test/unit/testresult.rb:4
#: ./lib/test/unit/testsuite.rb:4 ./lib/test/unit/testsuitecreator.rb:4
#: ./lib/test/unit/ui/console/outputlevel.rb:4
#: ./lib/test/unit/ui/console/testrunner.rb:4
#: ./lib/test/unit/ui/emacs/testrunner.rb:4
#: ./lib/test/unit/ui/testrunner.rb:4
#: ./lib/test/unit/ui/testrunnermediator.rb:4
#: ./lib/test/unit/ui/testrunnerutilities.rb:4
#: ./lib/test/unit/ui/xml/testrunner.rb:4
#: ./lib/test/unit/util/backtracefilter.rb:4
#: ./lib/test/unit/util/method-owner-finder.rb:4
#: ./lib/test/unit/util/observable.rb:4
#: ./lib/test/unit/util/output.rb:4
#: ./lib/test/unit/util/procwrapper.rb:4 ./lib/test/unit/version.rb:4
msgid ""
"Copyright (c) 2001-2008 Python Software Foundation; All Rights Reserved\n"
"Copyright (c) 2008-2011 Kouhei Sutou; All Rights Reserved"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:6 ./lib/test/unit.rb:6
#: ./lib/test/unit/assertionfailederror.rb:6
#: ./lib/test/unit/assertions.rb:6
#: ./lib/test/unit/attribute-matcher.rb:6
#: ./lib/test/unit/attribute.rb:6 ./lib/test/unit/autorunner.rb:6
#: ./lib/test/unit/code-snippet-fetcher.rb:6
#: ./lib/test/unit/collector.rb:6
#: ./lib/test/unit/collector/descendant.rb:6
#: ./lib/test/unit/collector/dir.rb:6
#: ./lib/test/unit/collector/load.rb:6
#: ./lib/test/unit/collector/objectspace.rb:6
#: ./lib/test/unit/collector/xml.rb:6 ./lib/test/unit/color-scheme.rb:6
#: ./lib/test/unit/color.rb:6 ./lib/test/unit/data.rb:6
#: ./lib/test/unit/diff.rb:6 ./lib/test/unit/error.rb:6
#: ./lib/test/unit/exceptionhandler.rb:6 ./lib/test/unit/failure.rb:6
#: ./lib/test/unit/fault-location-detector.rb:6
#: ./lib/test/unit/fixture.rb:6 ./lib/test/unit/notification.rb:6
#: ./lib/test/unit/omission.rb:6 ./lib/test/unit/pending.rb:6
#: ./lib/test/unit/priority.rb:6 ./lib/test/unit/runner/console.rb:6
#: ./lib/test/unit/runner/emacs.rb:6 ./lib/test/unit/runner/xml.rb:6
#: ./lib/test/unit/testcase.rb:6 ./lib/test/unit/testresult.rb:6
#: ./lib/test/unit/testsuite.rb:6 ./lib/test/unit/testsuitecreator.rb:6
#: ./lib/test/unit/ui/console/outputlevel.rb:6
#: ./lib/test/unit/ui/console/testrunner.rb:6
#: ./lib/test/unit/ui/emacs/testrunner.rb:6
#: ./lib/test/unit/ui/testrunner.rb:6
#: ./lib/test/unit/ui/testrunnermediator.rb:6
#: ./lib/test/unit/ui/testrunnerutilities.rb:6
#: ./lib/test/unit/ui/xml/testrunner.rb:6
#: ./lib/test/unit/util/backtracefilter.rb:6
#: ./lib/test/unit/util/method-owner-finder.rb:6
#: ./lib/test/unit/util/observable.rb:6
#: ./lib/test/unit/util/output.rb:6
#: ./lib/test/unit/util/procwrapper.rb:6 ./lib/test/unit/version.rb:6
msgid "= Test::Unit - Ruby Unit Testing Framework"
msgstr ""

# Test
#: ./lib/test-unit.rb:7 ./lib/test/unit.rb:7
#: ./lib/test/unit/assertionfailederror.rb:7
#: ./lib/test/unit/assertions.rb:7
#: ./lib/test/unit/attribute-matcher.rb:7
#: ./lib/test/unit/attribute.rb:7 ./lib/test/unit/autorunner.rb:7
#: ./lib/test/unit/code-snippet-fetcher.rb:7
#: ./lib/test/unit/collector.rb:7
#: ./lib/test/unit/collector/descendant.rb:7
#: ./lib/test/unit/collector/dir.rb:7
#: ./lib/test/unit/collector/load.rb:7
#: ./lib/test/unit/collector/objectspace.rb:7
#: ./lib/test/unit/collector/xml.rb:7 ./lib/test/unit/color-scheme.rb:7
#: ./lib/test/unit/color.rb:7 ./lib/test/unit/data.rb:7
#: ./lib/test/unit/diff.rb:7 ./lib/test/unit/error.rb:7
#: ./lib/test/unit/exceptionhandler.rb:7 ./lib/test/unit/failure.rb:7
#: ./lib/test/unit/fault-location-detector.rb:7
#: ./lib/test/unit/fixture.rb:7 ./lib/test/unit/notification.rb:7
#: ./lib/test/unit/omission.rb:7 ./lib/test/unit/pending.rb:7
#: ./lib/test/unit/priority.rb:7 ./lib/test/unit/runner/console.rb:7
#: ./lib/test/unit/runner/emacs.rb:7 ./lib/test/unit/runner/xml.rb:7
#: ./lib/test/unit/testcase.rb:7 ./lib/test/unit/testresult.rb:7
#: ./lib/test/unit/testsuite.rb:7 ./lib/test/unit/testsuitecreator.rb:7
#: ./lib/test/unit/ui/console/outputlevel.rb:7
#: ./lib/test/unit/ui/console/testrunner.rb:7
#: ./lib/test/unit/ui/emacs/testrunner.rb:7
#: ./lib/test/unit/ui/testrunner.rb:7
#: ./lib/test/unit/ui/testrunnermediator.rb:7
#: ./lib/test/unit/ui/testrunnerutilities.rb:7
#: ./lib/test/unit/ui/xml/testrunner.rb:7
#: ./lib/test/unit/util/backtracefilter.rb:7
#: ./lib/test/unit/util/method-owner-finder.rb:7
#: ./lib/test/unit/util/observable.rb:7
#: ./lib/test/unit/util/output.rb:7
#: ./lib/test/unit/util/procwrapper.rb:7 ./lib/test/unit/version.rb:7
msgid ""
"It is free software, and is distributed under the Ruby\n"
"license and/or the PSF license. See the COPYING file and\n"
"PSFL file."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:8 ./lib/test/unit.rb:8
#: ./lib/test/unit/assertionfailederror.rb:8
#: ./lib/test/unit/assertions.rb:8
#: ./lib/test/unit/attribute-matcher.rb:8
#: ./lib/test/unit/attribute.rb:8 ./lib/test/unit/autorunner.rb:8
#: ./lib/test/unit/code-snippet-fetcher.rb:8
#: ./lib/test/unit/collector.rb:8
#: ./lib/test/unit/collector/descendant.rb:8
#: ./lib/test/unit/collector/dir.rb:8
#: ./lib/test/unit/collector/load.rb:8
#: ./lib/test/unit/collector/objectspace.rb:8
#: ./lib/test/unit/collector/xml.rb:8 ./lib/test/unit/color-scheme.rb:8
#: ./lib/test/unit/color.rb:8 ./lib/test/unit/data.rb:8
#: ./lib/test/unit/diff.rb:8 ./lib/test/unit/error.rb:8
#: ./lib/test/unit/exceptionhandler.rb:8 ./lib/test/unit/failure.rb:8
#: ./lib/test/unit/fault-location-detector.rb:8
#: ./lib/test/unit/fixture.rb:8 ./lib/test/unit/notification.rb:8
#: ./lib/test/unit/omission.rb:8 ./lib/test/unit/pending.rb:8
#: ./lib/test/unit/priority.rb:8 ./lib/test/unit/runner/console.rb:8
#: ./lib/test/unit/runner/emacs.rb:8 ./lib/test/unit/runner/xml.rb:8
#: ./lib/test/unit/testcase.rb:8 ./lib/test/unit/testresult.rb:8
#: ./lib/test/unit/testsuite.rb:8 ./lib/test/unit/testsuitecreator.rb:8
#: ./lib/test/unit/ui/console/outputlevel.rb:8
#: ./lib/test/unit/ui/console/testrunner.rb:8
#: ./lib/test/unit/ui/emacs/testrunner.rb:8
#: ./lib/test/unit/ui/testrunner.rb:8
#: ./lib/test/unit/ui/testrunnermediator.rb:8
#: ./lib/test/unit/ui/testrunnerutilities.rb:8
#: ./lib/test/unit/ui/xml/testrunner.rb:8
#: ./lib/test/unit/util/backtracefilter.rb:8
#: ./lib/test/unit/util/method-owner-finder.rb:8
#: ./lib/test/unit/util/observable.rb:8
#: ./lib/test/unit/util/output.rb:8
#: ./lib/test/unit/util/procwrapper.rb:8 ./lib/test/unit/version.rb:8
msgid "== Introduction"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:10 ./lib/test/unit.rb:10
#: ./lib/test/unit/assertionfailederror.rb:10
#: ./lib/test/unit/assertions.rb:10
#: ./lib/test/unit/attribute-matcher.rb:10
#: ./lib/test/unit/attribute.rb:10 ./lib/test/unit/autorunner.rb:10
#: ./lib/test/unit/code-snippet-fetcher.rb:10
#: ./lib/test/unit/collector.rb:10
#: ./lib/test/unit/collector/descendant.rb:10
#: ./lib/test/unit/collector/dir.rb:10
#: ./lib/test/unit/collector/load.rb:10
#: ./lib/test/unit/collector/objectspace.rb:10
#: ./lib/test/unit/collector/xml.rb:10
#: ./lib/test/unit/color-scheme.rb:10 ./lib/test/unit/color.rb:10
#: ./lib/test/unit/data.rb:10 ./lib/test/unit/diff.rb:10
#: ./lib/test/unit/error.rb:10 ./lib/test/unit/exceptionhandler.rb:10
#: ./lib/test/unit/failure.rb:10
#: ./lib/test/unit/fault-location-detector.rb:10
#: ./lib/test/unit/fixture.rb:10 ./lib/test/unit/notification.rb:10
#: ./lib/test/unit/omission.rb:10 ./lib/test/unit/pending.rb:10
#: ./lib/test/unit/priority.rb:10 ./lib/test/unit/runner/console.rb:10
#: ./lib/test/unit/runner/emacs.rb:10 ./lib/test/unit/runner/xml.rb:10
#: ./lib/test/unit/testcase.rb:10 ./lib/test/unit/testresult.rb:10
#: ./lib/test/unit/testsuite.rb:10
#: ./lib/test/unit/testsuitecreator.rb:10
#: ./lib/test/unit/ui/console/outputlevel.rb:10
#: ./lib/test/unit/ui/console/testrunner.rb:10
#: ./lib/test/unit/ui/emacs/testrunner.rb:10
#: ./lib/test/unit/ui/testrunner.rb:10
#: ./lib/test/unit/ui/testrunnermediator.rb:10
#: ./lib/test/unit/ui/testrunnerutilities.rb:10
#: ./lib/test/unit/ui/xml/testrunner.rb:10
#: ./lib/test/unit/util/backtracefilter.rb:10
#: ./lib/test/unit/util/method-owner-finder.rb:10
#: ./lib/test/unit/util/observable.rb:10
#: ./lib/test/unit/util/output.rb:10
#: ./lib/test/unit/util/procwrapper.rb:10 ./lib/test/unit/version.rb:10
msgid ""
"Unit testing is making waves all over the place, largely due to the\n"
"fact that it is a core practice of XP. While XP is great, unit testing\n"
"has been around for a long time and has always been a good idea. One\n"
"of the keys to good unit testing, though, is not just writing tests,\n"
"but having tests. What's the difference? Well, if you just _write_ a\n"
"test and throw it away, you have no guarantee that something won't\n"
"change later which breaks your code. If, on the other hand, you _have_\n"
"tests (obviously you have to write them first), and run them as often\n"
"as possible, you slowly build up a wall of things that cannot break\n"
"without you immediately knowing about it. This is when unit testing\n"
"hits its peak usefulness."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:22 ./lib/test/unit.rb:22
#: ./lib/test/unit/assertionfailederror.rb:22
#: ./lib/test/unit/assertions.rb:22
#: ./lib/test/unit/attribute-matcher.rb:22
#: ./lib/test/unit/attribute.rb:22 ./lib/test/unit/autorunner.rb:22
#: ./lib/test/unit/code-snippet-fetcher.rb:22
#: ./lib/test/unit/collector.rb:22
#: ./lib/test/unit/collector/descendant.rb:22
#: ./lib/test/unit/collector/dir.rb:22
#: ./lib/test/unit/collector/load.rb:22
#: ./lib/test/unit/collector/objectspace.rb:22
#: ./lib/test/unit/collector/xml.rb:22
#: ./lib/test/unit/color-scheme.rb:22 ./lib/test/unit/color.rb:22
#: ./lib/test/unit/data.rb:22 ./lib/test/unit/diff.rb:22
#: ./lib/test/unit/error.rb:22 ./lib/test/unit/exceptionhandler.rb:22
#: ./lib/test/unit/failure.rb:22
#: ./lib/test/unit/fault-location-detector.rb:22
#: ./lib/test/unit/fixture.rb:22 ./lib/test/unit/notification.rb:22
#: ./lib/test/unit/omission.rb:22 ./lib/test/unit/pending.rb:22
#: ./lib/test/unit/priority.rb:22 ./lib/test/unit/runner/console.rb:22
#: ./lib/test/unit/runner/emacs.rb:22 ./lib/test/unit/runner/xml.rb:22
#: ./lib/test/unit/testcase.rb:22 ./lib/test/unit/testresult.rb:22
#: ./lib/test/unit/testsuite.rb:22
#: ./lib/test/unit/testsuitecreator.rb:22
#: ./lib/test/unit/ui/console/outputlevel.rb:22
#: ./lib/test/unit/ui/console/testrunner.rb:22
#: ./lib/test/unit/ui/emacs/testrunner.rb:22
#: ./lib/test/unit/ui/testrunner.rb:22
#: ./lib/test/unit/ui/testrunnermediator.rb:22
#: ./lib/test/unit/ui/testrunnerutilities.rb:22
#: ./lib/test/unit/ui/xml/testrunner.rb:22
#: ./lib/test/unit/util/backtracefilter.rb:22
#: ./lib/test/unit/util/method-owner-finder.rb:22
#: ./lib/test/unit/util/observable.rb:22
#: ./lib/test/unit/util/output.rb:22
#: ./lib/test/unit/util/procwrapper.rb:22 ./lib/test/unit/version.rb:22
msgid ""
"Enter Test::Unit, a framework for unit testing in Ruby, helping you to\n"
"design, debug and evaluate your code by making it easy to write and\n"
"have tests for it."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:27 ./lib/test/unit.rb:27
#: ./lib/test/unit/assertionfailederror.rb:27
#: ./lib/test/unit/assertions.rb:27
#: ./lib/test/unit/attribute-matcher.rb:27
#: ./lib/test/unit/attribute.rb:27 ./lib/test/unit/autorunner.rb:27
#: ./lib/test/unit/code-snippet-fetcher.rb:27
#: ./lib/test/unit/collector.rb:27
#: ./lib/test/unit/collector/descendant.rb:27
#: ./lib/test/unit/collector/dir.rb:27
#: ./lib/test/unit/collector/load.rb:27
#: ./lib/test/unit/collector/objectspace.rb:27
#: ./lib/test/unit/collector/xml.rb:27
#: ./lib/test/unit/color-scheme.rb:27 ./lib/test/unit/color.rb:27
#: ./lib/test/unit/data.rb:27 ./lib/test/unit/diff.rb:27
#: ./lib/test/unit/error.rb:27 ./lib/test/unit/exceptionhandler.rb:27
#: ./lib/test/unit/failure.rb:27
#: ./lib/test/unit/fault-location-detector.rb:27
#: ./lib/test/unit/fixture.rb:27 ./lib/test/unit/notification.rb:27
#: ./lib/test/unit/omission.rb:27 ./lib/test/unit/pending.rb:27
#: ./lib/test/unit/priority.rb:27 ./lib/test/unit/runner/console.rb:27
#: ./lib/test/unit/runner/emacs.rb:27 ./lib/test/unit/runner/xml.rb:27
#: ./lib/test/unit/testcase.rb:27 ./lib/test/unit/testresult.rb:27
#: ./lib/test/unit/testsuite.rb:27
#: ./lib/test/unit/testsuitecreator.rb:27
#: ./lib/test/unit/ui/console/outputlevel.rb:27
#: ./lib/test/unit/ui/console/testrunner.rb:27
#: ./lib/test/unit/ui/emacs/testrunner.rb:27
#: ./lib/test/unit/ui/testrunner.rb:27
#: ./lib/test/unit/ui/testrunnermediator.rb:27
#: ./lib/test/unit/ui/testrunnerutilities.rb:27
#: ./lib/test/unit/ui/xml/testrunner.rb:27
#: ./lib/test/unit/util/backtracefilter.rb:27
#: ./lib/test/unit/util/method-owner-finder.rb:27
#: ./lib/test/unit/util/observable.rb:27
#: ./lib/test/unit/util/output.rb:27
#: ./lib/test/unit/util/procwrapper.rb:27 ./lib/test/unit/version.rb:27
msgid "== Notes"
msgstr ""

# #run
#: ./lib/test-unit.rb:28
msgid ""
"experimental. It is for \"ruby -rtest-unit -e run test/test_*.rb\".\n"
"Is this API OK or dirty?"
msgstr ""

#: ./lib/test-unit.rb:29 ./lib/test/unit.rb:29
#: ./lib/test/unit/assertionfailederror.rb:29
#: ./lib/test/unit/assertions.rb:29
#: ./lib/test/unit/attribute-matcher.rb:29
#: ./lib/test/unit/attribute.rb:29 ./lib/test/unit/autorunner.rb:29
#: ./lib/test/unit/code-snippet-fetcher.rb:29
#: ./lib/test/unit/collector.rb:29
#: ./lib/test/unit/collector/descendant.rb:29
#: ./lib/test/unit/collector/dir.rb:29
#: ./lib/test/unit/collector/load.rb:29
#: ./lib/test/unit/collector/objectspace.rb:29
#: ./lib/test/unit/collector/xml.rb:29
#: ./lib/test/unit/color-scheme.rb:29 ./lib/test/unit/color.rb:29
#: ./lib/test/unit/data.rb:29 ./lib/test/unit/diff.rb:29
#: ./lib/test/unit/error.rb:29 ./lib/test/unit/exceptionhandler.rb:29
#: ./lib/test/unit/failure.rb:29
#: ./lib/test/unit/fault-location-detector.rb:29
#: ./lib/test/unit/fixture.rb:29 ./lib/test/unit/notification.rb:29
#: ./lib/test/unit/omission.rb:29 ./lib/test/unit/pending.rb:29
#: ./lib/test/unit/priority.rb:29 ./lib/test/unit/runner/console.rb:29
#: ./lib/test/unit/runner/emacs.rb:29 ./lib/test/unit/runner/xml.rb:29
#: ./lib/test/unit/testcase.rb:29 ./lib/test/unit/testresult.rb:29
#: ./lib/test/unit/testsuite.rb:29
#: ./lib/test/unit/testsuitecreator.rb:29
#: ./lib/test/unit/ui/console/outputlevel.rb:29
#: ./lib/test/unit/ui/console/testrunner.rb:29
#: ./lib/test/unit/ui/emacs/testrunner.rb:29
#: ./lib/test/unit/ui/testrunner.rb:29
#: ./lib/test/unit/ui/testrunnermediator.rb:29
#: ./lib/test/unit/ui/testrunnerutilities.rb:29
#: ./lib/test/unit/ui/xml/testrunner.rb:29
#: ./lib/test/unit/util/backtracefilter.rb:29
#: ./lib/test/unit/util/method-owner-finder.rb:29
#: ./lib/test/unit/util/observable.rb:29
#: ./lib/test/unit/util/output.rb:29
#: ./lib/test/unit/util/procwrapper.rb:29 ./lib/test/unit/version.rb:29
msgid "Test::Unit has grown out of and superceded Lapidary."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:32 ./lib/test/unit.rb:32
#: ./lib/test/unit/assertionfailederror.rb:32
#: ./lib/test/unit/assertions.rb:32
#: ./lib/test/unit/attribute-matcher.rb:32
#: ./lib/test/unit/attribute.rb:32 ./lib/test/unit/autorunner.rb:32
#: ./lib/test/unit/code-snippet-fetcher.rb:32
#: ./lib/test/unit/collector.rb:32
#: ./lib/test/unit/collector/descendant.rb:32
#: ./lib/test/unit/collector/dir.rb:32
#: ./lib/test/unit/collector/load.rb:32
#: ./lib/test/unit/collector/objectspace.rb:32
#: ./lib/test/unit/collector/xml.rb:32
#: ./lib/test/unit/color-scheme.rb:32 ./lib/test/unit/color.rb:32
#: ./lib/test/unit/data.rb:32 ./lib/test/unit/diff.rb:32
#: ./lib/test/unit/error.rb:32 ./lib/test/unit/exceptionhandler.rb:32
#: ./lib/test/unit/failure.rb:32
#: ./lib/test/unit/fault-location-detector.rb:32
#: ./lib/test/unit/fixture.rb:32 ./lib/test/unit/notification.rb:32
#: ./lib/test/unit/omission.rb:32 ./lib/test/unit/pending.rb:32
#: ./lib/test/unit/priority.rb:32 ./lib/test/unit/runner/console.rb:32
#: ./lib/test/unit/runner/emacs.rb:32 ./lib/test/unit/runner/xml.rb:32
#: ./lib/test/unit/testcase.rb:32 ./lib/test/unit/testresult.rb:32
#: ./lib/test/unit/testsuite.rb:32
#: ./lib/test/unit/testsuitecreator.rb:32
#: ./lib/test/unit/ui/console/outputlevel.rb:32
#: ./lib/test/unit/ui/console/testrunner.rb:32
#: ./lib/test/unit/ui/emacs/testrunner.rb:32
#: ./lib/test/unit/ui/testrunner.rb:32
#: ./lib/test/unit/ui/testrunnermediator.rb:32
#: ./lib/test/unit/ui/testrunnerutilities.rb:32
#: ./lib/test/unit/ui/xml/testrunner.rb:32
#: ./lib/test/unit/util/backtracefilter.rb:32
#: ./lib/test/unit/util/method-owner-finder.rb:32
#: ./lib/test/unit/util/observable.rb:32
#: ./lib/test/unit/util/output.rb:32
#: ./lib/test/unit/util/procwrapper.rb:32 ./lib/test/unit/version.rb:32
msgid "== Feedback"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:34 ./lib/test/unit.rb:34
#: ./lib/test/unit/assertionfailederror.rb:34
#: ./lib/test/unit/assertions.rb:34
#: ./lib/test/unit/attribute-matcher.rb:34
#: ./lib/test/unit/attribute.rb:34 ./lib/test/unit/autorunner.rb:34
#: ./lib/test/unit/code-snippet-fetcher.rb:34
#: ./lib/test/unit/collector.rb:34
#: ./lib/test/unit/collector/descendant.rb:34
#: ./lib/test/unit/collector/dir.rb:34
#: ./lib/test/unit/collector/load.rb:34
#: ./lib/test/unit/collector/objectspace.rb:34
#: ./lib/test/unit/collector/xml.rb:34
#: ./lib/test/unit/color-scheme.rb:34 ./lib/test/unit/color.rb:34
#: ./lib/test/unit/data.rb:34 ./lib/test/unit/diff.rb:34
#: ./lib/test/unit/error.rb:34 ./lib/test/unit/exceptionhandler.rb:34
#: ./lib/test/unit/failure.rb:34
#: ./lib/test/unit/fault-location-detector.rb:34
#: ./lib/test/unit/fixture.rb:34 ./lib/test/unit/notification.rb:34
#: ./lib/test/unit/omission.rb:34 ./lib/test/unit/pending.rb:34
#: ./lib/test/unit/priority.rb:34 ./lib/test/unit/runner/console.rb:34
#: ./lib/test/unit/runner/emacs.rb:34 ./lib/test/unit/runner/xml.rb:34
#: ./lib/test/unit/testcase.rb:34 ./lib/test/unit/testresult.rb:34
#: ./lib/test/unit/testsuite.rb:34
#: ./lib/test/unit/testsuitecreator.rb:34
#: ./lib/test/unit/ui/console/outputlevel.rb:34
#: ./lib/test/unit/ui/console/testrunner.rb:34
#: ./lib/test/unit/ui/emacs/testrunner.rb:34
#: ./lib/test/unit/ui/testrunner.rb:34
#: ./lib/test/unit/ui/testrunnermediator.rb:34
#: ./lib/test/unit/ui/testrunnerutilities.rb:34
#: ./lib/test/unit/ui/xml/testrunner.rb:34
#: ./lib/test/unit/util/backtracefilter.rb:34
#: ./lib/test/unit/util/method-owner-finder.rb:34
#: ./lib/test/unit/util/observable.rb:34
#: ./lib/test/unit/util/output.rb:34
#: ./lib/test/unit/util/procwrapper.rb:34 ./lib/test/unit/version.rb:34
msgid ""
"I like (and do my best to practice) XP, so I value early releases,\n"
"user feedback, and clean, simple, expressive code. There is always\n"
"room for improvement in everything I do, and Test::Unit is no\n"
"exception. Please, let me know what you think of Test::Unit as it\n"
"stands, and what you'd like to see expanded/changed/improved/etc. If\n"
"you find a bug, let me know ASAP; one good way to let me know what the\n"
"bug is is to submit a new test that catches it :-) Also, I'd love to\n"
"hear about any successes you have with Test::Unit, and any\n"
"documentation you might add will be greatly appreciated. My contact\n"
"info is below."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:46 ./lib/test/unit.rb:46
#: ./lib/test/unit/assertionfailederror.rb:46
#: ./lib/test/unit/assertions.rb:46
#: ./lib/test/unit/attribute-matcher.rb:46
#: ./lib/test/unit/attribute.rb:46 ./lib/test/unit/autorunner.rb:46
#: ./lib/test/unit/code-snippet-fetcher.rb:46
#: ./lib/test/unit/collector.rb:46
#: ./lib/test/unit/collector/descendant.rb:46
#: ./lib/test/unit/collector/dir.rb:46
#: ./lib/test/unit/collector/load.rb:46
#: ./lib/test/unit/collector/objectspace.rb:46
#: ./lib/test/unit/collector/xml.rb:46
#: ./lib/test/unit/color-scheme.rb:46 ./lib/test/unit/color.rb:46
#: ./lib/test/unit/data.rb:46 ./lib/test/unit/diff.rb:46
#: ./lib/test/unit/error.rb:46 ./lib/test/unit/exceptionhandler.rb:46
#: ./lib/test/unit/failure.rb:46
#: ./lib/test/unit/fault-location-detector.rb:46
#: ./lib/test/unit/fixture.rb:46 ./lib/test/unit/notification.rb:46
#: ./lib/test/unit/omission.rb:46 ./lib/test/unit/pending.rb:46
#: ./lib/test/unit/priority.rb:46 ./lib/test/unit/runner/console.rb:46
#: ./lib/test/unit/runner/emacs.rb:46 ./lib/test/unit/runner/xml.rb:46
#: ./lib/test/unit/testcase.rb:46 ./lib/test/unit/testresult.rb:46
#: ./lib/test/unit/testsuite.rb:46
#: ./lib/test/unit/testsuitecreator.rb:46
#: ./lib/test/unit/ui/console/outputlevel.rb:46
#: ./lib/test/unit/ui/console/testrunner.rb:46
#: ./lib/test/unit/ui/emacs/testrunner.rb:46
#: ./lib/test/unit/ui/testrunner.rb:46
#: ./lib/test/unit/ui/testrunnermediator.rb:46
#: ./lib/test/unit/ui/testrunnerutilities.rb:46
#: ./lib/test/unit/ui/xml/testrunner.rb:46
#: ./lib/test/unit/util/backtracefilter.rb:46
#: ./lib/test/unit/util/method-owner-finder.rb:46
#: ./lib/test/unit/util/observable.rb:46
#: ./lib/test/unit/util/output.rb:46
#: ./lib/test/unit/util/procwrapper.rb:46 ./lib/test/unit/version.rb:46
msgid "== Contact Information"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:48 ./lib/test/unit.rb:48
#: ./lib/test/unit/assertionfailederror.rb:48
#: ./lib/test/unit/assertions.rb:48
#: ./lib/test/unit/attribute-matcher.rb:48
#: ./lib/test/unit/attribute.rb:48 ./lib/test/unit/autorunner.rb:48
#: ./lib/test/unit/code-snippet-fetcher.rb:48
#: ./lib/test/unit/collector.rb:48
#: ./lib/test/unit/collector/descendant.rb:48
#: ./lib/test/unit/collector/dir.rb:48
#: ./lib/test/unit/collector/load.rb:48
#: ./lib/test/unit/collector/objectspace.rb:48
#: ./lib/test/unit/collector/xml.rb:48
#: ./lib/test/unit/color-scheme.rb:48 ./lib/test/unit/color.rb:48
#: ./lib/test/unit/data.rb:48 ./lib/test/unit/diff.rb:48
#: ./lib/test/unit/error.rb:48 ./lib/test/unit/exceptionhandler.rb:48
#: ./lib/test/unit/failure.rb:48
#: ./lib/test/unit/fault-location-detector.rb:48
#: ./lib/test/unit/fixture.rb:48 ./lib/test/unit/notification.rb:48
#: ./lib/test/unit/omission.rb:48 ./lib/test/unit/pending.rb:48
#: ./lib/test/unit/priority.rb:48 ./lib/test/unit/runner/console.rb:48
#: ./lib/test/unit/runner/emacs.rb:48 ./lib/test/unit/runner/xml.rb:48
#: ./lib/test/unit/testcase.rb:48 ./lib/test/unit/testresult.rb:48
#: ./lib/test/unit/testsuite.rb:48
#: ./lib/test/unit/testsuitecreator.rb:48
#: ./lib/test/unit/ui/console/outputlevel.rb:48
#: ./lib/test/unit/ui/console/testrunner.rb:48
#: ./lib/test/unit/ui/emacs/testrunner.rb:48
#: ./lib/test/unit/ui/testrunner.rb:48
#: ./lib/test/unit/ui/testrunnermediator.rb:48
#: ./lib/test/unit/ui/testrunnerutilities.rb:48
#: ./lib/test/unit/ui/xml/testrunner.rb:48
#: ./lib/test/unit/util/backtracefilter.rb:48
#: ./lib/test/unit/util/method-owner-finder.rb:48
#: ./lib/test/unit/util/observable.rb:48
#: ./lib/test/unit/util/output.rb:48
#: ./lib/test/unit/util/procwrapper.rb:48 ./lib/test/unit/version.rb:48
msgid ""
"A lot of discussion happens about Ruby in general on the ruby-talk\n"
"mailing list (http://www.ruby-lang.org/en/ml.html), and you can ask\n"
"any questions you might have there. I monitor the list, as do many\n"
"other helpful Rubyists, and you're sure to get a quick answer. Of\n"
"course, you're also welcome to email me (Nathaniel Talbott) directly\n"
"at mailto:testunit@talbott.ws, and I'll do my best to help you out."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:56 ./lib/test/unit.rb:56
#: ./lib/test/unit/assertionfailederror.rb:56
#: ./lib/test/unit/assertions.rb:56
#: ./lib/test/unit/attribute-matcher.rb:56
#: ./lib/test/unit/attribute.rb:56 ./lib/test/unit/autorunner.rb:56
#: ./lib/test/unit/code-snippet-fetcher.rb:56
#: ./lib/test/unit/collector.rb:56
#: ./lib/test/unit/collector/descendant.rb:56
#: ./lib/test/unit/collector/dir.rb:56
#: ./lib/test/unit/collector/load.rb:56
#: ./lib/test/unit/collector/objectspace.rb:56
#: ./lib/test/unit/collector/xml.rb:56
#: ./lib/test/unit/color-scheme.rb:56 ./lib/test/unit/color.rb:56
#: ./lib/test/unit/data.rb:56 ./lib/test/unit/diff.rb:56
#: ./lib/test/unit/error.rb:56 ./lib/test/unit/exceptionhandler.rb:56
#: ./lib/test/unit/failure.rb:56
#: ./lib/test/unit/fault-location-detector.rb:56
#: ./lib/test/unit/fixture.rb:56 ./lib/test/unit/notification.rb:56
#: ./lib/test/unit/omission.rb:56 ./lib/test/unit/pending.rb:56
#: ./lib/test/unit/priority.rb:56 ./lib/test/unit/runner/console.rb:56
#: ./lib/test/unit/runner/emacs.rb:56 ./lib/test/unit/runner/xml.rb:56
#: ./lib/test/unit/testcase.rb:56 ./lib/test/unit/testresult.rb:56
#: ./lib/test/unit/testsuite.rb:56
#: ./lib/test/unit/testsuitecreator.rb:56
#: ./lib/test/unit/ui/console/outputlevel.rb:56
#: ./lib/test/unit/ui/console/testrunner.rb:56
#: ./lib/test/unit/ui/emacs/testrunner.rb:56
#: ./lib/test/unit/ui/testrunner.rb:56
#: ./lib/test/unit/ui/testrunnermediator.rb:56
#: ./lib/test/unit/ui/testrunnerutilities.rb:56
#: ./lib/test/unit/ui/xml/testrunner.rb:56
#: ./lib/test/unit/util/backtracefilter.rb:56
#: ./lib/test/unit/util/method-owner-finder.rb:56
#: ./lib/test/unit/util/observable.rb:56
#: ./lib/test/unit/util/output.rb:56
#: ./lib/test/unit/util/procwrapper.rb:56 ./lib/test/unit/version.rb:56
msgid "== Credits"
msgstr ""

#: ./lib/test-unit.rb:58 ./lib/test/unit.rb:58
#: ./lib/test/unit/assertionfailederror.rb:58
#: ./lib/test/unit/assertions.rb:58
#: ./lib/test/unit/attribute-matcher.rb:58
#: ./lib/test/unit/attribute.rb:58 ./lib/test/unit/autorunner.rb:58
#: ./lib/test/unit/code-snippet-fetcher.rb:58
#: ./lib/test/unit/collector.rb:58
#: ./lib/test/unit/collector/descendant.rb:58
#: ./lib/test/unit/collector/dir.rb:58
#: ./lib/test/unit/collector/load.rb:58
#: ./lib/test/unit/collector/objectspace.rb:58
#: ./lib/test/unit/collector/xml.rb:58
#: ./lib/test/unit/color-scheme.rb:58 ./lib/test/unit/color.rb:58
#: ./lib/test/unit/data.rb:58 ./lib/test/unit/diff.rb:58
#: ./lib/test/unit/error.rb:58 ./lib/test/unit/exceptionhandler.rb:58
#: ./lib/test/unit/failure.rb:58
#: ./lib/test/unit/fault-location-detector.rb:58
#: ./lib/test/unit/fixture.rb:58 ./lib/test/unit/notification.rb:58
#: ./lib/test/unit/omission.rb:58 ./lib/test/unit/pending.rb:58
#: ./lib/test/unit/priority.rb:58 ./lib/test/unit/runner/console.rb:58
#: ./lib/test/unit/runner/emacs.rb:58 ./lib/test/unit/runner/xml.rb:58
#: ./lib/test/unit/testcase.rb:58 ./lib/test/unit/testresult.rb:58
#: ./lib/test/unit/testsuite.rb:58
#: ./lib/test/unit/testsuitecreator.rb:58
#: ./lib/test/unit/ui/console/outputlevel.rb:58
#: ./lib/test/unit/ui/console/testrunner.rb:58
#: ./lib/test/unit/ui/emacs/testrunner.rb:58
#: ./lib/test/unit/ui/testrunner.rb:58
#: ./lib/test/unit/ui/testrunnermediator.rb:58
#: ./lib/test/unit/ui/testrunnerutilities.rb:58
#: ./lib/test/unit/ui/xml/testrunner.rb:58
#: ./lib/test/unit/util/backtracefilter.rb:58
#: ./lib/test/unit/util/method-owner-finder.rb:58
#: ./lib/test/unit/util/observable.rb:58
#: ./lib/test/unit/util/output.rb:58
#: ./lib/test/unit/util/procwrapper.rb:58 ./lib/test/unit/version.rb:58
msgid "I'd like to thank..."
msgstr ""

#: ./lib/test-unit.rb:60 ./lib/test/unit.rb:60
#: ./lib/test/unit/assertionfailederror.rb:60
#: ./lib/test/unit/assertions.rb:60
#: ./lib/test/unit/attribute-matcher.rb:60
#: ./lib/test/unit/attribute.rb:60 ./lib/test/unit/autorunner.rb:60
#: ./lib/test/unit/code-snippet-fetcher.rb:60
#: ./lib/test/unit/collector.rb:60
#: ./lib/test/unit/collector/descendant.rb:60
#: ./lib/test/unit/collector/dir.rb:60
#: ./lib/test/unit/collector/load.rb:60
#: ./lib/test/unit/collector/objectspace.rb:60
#: ./lib/test/unit/collector/xml.rb:60
#: ./lib/test/unit/color-scheme.rb:60 ./lib/test/unit/color.rb:60
#: ./lib/test/unit/data.rb:60 ./lib/test/unit/diff.rb:60
#: ./lib/test/unit/error.rb:60 ./lib/test/unit/exceptionhandler.rb:60
#: ./lib/test/unit/failure.rb:60
#: ./lib/test/unit/fault-location-detector.rb:60
#: ./lib/test/unit/fixture.rb:60 ./lib/test/unit/notification.rb:60
#: ./lib/test/unit/omission.rb:60 ./lib/test/unit/pending.rb:60
#: ./lib/test/unit/priority.rb:60 ./lib/test/unit/runner/console.rb:60
#: ./lib/test/unit/runner/emacs.rb:60 ./lib/test/unit/runner/xml.rb:60
#: ./lib/test/unit/testcase.rb:60 ./lib/test/unit/testresult.rb:60
#: ./lib/test/unit/testsuite.rb:60
#: ./lib/test/unit/testsuitecreator.rb:60
#: ./lib/test/unit/ui/console/outputlevel.rb:60
#: ./lib/test/unit/ui/console/testrunner.rb:60
#: ./lib/test/unit/ui/emacs/testrunner.rb:60
#: ./lib/test/unit/ui/testrunner.rb:60
#: ./lib/test/unit/ui/testrunnermediator.rb:60
#: ./lib/test/unit/ui/testrunnerutilities.rb:60
#: ./lib/test/unit/ui/xml/testrunner.rb:60
#: ./lib/test/unit/util/backtracefilter.rb:60
#: ./lib/test/unit/util/method-owner-finder.rb:60
#: ./lib/test/unit/util/observable.rb:60
#: ./lib/test/unit/util/output.rb:60
#: ./lib/test/unit/util/procwrapper.rb:60 ./lib/test/unit/version.rb:60
msgid "Matz, for a great language!"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:62 ./lib/test/unit.rb:62
#: ./lib/test/unit/assertionfailederror.rb:62
#: ./lib/test/unit/assertions.rb:62
#: ./lib/test/unit/attribute-matcher.rb:62
#: ./lib/test/unit/attribute.rb:62 ./lib/test/unit/autorunner.rb:62
#: ./lib/test/unit/code-snippet-fetcher.rb:62
#: ./lib/test/unit/collector.rb:62
#: ./lib/test/unit/collector/descendant.rb:62
#: ./lib/test/unit/collector/dir.rb:62
#: ./lib/test/unit/collector/load.rb:62
#: ./lib/test/unit/collector/objectspace.rb:62
#: ./lib/test/unit/collector/xml.rb:62
#: ./lib/test/unit/color-scheme.rb:62 ./lib/test/unit/color.rb:62
#: ./lib/test/unit/data.rb:62 ./lib/test/unit/diff.rb:62
#: ./lib/test/unit/error.rb:62 ./lib/test/unit/exceptionhandler.rb:62
#: ./lib/test/unit/failure.rb:62
#: ./lib/test/unit/fault-location-detector.rb:62
#: ./lib/test/unit/fixture.rb:62 ./lib/test/unit/notification.rb:62
#: ./lib/test/unit/omission.rb:62 ./lib/test/unit/pending.rb:62
#: ./lib/test/unit/priority.rb:62 ./lib/test/unit/runner/console.rb:62
#: ./lib/test/unit/runner/emacs.rb:62 ./lib/test/unit/runner/xml.rb:62
#: ./lib/test/unit/testcase.rb:62 ./lib/test/unit/testresult.rb:62
#: ./lib/test/unit/testsuite.rb:62
#: ./lib/test/unit/testsuitecreator.rb:62
#: ./lib/test/unit/ui/console/outputlevel.rb:62
#: ./lib/test/unit/ui/console/testrunner.rb:62
#: ./lib/test/unit/ui/emacs/testrunner.rb:62
#: ./lib/test/unit/ui/testrunner.rb:62
#: ./lib/test/unit/ui/testrunnermediator.rb:62
#: ./lib/test/unit/ui/testrunnerutilities.rb:62
#: ./lib/test/unit/ui/xml/testrunner.rb:62
#: ./lib/test/unit/util/backtracefilter.rb:62
#: ./lib/test/unit/util/method-owner-finder.rb:62
#: ./lib/test/unit/util/observable.rb:62
#: ./lib/test/unit/util/output.rb:62
#: ./lib/test/unit/util/procwrapper.rb:62 ./lib/test/unit/version.rb:62
msgid ""
"Masaki Suketa, for his work on RubyUnit, which filled a vital need in\n"
"the Ruby world for a very long time. I'm also grateful for his help in\n"
"polishing Test::Unit and getting the RubyUnit compatibility layer\n"
"right. His graciousness in allowing Test::Unit to supercede RubyUnit\n"
"continues to be a challenge to me to be more willing to defer my own\n"
"rights."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:69 ./lib/test/unit.rb:69
#: ./lib/test/unit/assertionfailederror.rb:69
#: ./lib/test/unit/assertions.rb:69
#: ./lib/test/unit/attribute-matcher.rb:69
#: ./lib/test/unit/attribute.rb:69 ./lib/test/unit/autorunner.rb:69
#: ./lib/test/unit/code-snippet-fetcher.rb:69
#: ./lib/test/unit/collector.rb:69
#: ./lib/test/unit/collector/descendant.rb:69
#: ./lib/test/unit/collector/dir.rb:69
#: ./lib/test/unit/collector/load.rb:69
#: ./lib/test/unit/collector/objectspace.rb:69
#: ./lib/test/unit/collector/xml.rb:69
#: ./lib/test/unit/color-scheme.rb:69 ./lib/test/unit/color.rb:69
#: ./lib/test/unit/data.rb:69 ./lib/test/unit/diff.rb:69
#: ./lib/test/unit/error.rb:69 ./lib/test/unit/exceptionhandler.rb:69
#: ./lib/test/unit/failure.rb:69
#: ./lib/test/unit/fault-location-detector.rb:69
#: ./lib/test/unit/fixture.rb:69 ./lib/test/unit/notification.rb:69
#: ./lib/test/unit/omission.rb:69 ./lib/test/unit/pending.rb:69
#: ./lib/test/unit/priority.rb:69 ./lib/test/unit/runner/console.rb:69
#: ./lib/test/unit/runner/emacs.rb:69 ./lib/test/unit/runner/xml.rb:69
#: ./lib/test/unit/testcase.rb:69 ./lib/test/unit/testresult.rb:69
#: ./lib/test/unit/testsuite.rb:69
#: ./lib/test/unit/testsuitecreator.rb:69
#: ./lib/test/unit/ui/console/outputlevel.rb:69
#: ./lib/test/unit/ui/console/testrunner.rb:69
#: ./lib/test/unit/ui/emacs/testrunner.rb:69
#: ./lib/test/unit/ui/testrunner.rb:69
#: ./lib/test/unit/ui/testrunnermediator.rb:69
#: ./lib/test/unit/ui/testrunnerutilities.rb:69
#: ./lib/test/unit/ui/xml/testrunner.rb:69
#: ./lib/test/unit/util/backtracefilter.rb:69
#: ./lib/test/unit/util/method-owner-finder.rb:69
#: ./lib/test/unit/util/observable.rb:69
#: ./lib/test/unit/util/output.rb:69
#: ./lib/test/unit/util/procwrapper.rb:69 ./lib/test/unit/version.rb:69
msgid ""
"Ken McKinlay, for his interest and work on unit testing, and for his\n"
"willingness to dialog about it. He was also a great help in pointing\n"
"out some of the holes in the RubyUnit compatibility layer."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:73 ./lib/test/unit.rb:73
#: ./lib/test/unit/assertionfailederror.rb:73
#: ./lib/test/unit/assertions.rb:73
#: ./lib/test/unit/attribute-matcher.rb:73
#: ./lib/test/unit/attribute.rb:73 ./lib/test/unit/autorunner.rb:73
#: ./lib/test/unit/code-snippet-fetcher.rb:73
#: ./lib/test/unit/collector.rb:73
#: ./lib/test/unit/collector/descendant.rb:73
#: ./lib/test/unit/collector/dir.rb:73
#: ./lib/test/unit/collector/load.rb:73
#: ./lib/test/unit/collector/objectspace.rb:73
#: ./lib/test/unit/collector/xml.rb:73
#: ./lib/test/unit/color-scheme.rb:73 ./lib/test/unit/color.rb:73
#: ./lib/test/unit/data.rb:73 ./lib/test/unit/diff.rb:73
#: ./lib/test/unit/error.rb:73 ./lib/test/unit/exceptionhandler.rb:73
#: ./lib/test/unit/failure.rb:73
#: ./lib/test/unit/fault-location-detector.rb:73
#: ./lib/test/unit/fixture.rb:73 ./lib/test/unit/notification.rb:73
#: ./lib/test/unit/omission.rb:73 ./lib/test/unit/pending.rb:73
#: ./lib/test/unit/priority.rb:73 ./lib/test/unit/runner/console.rb:73
#: ./lib/test/unit/runner/emacs.rb:73 ./lib/test/unit/runner/xml.rb:73
#: ./lib/test/unit/testcase.rb:73 ./lib/test/unit/testresult.rb:73
#: ./lib/test/unit/testsuite.rb:73
#: ./lib/test/unit/testsuitecreator.rb:73
#: ./lib/test/unit/ui/console/outputlevel.rb:73
#: ./lib/test/unit/ui/console/testrunner.rb:73
#: ./lib/test/unit/ui/emacs/testrunner.rb:73
#: ./lib/test/unit/ui/testrunner.rb:73
#: ./lib/test/unit/ui/testrunnermediator.rb:73
#: ./lib/test/unit/ui/testrunnerutilities.rb:73
#: ./lib/test/unit/ui/xml/testrunner.rb:73
#: ./lib/test/unit/util/backtracefilter.rb:73
#: ./lib/test/unit/util/method-owner-finder.rb:73
#: ./lib/test/unit/util/observable.rb:73
#: ./lib/test/unit/util/output.rb:73
#: ./lib/test/unit/util/procwrapper.rb:73 ./lib/test/unit/version.rb:73
msgid ""
"Dave Thomas, for the original idea that led to the extremely simple\n"
"\"require 'test/unit'\", plus his code to improve it even more by\n"
"allowing the selection of tests from the command-line. Also, without\n"
"RDoc, the documentation for Test::Unit would stink a lot more than it\n"
"does now."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:79 ./lib/test/unit.rb:79
#: ./lib/test/unit/assertionfailederror.rb:79
#: ./lib/test/unit/assertions.rb:79
#: ./lib/test/unit/attribute-matcher.rb:79
#: ./lib/test/unit/attribute.rb:79 ./lib/test/unit/autorunner.rb:79
#: ./lib/test/unit/code-snippet-fetcher.rb:79
#: ./lib/test/unit/collector.rb:79
#: ./lib/test/unit/collector/descendant.rb:79
#: ./lib/test/unit/collector/dir.rb:79
#: ./lib/test/unit/collector/load.rb:79
#: ./lib/test/unit/collector/objectspace.rb:79
#: ./lib/test/unit/collector/xml.rb:79
#: ./lib/test/unit/color-scheme.rb:79 ./lib/test/unit/color.rb:79
#: ./lib/test/unit/data.rb:79 ./lib/test/unit/diff.rb:79
#: ./lib/test/unit/error.rb:79 ./lib/test/unit/exceptionhandler.rb:79
#: ./lib/test/unit/failure.rb:79
#: ./lib/test/unit/fault-location-detector.rb:79
#: ./lib/test/unit/fixture.rb:79 ./lib/test/unit/notification.rb:79
#: ./lib/test/unit/omission.rb:79 ./lib/test/unit/pending.rb:79
#: ./lib/test/unit/priority.rb:79 ./lib/test/unit/runner/console.rb:79
#: ./lib/test/unit/runner/emacs.rb:79 ./lib/test/unit/runner/xml.rb:79
#: ./lib/test/unit/testcase.rb:79 ./lib/test/unit/testresult.rb:79
#: ./lib/test/unit/testsuite.rb:79
#: ./lib/test/unit/testsuitecreator.rb:79
#: ./lib/test/unit/ui/console/outputlevel.rb:79
#: ./lib/test/unit/ui/console/testrunner.rb:79
#: ./lib/test/unit/ui/emacs/testrunner.rb:79
#: ./lib/test/unit/ui/testrunner.rb:79
#: ./lib/test/unit/ui/testrunnermediator.rb:79
#: ./lib/test/unit/ui/testrunnerutilities.rb:79
#: ./lib/test/unit/ui/xml/testrunner.rb:79
#: ./lib/test/unit/util/backtracefilter.rb:79
#: ./lib/test/unit/util/method-owner-finder.rb:79
#: ./lib/test/unit/util/observable.rb:79
#: ./lib/test/unit/util/output.rb:79
#: ./lib/test/unit/util/procwrapper.rb:79 ./lib/test/unit/version.rb:79
msgid ""
"Everyone who's helped out with bug reports, feature ideas,\n"
"encouragement to continue, etc. It's a real privilege to be a part of\n"
"the Ruby community."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:83 ./lib/test/unit.rb:83
#: ./lib/test/unit/assertionfailederror.rb:83
#: ./lib/test/unit/assertions.rb:83
#: ./lib/test/unit/attribute-matcher.rb:83
#: ./lib/test/unit/attribute.rb:83 ./lib/test/unit/autorunner.rb:83
#: ./lib/test/unit/code-snippet-fetcher.rb:83
#: ./lib/test/unit/collector.rb:83
#: ./lib/test/unit/collector/descendant.rb:83
#: ./lib/test/unit/collector/dir.rb:83
#: ./lib/test/unit/collector/load.rb:83
#: ./lib/test/unit/collector/objectspace.rb:83
#: ./lib/test/unit/collector/xml.rb:83
#: ./lib/test/unit/color-scheme.rb:83 ./lib/test/unit/color.rb:83
#: ./lib/test/unit/data.rb:83 ./lib/test/unit/diff.rb:83
#: ./lib/test/unit/error.rb:83 ./lib/test/unit/exceptionhandler.rb:83
#: ./lib/test/unit/failure.rb:83
#: ./lib/test/unit/fault-location-detector.rb:83
#: ./lib/test/unit/fixture.rb:83 ./lib/test/unit/notification.rb:83
#: ./lib/test/unit/omission.rb:83 ./lib/test/unit/pending.rb:83
#: ./lib/test/unit/priority.rb:83 ./lib/test/unit/runner/console.rb:83
#: ./lib/test/unit/runner/emacs.rb:83 ./lib/test/unit/runner/xml.rb:83
#: ./lib/test/unit/testcase.rb:83 ./lib/test/unit/testresult.rb:83
#: ./lib/test/unit/testsuite.rb:83
#: ./lib/test/unit/testsuitecreator.rb:83
#: ./lib/test/unit/ui/console/outputlevel.rb:83
#: ./lib/test/unit/ui/console/testrunner.rb:83
#: ./lib/test/unit/ui/emacs/testrunner.rb:83
#: ./lib/test/unit/ui/testrunner.rb:83
#: ./lib/test/unit/ui/testrunnermediator.rb:83
#: ./lib/test/unit/ui/testrunnerutilities.rb:83
#: ./lib/test/unit/ui/xml/testrunner.rb:83
#: ./lib/test/unit/util/backtracefilter.rb:83
#: ./lib/test/unit/util/method-owner-finder.rb:83
#: ./lib/test/unit/util/observable.rb:83
#: ./lib/test/unit/util/output.rb:83
#: ./lib/test/unit/util/procwrapper.rb:83 ./lib/test/unit/version.rb:83
msgid ""
"The guys at RoleModel Software, for putting up with me repeating, \"But\n"
"this would be so much easier in Ruby!\" whenever we're coding in Java."
msgstr ""

#: ./lib/test-unit.rb:86 ./lib/test/unit.rb:86
#: ./lib/test/unit/assertionfailederror.rb:86
#: ./lib/test/unit/assertions.rb:86
#: ./lib/test/unit/attribute-matcher.rb:86
#: ./lib/test/unit/attribute.rb:86 ./lib/test/unit/autorunner.rb:86
#: ./lib/test/unit/code-snippet-fetcher.rb:86
#: ./lib/test/unit/collector.rb:86
#: ./lib/test/unit/collector/descendant.rb:86
#: ./lib/test/unit/collector/dir.rb:86
#: ./lib/test/unit/collector/load.rb:86
#: ./lib/test/unit/collector/objectspace.rb:86
#: ./lib/test/unit/collector/xml.rb:86
#: ./lib/test/unit/color-scheme.rb:86 ./lib/test/unit/color.rb:86
#: ./lib/test/unit/data.rb:86 ./lib/test/unit/diff.rb:86
#: ./lib/test/unit/error.rb:86 ./lib/test/unit/exceptionhandler.rb:86
#: ./lib/test/unit/failure.rb:86
#: ./lib/test/unit/fault-location-detector.rb:86
#: ./lib/test/unit/fixture.rb:86 ./lib/test/unit/notification.rb:86
#: ./lib/test/unit/omission.rb:86 ./lib/test/unit/pending.rb:86
#: ./lib/test/unit/priority.rb:86 ./lib/test/unit/runner/console.rb:86
#: ./lib/test/unit/runner/emacs.rb:86 ./lib/test/unit/runner/xml.rb:86
#: ./lib/test/unit/testcase.rb:86 ./lib/test/unit/testresult.rb:86
#: ./lib/test/unit/testsuite.rb:86
#: ./lib/test/unit/testsuitecreator.rb:86
#: ./lib/test/unit/ui/console/outputlevel.rb:86
#: ./lib/test/unit/ui/console/testrunner.rb:86
#: ./lib/test/unit/ui/emacs/testrunner.rb:86
#: ./lib/test/unit/ui/testrunner.rb:86
#: ./lib/test/unit/ui/testrunnermediator.rb:86
#: ./lib/test/unit/ui/testrunnerutilities.rb:86
#: ./lib/test/unit/ui/xml/testrunner.rb:86
#: ./lib/test/unit/util/backtracefilter.rb:86
#: ./lib/test/unit/util/method-owner-finder.rb:86
#: ./lib/test/unit/util/observable.rb:86
#: ./lib/test/unit/util/output.rb:86
#: ./lib/test/unit/util/procwrapper.rb:86 ./lib/test/unit/version.rb:86
msgid "My Creator, for giving me life, and giving it more abundantly."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:89 ./lib/test/unit.rb:89
#: ./lib/test/unit/assertionfailederror.rb:89
#: ./lib/test/unit/assertions.rb:89
#: ./lib/test/unit/attribute-matcher.rb:89
#: ./lib/test/unit/attribute.rb:89 ./lib/test/unit/autorunner.rb:89
#: ./lib/test/unit/code-snippet-fetcher.rb:89
#: ./lib/test/unit/collector.rb:89
#: ./lib/test/unit/collector/descendant.rb:89
#: ./lib/test/unit/collector/dir.rb:89
#: ./lib/test/unit/collector/load.rb:89
#: ./lib/test/unit/collector/objectspace.rb:89
#: ./lib/test/unit/collector/xml.rb:89
#: ./lib/test/unit/color-scheme.rb:89 ./lib/test/unit/color.rb:89
#: ./lib/test/unit/data.rb:89 ./lib/test/unit/diff.rb:89
#: ./lib/test/unit/error.rb:89 ./lib/test/unit/exceptionhandler.rb:89
#: ./lib/test/unit/failure.rb:89
#: ./lib/test/unit/fault-location-detector.rb:89
#: ./lib/test/unit/fixture.rb:89 ./lib/test/unit/notification.rb:89
#: ./lib/test/unit/omission.rb:89 ./lib/test/unit/pending.rb:89
#: ./lib/test/unit/priority.rb:89 ./lib/test/unit/runner/console.rb:89
#: ./lib/test/unit/runner/emacs.rb:89 ./lib/test/unit/runner/xml.rb:89
#: ./lib/test/unit/testcase.rb:89 ./lib/test/unit/testresult.rb:89
#: ./lib/test/unit/testsuite.rb:89
#: ./lib/test/unit/testsuitecreator.rb:89
#: ./lib/test/unit/ui/console/outputlevel.rb:89
#: ./lib/test/unit/ui/console/testrunner.rb:89
#: ./lib/test/unit/ui/emacs/testrunner.rb:89
#: ./lib/test/unit/ui/testrunner.rb:89
#: ./lib/test/unit/ui/testrunnermediator.rb:89
#: ./lib/test/unit/ui/testrunnerutilities.rb:89
#: ./lib/test/unit/ui/xml/testrunner.rb:89
#: ./lib/test/unit/util/backtracefilter.rb:89
#: ./lib/test/unit/util/method-owner-finder.rb:89
#: ./lib/test/unit/util/observable.rb:89
#: ./lib/test/unit/util/output.rb:89
#: ./lib/test/unit/util/procwrapper.rb:89 ./lib/test/unit/version.rb:89
msgid "== License"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:91 ./lib/test/unit.rb:91
#: ./lib/test/unit/assertionfailederror.rb:91
#: ./lib/test/unit/assertions.rb:91
#: ./lib/test/unit/attribute-matcher.rb:91
#: ./lib/test/unit/attribute.rb:91 ./lib/test/unit/autorunner.rb:91
#: ./lib/test/unit/code-snippet-fetcher.rb:91
#: ./lib/test/unit/collector.rb:91
#: ./lib/test/unit/collector/descendant.rb:91
#: ./lib/test/unit/collector/dir.rb:91
#: ./lib/test/unit/collector/load.rb:91
#: ./lib/test/unit/collector/objectspace.rb:91
#: ./lib/test/unit/collector/xml.rb:91
#: ./lib/test/unit/color-scheme.rb:91 ./lib/test/unit/color.rb:91
#: ./lib/test/unit/data.rb:91 ./lib/test/unit/diff.rb:91
#: ./lib/test/unit/error.rb:91 ./lib/test/unit/exceptionhandler.rb:91
#: ./lib/test/unit/failure.rb:91
#: ./lib/test/unit/fault-location-detector.rb:91
#: ./lib/test/unit/fixture.rb:91 ./lib/test/unit/notification.rb:91
#: ./lib/test/unit/omission.rb:91 ./lib/test/unit/pending.rb:91
#: ./lib/test/unit/priority.rb:91 ./lib/test/unit/runner/console.rb:91
#: ./lib/test/unit/runner/emacs.rb:91 ./lib/test/unit/runner/xml.rb:91
#: ./lib/test/unit/testcase.rb:91 ./lib/test/unit/testresult.rb:91
#: ./lib/test/unit/testsuite.rb:91
#: ./lib/test/unit/testsuitecreator.rb:91
#: ./lib/test/unit/ui/console/outputlevel.rb:91
#: ./lib/test/unit/ui/console/testrunner.rb:91
#: ./lib/test/unit/ui/emacs/testrunner.rb:91
#: ./lib/test/unit/ui/testrunner.rb:91
#: ./lib/test/unit/ui/testrunnermediator.rb:91
#: ./lib/test/unit/ui/testrunnerutilities.rb:91
#: ./lib/test/unit/ui/xml/testrunner.rb:91
#: ./lib/test/unit/util/backtracefilter.rb:91
#: ./lib/test/unit/util/method-owner-finder.rb:91
#: ./lib/test/unit/util/observable.rb:91
#: ./lib/test/unit/util/output.rb:91
#: ./lib/test/unit/util/procwrapper.rb:91 ./lib/test/unit/version.rb:91
msgid ""
"Test::Unit is copyright (c) 2000-2003 Nathaniel Talbott. It is free\n"
"software, and is distributed under the Ruby license. See the COPYING\n"
"file."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:95 ./lib/test/unit.rb:95
#: ./lib/test/unit/assertionfailederror.rb:95
#: ./lib/test/unit/assertions.rb:95
#: ./lib/test/unit/attribute-matcher.rb:95
#: ./lib/test/unit/attribute.rb:95 ./lib/test/unit/autorunner.rb:95
#: ./lib/test/unit/code-snippet-fetcher.rb:95
#: ./lib/test/unit/collector.rb:95
#: ./lib/test/unit/collector/descendant.rb:95
#: ./lib/test/unit/collector/dir.rb:95
#: ./lib/test/unit/collector/load.rb:95
#: ./lib/test/unit/collector/objectspace.rb:95
#: ./lib/test/unit/collector/xml.rb:95
#: ./lib/test/unit/color-scheme.rb:95 ./lib/test/unit/color.rb:95
#: ./lib/test/unit/data.rb:95 ./lib/test/unit/diff.rb:95
#: ./lib/test/unit/error.rb:95 ./lib/test/unit/exceptionhandler.rb:95
#: ./lib/test/unit/failure.rb:95
#: ./lib/test/unit/fault-location-detector.rb:95
#: ./lib/test/unit/fixture.rb:95 ./lib/test/unit/notification.rb:95
#: ./lib/test/unit/omission.rb:95 ./lib/test/unit/pending.rb:95
#: ./lib/test/unit/priority.rb:95 ./lib/test/unit/runner/console.rb:95
#: ./lib/test/unit/runner/emacs.rb:95 ./lib/test/unit/runner/xml.rb:95
#: ./lib/test/unit/testcase.rb:95 ./lib/test/unit/testresult.rb:95
#: ./lib/test/unit/testsuite.rb:95
#: ./lib/test/unit/testsuitecreator.rb:95
#: ./lib/test/unit/ui/console/outputlevel.rb:95
#: ./lib/test/unit/ui/console/testrunner.rb:95
#: ./lib/test/unit/ui/emacs/testrunner.rb:95
#: ./lib/test/unit/ui/testrunner.rb:95
#: ./lib/test/unit/ui/testrunnermediator.rb:95
#: ./lib/test/unit/ui/testrunnerutilities.rb:95
#: ./lib/test/unit/ui/xml/testrunner.rb:95
#: ./lib/test/unit/util/backtracefilter.rb:95
#: ./lib/test/unit/util/method-owner-finder.rb:95
#: ./lib/test/unit/util/observable.rb:95
#: ./lib/test/unit/util/output.rb:95
#: ./lib/test/unit/util/procwrapper.rb:95 ./lib/test/unit/version.rb:95
msgid ""
"Exception: lib/test/unit/diff.rb is copyright (c)\n"
"2008-2010 Kouhei Sutou and 2001-2008 Python Software\n"
"Foundation. It is free software, and is distributed\n"
"under the Ruby license and/or the PSF license. See the\n"
"COPYING file and PSFL file."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:101 ./lib/test/unit.rb:101
#: ./lib/test/unit/assertionfailederror.rb:101
#: ./lib/test/unit/assertions.rb:101
#: ./lib/test/unit/attribute-matcher.rb:101
#: ./lib/test/unit/attribute.rb:101 ./lib/test/unit/autorunner.rb:101
#: ./lib/test/unit/code-snippet-fetcher.rb:101
#: ./lib/test/unit/collector.rb:101
#: ./lib/test/unit/collector/descendant.rb:101
#: ./lib/test/unit/collector/dir.rb:101
#: ./lib/test/unit/collector/load.rb:101
#: ./lib/test/unit/collector/objectspace.rb:101
#: ./lib/test/unit/collector/xml.rb:101
#: ./lib/test/unit/color-scheme.rb:101 ./lib/test/unit/color.rb:101
#: ./lib/test/unit/data.rb:101 ./lib/test/unit/diff.rb:101
#: ./lib/test/unit/error.rb:101 ./lib/test/unit/exceptionhandler.rb:101
#: ./lib/test/unit/failure.rb:101
#: ./lib/test/unit/fault-location-detector.rb:101
#: ./lib/test/unit/fixture.rb:101 ./lib/test/unit/notification.rb:101
#: ./lib/test/unit/omission.rb:101 ./lib/test/unit/pending.rb:101
#: ./lib/test/unit/priority.rb:101
#: ./lib/test/unit/runner/console.rb:101
#: ./lib/test/unit/runner/emacs.rb:101
#: ./lib/test/unit/runner/xml.rb:101 ./lib/test/unit/testcase.rb:101
#: ./lib/test/unit/testresult.rb:101 ./lib/test/unit/testsuite.rb:101
#: ./lib/test/unit/testsuitecreator.rb:101
#: ./lib/test/unit/ui/console/outputlevel.rb:101
#: ./lib/test/unit/ui/console/testrunner.rb:101
#: ./lib/test/unit/ui/emacs/testrunner.rb:101
#: ./lib/test/unit/ui/testrunner.rb:101
#: ./lib/test/unit/ui/testrunnermediator.rb:101
#: ./lib/test/unit/ui/testrunnerutilities.rb:101
#: ./lib/test/unit/ui/xml/testrunner.rb:101
#: ./lib/test/unit/util/backtracefilter.rb:101
#: ./lib/test/unit/util/method-owner-finder.rb:101
#: ./lib/test/unit/util/observable.rb:101
#: ./lib/test/unit/util/output.rb:101
#: ./lib/test/unit/util/procwrapper.rb:101
#: ./lib/test/unit/version.rb:101
msgid "== Warranty"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:103 ./lib/test/unit.rb:103
#: ./lib/test/unit/assertionfailederror.rb:103
#: ./lib/test/unit/assertions.rb:103
#: ./lib/test/unit/attribute-matcher.rb:103
#: ./lib/test/unit/attribute.rb:103 ./lib/test/unit/autorunner.rb:103
#: ./lib/test/unit/code-snippet-fetcher.rb:103
#: ./lib/test/unit/collector.rb:103
#: ./lib/test/unit/collector/descendant.rb:103
#: ./lib/test/unit/collector/dir.rb:103
#: ./lib/test/unit/collector/load.rb:103
#: ./lib/test/unit/collector/objectspace.rb:103
#: ./lib/test/unit/collector/xml.rb:103
#: ./lib/test/unit/color-scheme.rb:103 ./lib/test/unit/color.rb:103
#: ./lib/test/unit/data.rb:103 ./lib/test/unit/diff.rb:103
#: ./lib/test/unit/error.rb:103 ./lib/test/unit/exceptionhandler.rb:103
#: ./lib/test/unit/failure.rb:103
#: ./lib/test/unit/fault-location-detector.rb:103
#: ./lib/test/unit/fixture.rb:103 ./lib/test/unit/notification.rb:103
#: ./lib/test/unit/omission.rb:103 ./lib/test/unit/pending.rb:103
#: ./lib/test/unit/priority.rb:103
#: ./lib/test/unit/runner/console.rb:103
#: ./lib/test/unit/runner/emacs.rb:103
#: ./lib/test/unit/runner/xml.rb:103 ./lib/test/unit/testcase.rb:103
#: ./lib/test/unit/testresult.rb:103 ./lib/test/unit/testsuite.rb:103
#: ./lib/test/unit/testsuitecreator.rb:103
#: ./lib/test/unit/ui/console/outputlevel.rb:103
#: ./lib/test/unit/ui/console/testrunner.rb:103
#: ./lib/test/unit/ui/emacs/testrunner.rb:103
#: ./lib/test/unit/ui/testrunner.rb:103
#: ./lib/test/unit/ui/testrunnermediator.rb:103
#: ./lib/test/unit/ui/testrunnerutilities.rb:103
#: ./lib/test/unit/ui/xml/testrunner.rb:103
#: ./lib/test/unit/util/backtracefilter.rb:103
#: ./lib/test/unit/util/method-owner-finder.rb:103
#: ./lib/test/unit/util/observable.rb:103
#: ./lib/test/unit/util/output.rb:103
#: ./lib/test/unit/util/procwrapper.rb:103
#: ./lib/test/unit/version.rb:103
msgid ""
"This software is provided \"as is\" and without any express or\n"
"implied warranties, including, without limitation, the implied\n"
"warranties of merchantibility and fitness for a particular\n"
"purpose."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:109 ./lib/test/unit.rb:109
#: ./lib/test/unit/assertionfailederror.rb:109
#: ./lib/test/unit/assertions.rb:109
#: ./lib/test/unit/attribute-matcher.rb:109
#: ./lib/test/unit/attribute.rb:109 ./lib/test/unit/autorunner.rb:109
#: ./lib/test/unit/code-snippet-fetcher.rb:109
#: ./lib/test/unit/collector.rb:109
#: ./lib/test/unit/collector/descendant.rb:109
#: ./lib/test/unit/collector/dir.rb:109
#: ./lib/test/unit/collector/load.rb:109
#: ./lib/test/unit/collector/objectspace.rb:109
#: ./lib/test/unit/collector/xml.rb:109
#: ./lib/test/unit/color-scheme.rb:109 ./lib/test/unit/color.rb:109
#: ./lib/test/unit/data.rb:109 ./lib/test/unit/diff.rb:109
#: ./lib/test/unit/error.rb:109 ./lib/test/unit/exceptionhandler.rb:109
#: ./lib/test/unit/failure.rb:109
#: ./lib/test/unit/fault-location-detector.rb:109
#: ./lib/test/unit/fixture.rb:109 ./lib/test/unit/notification.rb:109
#: ./lib/test/unit/omission.rb:109 ./lib/test/unit/pending.rb:109
#: ./lib/test/unit/priority.rb:109
#: ./lib/test/unit/runner/console.rb:109
#: ./lib/test/unit/runner/emacs.rb:109
#: ./lib/test/unit/runner/xml.rb:109 ./lib/test/unit/testcase.rb:109
#: ./lib/test/unit/testresult.rb:109 ./lib/test/unit/testsuite.rb:109
#: ./lib/test/unit/testsuitecreator.rb:109
#: ./lib/test/unit/ui/console/outputlevel.rb:109
#: ./lib/test/unit/ui/console/testrunner.rb:109
#: ./lib/test/unit/ui/emacs/testrunner.rb:109
#: ./lib/test/unit/ui/testrunner.rb:109
#: ./lib/test/unit/ui/testrunnermediator.rb:109
#: ./lib/test/unit/ui/testrunnerutilities.rb:109
#: ./lib/test/unit/ui/xml/testrunner.rb:109
#: ./lib/test/unit/util/backtracefilter.rb:109
#: ./lib/test/unit/util/method-owner-finder.rb:109
#: ./lib/test/unit/util/observable.rb:109
#: ./lib/test/unit/util/output.rb:109
#: ./lib/test/unit/util/procwrapper.rb:109
#: ./lib/test/unit/version.rb:109
msgid "== Author"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:111 ./lib/test/unit.rb:111
#: ./lib/test/unit/assertionfailederror.rb:111
#: ./lib/test/unit/assertions.rb:111
#: ./lib/test/unit/attribute-matcher.rb:111
#: ./lib/test/unit/attribute.rb:111 ./lib/test/unit/autorunner.rb:111
#: ./lib/test/unit/code-snippet-fetcher.rb:111
#: ./lib/test/unit/collector.rb:111
#: ./lib/test/unit/collector/descendant.rb:111
#: ./lib/test/unit/collector/dir.rb:111
#: ./lib/test/unit/collector/load.rb:111
#: ./lib/test/unit/collector/objectspace.rb:111
#: ./lib/test/unit/collector/xml.rb:111
#: ./lib/test/unit/color-scheme.rb:111 ./lib/test/unit/color.rb:111
#: ./lib/test/unit/data.rb:111 ./lib/test/unit/diff.rb:111
#: ./lib/test/unit/error.rb:111 ./lib/test/unit/exceptionhandler.rb:111
#: ./lib/test/unit/failure.rb:111
#: ./lib/test/unit/fault-location-detector.rb:111
#: ./lib/test/unit/fixture.rb:111 ./lib/test/unit/notification.rb:111
#: ./lib/test/unit/omission.rb:111 ./lib/test/unit/pending.rb:111
#: ./lib/test/unit/priority.rb:111
#: ./lib/test/unit/runner/console.rb:111
#: ./lib/test/unit/runner/emacs.rb:111
#: ./lib/test/unit/runner/xml.rb:111 ./lib/test/unit/testcase.rb:111
#: ./lib/test/unit/testresult.rb:111 ./lib/test/unit/testsuite.rb:111
#: ./lib/test/unit/testsuitecreator.rb:111
#: ./lib/test/unit/ui/console/outputlevel.rb:111
#: ./lib/test/unit/ui/console/testrunner.rb:111
#: ./lib/test/unit/ui/emacs/testrunner.rb:111
#: ./lib/test/unit/ui/testrunner.rb:111
#: ./lib/test/unit/ui/testrunnermediator.rb:111
#: ./lib/test/unit/ui/testrunnerutilities.rb:111
#: ./lib/test/unit/ui/xml/testrunner.rb:111
#: ./lib/test/unit/util/backtracefilter.rb:111
#: ./lib/test/unit/util/method-owner-finder.rb:111
#: ./lib/test/unit/util/observable.rb:111
#: ./lib/test/unit/util/output.rb:111
#: ./lib/test/unit/util/procwrapper.rb:111
#: ./lib/test/unit/version.rb:111
msgid ""
"Nathaniel Talbott.\n"
"Copyright (c) 2000-2003, Nathaniel Talbott"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:114 ./lib/test/unit.rb:114
#: ./lib/test/unit/assertionfailederror.rb:114
#: ./lib/test/unit/assertions.rb:114
#: ./lib/test/unit/attribute-matcher.rb:114
#: ./lib/test/unit/attribute.rb:114 ./lib/test/unit/autorunner.rb:114
#: ./lib/test/unit/code-snippet-fetcher.rb:114
#: ./lib/test/unit/collector.rb:114
#: ./lib/test/unit/collector/descendant.rb:114
#: ./lib/test/unit/collector/dir.rb:114
#: ./lib/test/unit/collector/load.rb:114
#: ./lib/test/unit/collector/objectspace.rb:114
#: ./lib/test/unit/collector/xml.rb:114
#: ./lib/test/unit/color-scheme.rb:114 ./lib/test/unit/color.rb:114
#: ./lib/test/unit/data.rb:114 ./lib/test/unit/diff.rb:114
#: ./lib/test/unit/error.rb:114 ./lib/test/unit/exceptionhandler.rb:114
#: ./lib/test/unit/failure.rb:114
#: ./lib/test/unit/fault-location-detector.rb:114
#: ./lib/test/unit/fixture.rb:114 ./lib/test/unit/notification.rb:114
#: ./lib/test/unit/omission.rb:114 ./lib/test/unit/pending.rb:114
#: ./lib/test/unit/priority.rb:114
#: ./lib/test/unit/runner/console.rb:114
#: ./lib/test/unit/runner/emacs.rb:114
#: ./lib/test/unit/runner/xml.rb:114 ./lib/test/unit/testcase.rb:114
#: ./lib/test/unit/testresult.rb:114 ./lib/test/unit/testsuite.rb:114
#: ./lib/test/unit/testsuitecreator.rb:114
#: ./lib/test/unit/ui/console/outputlevel.rb:114
#: ./lib/test/unit/ui/console/testrunner.rb:114
#: ./lib/test/unit/ui/emacs/testrunner.rb:114
#: ./lib/test/unit/ui/testrunner.rb:114
#: ./lib/test/unit/ui/testrunnermediator.rb:114
#: ./lib/test/unit/ui/testrunnerutilities.rb:114
#: ./lib/test/unit/ui/xml/testrunner.rb:114
#: ./lib/test/unit/util/backtracefilter.rb:114
#: ./lib/test/unit/util/method-owner-finder.rb:114
#: ./lib/test/unit/util/observable.rb:114
#: ./lib/test/unit/util/output.rb:114
#: ./lib/test/unit/util/procwrapper.rb:114
#: ./lib/test/unit/version.rb:114
msgid "----"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:116 ./lib/test/unit.rb:116
#: ./lib/test/unit/assertionfailederror.rb:116
#: ./lib/test/unit/assertions.rb:116
#: ./lib/test/unit/attribute-matcher.rb:116
#: ./lib/test/unit/attribute.rb:116 ./lib/test/unit/autorunner.rb:116
#: ./lib/test/unit/code-snippet-fetcher.rb:116
#: ./lib/test/unit/collector.rb:116
#: ./lib/test/unit/collector/descendant.rb:116
#: ./lib/test/unit/collector/dir.rb:116
#: ./lib/test/unit/collector/load.rb:116
#: ./lib/test/unit/collector/objectspace.rb:116
#: ./lib/test/unit/collector/xml.rb:116
#: ./lib/test/unit/color-scheme.rb:116 ./lib/test/unit/color.rb:116
#: ./lib/test/unit/data.rb:116 ./lib/test/unit/diff.rb:116
#: ./lib/test/unit/error.rb:116 ./lib/test/unit/exceptionhandler.rb:116
#: ./lib/test/unit/failure.rb:116
#: ./lib/test/unit/fault-location-detector.rb:116
#: ./lib/test/unit/fixture.rb:116 ./lib/test/unit/notification.rb:116
#: ./lib/test/unit/omission.rb:116 ./lib/test/unit/pending.rb:116
#: ./lib/test/unit/priority.rb:116
#: ./lib/test/unit/runner/console.rb:116
#: ./lib/test/unit/runner/emacs.rb:116
#: ./lib/test/unit/runner/xml.rb:116 ./lib/test/unit/testcase.rb:116
#: ./lib/test/unit/testresult.rb:116 ./lib/test/unit/testsuite.rb:116
#: ./lib/test/unit/testsuitecreator.rb:116
#: ./lib/test/unit/ui/console/outputlevel.rb:116
#: ./lib/test/unit/ui/console/testrunner.rb:116
#: ./lib/test/unit/ui/emacs/testrunner.rb:116
#: ./lib/test/unit/ui/testrunner.rb:116
#: ./lib/test/unit/ui/testrunnermediator.rb:116
#: ./lib/test/unit/ui/testrunnerutilities.rb:116
#: ./lib/test/unit/ui/xml/testrunner.rb:116
#: ./lib/test/unit/util/backtracefilter.rb:116
#: ./lib/test/unit/util/method-owner-finder.rb:116
#: ./lib/test/unit/util/observable.rb:116
#: ./lib/test/unit/util/output.rb:116
#: ./lib/test/unit/util/procwrapper.rb:116
#: ./lib/test/unit/version.rb:116
msgid "= Usage"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:118 ./lib/test/unit.rb:118
#: ./lib/test/unit/assertionfailederror.rb:118
#: ./lib/test/unit/assertions.rb:118
#: ./lib/test/unit/attribute-matcher.rb:118
#: ./lib/test/unit/attribute.rb:118 ./lib/test/unit/autorunner.rb:118
#: ./lib/test/unit/code-snippet-fetcher.rb:118
#: ./lib/test/unit/collector.rb:118
#: ./lib/test/unit/collector/descendant.rb:118
#: ./lib/test/unit/collector/dir.rb:118
#: ./lib/test/unit/collector/load.rb:118
#: ./lib/test/unit/collector/objectspace.rb:118
#: ./lib/test/unit/collector/xml.rb:118
#: ./lib/test/unit/color-scheme.rb:118 ./lib/test/unit/color.rb:118
#: ./lib/test/unit/data.rb:118 ./lib/test/unit/diff.rb:118
#: ./lib/test/unit/error.rb:118 ./lib/test/unit/exceptionhandler.rb:118
#: ./lib/test/unit/failure.rb:118
#: ./lib/test/unit/fault-location-detector.rb:118
#: ./lib/test/unit/fixture.rb:118 ./lib/test/unit/notification.rb:118
#: ./lib/test/unit/omission.rb:118 ./lib/test/unit/pending.rb:118
#: ./lib/test/unit/priority.rb:118
#: ./lib/test/unit/runner/console.rb:118
#: ./lib/test/unit/runner/emacs.rb:118
#: ./lib/test/unit/runner/xml.rb:118 ./lib/test/unit/testcase.rb:118
#: ./lib/test/unit/testresult.rb:118 ./lib/test/unit/testsuite.rb:118
#: ./lib/test/unit/testsuitecreator.rb:118
#: ./lib/test/unit/ui/console/outputlevel.rb:118
#: ./lib/test/unit/ui/console/testrunner.rb:118
#: ./lib/test/unit/ui/emacs/testrunner.rb:118
#: ./lib/test/unit/ui/testrunner.rb:118
#: ./lib/test/unit/ui/testrunnermediator.rb:118
#: ./lib/test/unit/ui/testrunnerutilities.rb:118
#: ./lib/test/unit/ui/xml/testrunner.rb:118
#: ./lib/test/unit/util/backtracefilter.rb:118
#: ./lib/test/unit/util/method-owner-finder.rb:118
#: ./lib/test/unit/util/observable.rb:118
#: ./lib/test/unit/util/output.rb:118
#: ./lib/test/unit/util/procwrapper.rb:118
#: ./lib/test/unit/version.rb:118
msgid ""
"The general idea behind unit testing is that you write a _test_\n"
"_method_ that makes certain _assertions_ about your code, working\n"
"against a _test_ _fixture_. A bunch of these _test_ _methods_ are\n"
"bundled up into a _test_ _suite_ and can be run any time the\n"
"developer wants. The results of a run are gathered in a _test_\n"
"_result_ and displayed to the user through some UI. So, lets break\n"
"this down and see how Test::Unit provides each of these necessary\n"
"pieces."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:128 ./lib/test/unit.rb:128
#: ./lib/test/unit/assertionfailederror.rb:128
#: ./lib/test/unit/assertions.rb:128
#: ./lib/test/unit/attribute-matcher.rb:128
#: ./lib/test/unit/attribute.rb:128 ./lib/test/unit/autorunner.rb:128
#: ./lib/test/unit/code-snippet-fetcher.rb:128
#: ./lib/test/unit/collector.rb:128
#: ./lib/test/unit/collector/descendant.rb:128
#: ./lib/test/unit/collector/dir.rb:128
#: ./lib/test/unit/collector/load.rb:128
#: ./lib/test/unit/collector/objectspace.rb:128
#: ./lib/test/unit/collector/xml.rb:128
#: ./lib/test/unit/color-scheme.rb:128 ./lib/test/unit/color.rb:128
#: ./lib/test/unit/data.rb:128 ./lib/test/unit/diff.rb:128
#: ./lib/test/unit/error.rb:128 ./lib/test/unit/exceptionhandler.rb:128
#: ./lib/test/unit/failure.rb:128
#: ./lib/test/unit/fault-location-detector.rb:128
#: ./lib/test/unit/fixture.rb:128 ./lib/test/unit/notification.rb:128
#: ./lib/test/unit/omission.rb:128 ./lib/test/unit/pending.rb:128
#: ./lib/test/unit/priority.rb:128
#: ./lib/test/unit/runner/console.rb:128
#: ./lib/test/unit/runner/emacs.rb:128
#: ./lib/test/unit/runner/xml.rb:128 ./lib/test/unit/testcase.rb:128
#: ./lib/test/unit/testresult.rb:128 ./lib/test/unit/testsuite.rb:128
#: ./lib/test/unit/testsuitecreator.rb:128
#: ./lib/test/unit/ui/console/outputlevel.rb:128
#: ./lib/test/unit/ui/console/testrunner.rb:128
#: ./lib/test/unit/ui/emacs/testrunner.rb:128
#: ./lib/test/unit/ui/testrunner.rb:128
#: ./lib/test/unit/ui/testrunnermediator.rb:128
#: ./lib/test/unit/ui/testrunnerutilities.rb:128
#: ./lib/test/unit/ui/xml/testrunner.rb:128
#: ./lib/test/unit/util/backtracefilter.rb:128
#: ./lib/test/unit/util/method-owner-finder.rb:128
#: ./lib/test/unit/util/observable.rb:128
#: ./lib/test/unit/util/output.rb:128
#: ./lib/test/unit/util/procwrapper.rb:128
#: ./lib/test/unit/version.rb:128
msgid "== Assertions"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:130 ./lib/test/unit.rb:130
#: ./lib/test/unit/assertionfailederror.rb:130
#: ./lib/test/unit/assertions.rb:130
#: ./lib/test/unit/attribute-matcher.rb:130
#: ./lib/test/unit/attribute.rb:130 ./lib/test/unit/autorunner.rb:130
#: ./lib/test/unit/code-snippet-fetcher.rb:130
#: ./lib/test/unit/collector.rb:130
#: ./lib/test/unit/collector/descendant.rb:130
#: ./lib/test/unit/collector/dir.rb:130
#: ./lib/test/unit/collector/load.rb:130
#: ./lib/test/unit/collector/objectspace.rb:130
#: ./lib/test/unit/collector/xml.rb:130
#: ./lib/test/unit/color-scheme.rb:130 ./lib/test/unit/color.rb:130
#: ./lib/test/unit/data.rb:130 ./lib/test/unit/diff.rb:130
#: ./lib/test/unit/error.rb:130 ./lib/test/unit/exceptionhandler.rb:130
#: ./lib/test/unit/failure.rb:130
#: ./lib/test/unit/fault-location-detector.rb:130
#: ./lib/test/unit/fixture.rb:130 ./lib/test/unit/notification.rb:130
#: ./lib/test/unit/omission.rb:130 ./lib/test/unit/pending.rb:130
#: ./lib/test/unit/priority.rb:130
#: ./lib/test/unit/runner/console.rb:130
#: ./lib/test/unit/runner/emacs.rb:130
#: ./lib/test/unit/runner/xml.rb:130 ./lib/test/unit/testcase.rb:130
#: ./lib/test/unit/testresult.rb:130 ./lib/test/unit/testsuite.rb:130
#: ./lib/test/unit/testsuitecreator.rb:130
#: ./lib/test/unit/ui/console/outputlevel.rb:130
#: ./lib/test/unit/ui/console/testrunner.rb:130
#: ./lib/test/unit/ui/emacs/testrunner.rb:130
#: ./lib/test/unit/ui/testrunner.rb:130
#: ./lib/test/unit/ui/testrunnermediator.rb:130
#: ./lib/test/unit/ui/testrunnerutilities.rb:130
#: ./lib/test/unit/ui/xml/testrunner.rb:130
#: ./lib/test/unit/util/backtracefilter.rb:130
#: ./lib/test/unit/util/method-owner-finder.rb:130
#: ./lib/test/unit/util/observable.rb:130
#: ./lib/test/unit/util/output.rb:130
#: ./lib/test/unit/util/procwrapper.rb:130
#: ./lib/test/unit/version.rb:130
msgid ""
"These are the heart of the framework. Think of an assertion as a\n"
"statement of expected outcome, i.e. \"I assert that x should be equal\n"
"to y\". If, when the assertion is executed, it turns out to be\n"
"correct, nothing happens, and life is good. If, on the other hand,\n"
"your assertion turns out to be false, an error is propagated with\n"
"pertinent information so that you can go back and make your\n"
"assertion succeed, and, once again, life is good. For an explanation\n"
"of the current assertions, see Test::Unit::Assertions."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:140 ./lib/test/unit.rb:140
#: ./lib/test/unit/assertionfailederror.rb:140
#: ./lib/test/unit/assertions.rb:140
#: ./lib/test/unit/attribute-matcher.rb:140
#: ./lib/test/unit/attribute.rb:140 ./lib/test/unit/autorunner.rb:140
#: ./lib/test/unit/code-snippet-fetcher.rb:140
#: ./lib/test/unit/collector.rb:140
#: ./lib/test/unit/collector/descendant.rb:140
#: ./lib/test/unit/collector/dir.rb:140
#: ./lib/test/unit/collector/load.rb:140
#: ./lib/test/unit/collector/objectspace.rb:140
#: ./lib/test/unit/collector/xml.rb:140
#: ./lib/test/unit/color-scheme.rb:140 ./lib/test/unit/color.rb:140
#: ./lib/test/unit/data.rb:140 ./lib/test/unit/diff.rb:140
#: ./lib/test/unit/error.rb:140 ./lib/test/unit/exceptionhandler.rb:140
#: ./lib/test/unit/failure.rb:140
#: ./lib/test/unit/fault-location-detector.rb:140
#: ./lib/test/unit/fixture.rb:140 ./lib/test/unit/notification.rb:140
#: ./lib/test/unit/omission.rb:140 ./lib/test/unit/pending.rb:140
#: ./lib/test/unit/priority.rb:140
#: ./lib/test/unit/runner/console.rb:140
#: ./lib/test/unit/runner/emacs.rb:140
#: ./lib/test/unit/runner/xml.rb:140 ./lib/test/unit/testcase.rb:140
#: ./lib/test/unit/testresult.rb:140 ./lib/test/unit/testsuite.rb:140
#: ./lib/test/unit/testsuitecreator.rb:140
#: ./lib/test/unit/ui/console/outputlevel.rb:140
#: ./lib/test/unit/ui/console/testrunner.rb:140
#: ./lib/test/unit/ui/emacs/testrunner.rb:140
#: ./lib/test/unit/ui/testrunner.rb:140
#: ./lib/test/unit/ui/testrunnermediator.rb:140
#: ./lib/test/unit/ui/testrunnerutilities.rb:140
#: ./lib/test/unit/ui/xml/testrunner.rb:140
#: ./lib/test/unit/util/backtracefilter.rb:140
#: ./lib/test/unit/util/method-owner-finder.rb:140
#: ./lib/test/unit/util/observable.rb:140
#: ./lib/test/unit/util/output.rb:140
#: ./lib/test/unit/util/procwrapper.rb:140
#: ./lib/test/unit/version.rb:140
msgid "== Test Method & Test Fixture"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:142 ./lib/test/unit.rb:142
#: ./lib/test/unit/assertionfailederror.rb:142
#: ./lib/test/unit/assertions.rb:142
#: ./lib/test/unit/attribute-matcher.rb:142
#: ./lib/test/unit/attribute.rb:142 ./lib/test/unit/autorunner.rb:142
#: ./lib/test/unit/code-snippet-fetcher.rb:142
#: ./lib/test/unit/collector.rb:142
#: ./lib/test/unit/collector/descendant.rb:142
#: ./lib/test/unit/collector/dir.rb:142
#: ./lib/test/unit/collector/load.rb:142
#: ./lib/test/unit/collector/objectspace.rb:142
#: ./lib/test/unit/collector/xml.rb:142
#: ./lib/test/unit/color-scheme.rb:142 ./lib/test/unit/color.rb:142
#: ./lib/test/unit/data.rb:142 ./lib/test/unit/diff.rb:142
#: ./lib/test/unit/error.rb:142 ./lib/test/unit/exceptionhandler.rb:142
#: ./lib/test/unit/failure.rb:142
#: ./lib/test/unit/fault-location-detector.rb:142
#: ./lib/test/unit/fixture.rb:142 ./lib/test/unit/notification.rb:142
#: ./lib/test/unit/omission.rb:142 ./lib/test/unit/pending.rb:142
#: ./lib/test/unit/priority.rb:142
#: ./lib/test/unit/runner/console.rb:142
#: ./lib/test/unit/runner/emacs.rb:142
#: ./lib/test/unit/runner/xml.rb:142 ./lib/test/unit/testcase.rb:142
#: ./lib/test/unit/testresult.rb:142 ./lib/test/unit/testsuite.rb:142
#: ./lib/test/unit/testsuitecreator.rb:142
#: ./lib/test/unit/ui/console/outputlevel.rb:142
#: ./lib/test/unit/ui/console/testrunner.rb:142
#: ./lib/test/unit/ui/emacs/testrunner.rb:142
#: ./lib/test/unit/ui/testrunner.rb:142
#: ./lib/test/unit/ui/testrunnermediator.rb:142
#: ./lib/test/unit/ui/testrunnerutilities.rb:142
#: ./lib/test/unit/ui/xml/testrunner.rb:142
#: ./lib/test/unit/util/backtracefilter.rb:142
#: ./lib/test/unit/util/method-owner-finder.rb:142
#: ./lib/test/unit/util/observable.rb:142
#: ./lib/test/unit/util/output.rb:142
#: ./lib/test/unit/util/procwrapper.rb:142
#: ./lib/test/unit/version.rb:142
msgid ""
"Obviously, these assertions have to be called within a context that\n"
"knows about them and can do something meaningful with their\n"
"pass/fail value. Also, it's handy to collect a bunch of related\n"
"tests, each test represented by a method, into a common test class\n"
"that knows how to run them. The tests will be in a separate class\n"
"from the code they're testing for a couple of reasons. First of all,\n"
"it allows your code to stay uncluttered with test code, making it\n"
"easier to maintain. Second, it allows the tests to be stripped out\n"
"for deployment, since they're really there for you, the developer,\n"
"and your users don't need them. Third, and most importantly, it\n"
"allows you to set up a common test fixture for your tests to run\n"
"against."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:155 ./lib/test/unit.rb:155
#: ./lib/test/unit/assertionfailederror.rb:155
#: ./lib/test/unit/assertions.rb:155
#: ./lib/test/unit/attribute-matcher.rb:155
#: ./lib/test/unit/attribute.rb:155 ./lib/test/unit/autorunner.rb:155
#: ./lib/test/unit/code-snippet-fetcher.rb:155
#: ./lib/test/unit/collector.rb:155
#: ./lib/test/unit/collector/descendant.rb:155
#: ./lib/test/unit/collector/dir.rb:155
#: ./lib/test/unit/collector/load.rb:155
#: ./lib/test/unit/collector/objectspace.rb:155
#: ./lib/test/unit/collector/xml.rb:155
#: ./lib/test/unit/color-scheme.rb:155 ./lib/test/unit/color.rb:155
#: ./lib/test/unit/data.rb:155 ./lib/test/unit/diff.rb:155
#: ./lib/test/unit/error.rb:155 ./lib/test/unit/exceptionhandler.rb:155
#: ./lib/test/unit/failure.rb:155
#: ./lib/test/unit/fault-location-detector.rb:155
#: ./lib/test/unit/fixture.rb:155 ./lib/test/unit/notification.rb:155
#: ./lib/test/unit/omission.rb:155 ./lib/test/unit/pending.rb:155
#: ./lib/test/unit/priority.rb:155
#: ./lib/test/unit/runner/console.rb:155
#: ./lib/test/unit/runner/emacs.rb:155
#: ./lib/test/unit/runner/xml.rb:155 ./lib/test/unit/testcase.rb:155
#: ./lib/test/unit/testresult.rb:155 ./lib/test/unit/testsuite.rb:155
#: ./lib/test/unit/testsuitecreator.rb:155
#: ./lib/test/unit/ui/console/outputlevel.rb:155
#: ./lib/test/unit/ui/console/testrunner.rb:155
#: ./lib/test/unit/ui/emacs/testrunner.rb:155
#: ./lib/test/unit/ui/testrunner.rb:155
#: ./lib/test/unit/ui/testrunnermediator.rb:155
#: ./lib/test/unit/ui/testrunnerutilities.rb:155
#: ./lib/test/unit/ui/xml/testrunner.rb:155
#: ./lib/test/unit/util/backtracefilter.rb:155
#: ./lib/test/unit/util/method-owner-finder.rb:155
#: ./lib/test/unit/util/observable.rb:155
#: ./lib/test/unit/util/output.rb:155
#: ./lib/test/unit/util/procwrapper.rb:155
#: ./lib/test/unit/version.rb:155
msgid ""
"What's a test fixture? Well, tests do not live in a vacuum; rather,\n"
"they're run against the code they are testing. Often, a collection\n"
"of tests will run against a common set of data, also called a\n"
"fixture. If they're all bundled into the same test class, they can\n"
"all share the setting up and tearing down of that data, eliminating\n"
"unnecessary duplication and making it much easier to add related\n"
"tests."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:163 ./lib/test/unit.rb:163
#: ./lib/test/unit/assertionfailederror.rb:163
#: ./lib/test/unit/assertions.rb:163
#: ./lib/test/unit/attribute-matcher.rb:163
#: ./lib/test/unit/attribute.rb:163 ./lib/test/unit/autorunner.rb:163
#: ./lib/test/unit/code-snippet-fetcher.rb:163
#: ./lib/test/unit/collector.rb:163
#: ./lib/test/unit/collector/descendant.rb:163
#: ./lib/test/unit/collector/dir.rb:163
#: ./lib/test/unit/collector/load.rb:163
#: ./lib/test/unit/collector/objectspace.rb:163
#: ./lib/test/unit/collector/xml.rb:163
#: ./lib/test/unit/color-scheme.rb:163 ./lib/test/unit/color.rb:163
#: ./lib/test/unit/data.rb:163 ./lib/test/unit/diff.rb:163
#: ./lib/test/unit/error.rb:163 ./lib/test/unit/exceptionhandler.rb:163
#: ./lib/test/unit/failure.rb:163
#: ./lib/test/unit/fault-location-detector.rb:163
#: ./lib/test/unit/fixture.rb:163 ./lib/test/unit/notification.rb:163
#: ./lib/test/unit/omission.rb:163 ./lib/test/unit/pending.rb:163
#: ./lib/test/unit/priority.rb:163
#: ./lib/test/unit/runner/console.rb:163
#: ./lib/test/unit/runner/emacs.rb:163
#: ./lib/test/unit/runner/xml.rb:163 ./lib/test/unit/testcase.rb:163
#: ./lib/test/unit/testresult.rb:163 ./lib/test/unit/testsuite.rb:163
#: ./lib/test/unit/testsuitecreator.rb:163
#: ./lib/test/unit/ui/console/outputlevel.rb:163
#: ./lib/test/unit/ui/console/testrunner.rb:163
#: ./lib/test/unit/ui/emacs/testrunner.rb:163
#: ./lib/test/unit/ui/testrunner.rb:163
#: ./lib/test/unit/ui/testrunnermediator.rb:163
#: ./lib/test/unit/ui/testrunnerutilities.rb:163
#: ./lib/test/unit/ui/xml/testrunner.rb:163
#: ./lib/test/unit/util/backtracefilter.rb:163
#: ./lib/test/unit/util/method-owner-finder.rb:163
#: ./lib/test/unit/util/observable.rb:163
#: ./lib/test/unit/util/output.rb:163
#: ./lib/test/unit/util/procwrapper.rb:163
#: ./lib/test/unit/version.rb:163
msgid ""
"Test::Unit::TestCase wraps up a collection of test methods together\n"
"and allows you to easily set up and tear down the same test fixture\n"
"for each test. This is done by overriding #setup and/or #teardown,\n"
"which will be called before and after each test method that is\n"
"run. The TestCase also knows how to collect the results of your\n"
"assertions into a Test::Unit::TestResult, which can then be reported\n"
"back to you... but I'm getting ahead of myself. To write a test,\n"
"follow these steps:"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:172 ./lib/test/unit.rb:172
#: ./lib/test/unit/assertionfailederror.rb:172
#: ./lib/test/unit/assertions.rb:172
#: ./lib/test/unit/attribute-matcher.rb:172
#: ./lib/test/unit/attribute.rb:172 ./lib/test/unit/autorunner.rb:172
#: ./lib/test/unit/code-snippet-fetcher.rb:172
#: ./lib/test/unit/collector.rb:172
#: ./lib/test/unit/collector/descendant.rb:172
#: ./lib/test/unit/collector/dir.rb:172
#: ./lib/test/unit/collector/load.rb:172
#: ./lib/test/unit/collector/objectspace.rb:172
#: ./lib/test/unit/collector/xml.rb:172
#: ./lib/test/unit/color-scheme.rb:172 ./lib/test/unit/color.rb:172
#: ./lib/test/unit/data.rb:172 ./lib/test/unit/diff.rb:172
#: ./lib/test/unit/error.rb:172 ./lib/test/unit/exceptionhandler.rb:172
#: ./lib/test/unit/failure.rb:172
#: ./lib/test/unit/fault-location-detector.rb:172
#: ./lib/test/unit/fixture.rb:172 ./lib/test/unit/notification.rb:172
#: ./lib/test/unit/omission.rb:172 ./lib/test/unit/pending.rb:172
#: ./lib/test/unit/priority.rb:172
#: ./lib/test/unit/runner/console.rb:172
#: ./lib/test/unit/runner/emacs.rb:172
#: ./lib/test/unit/runner/xml.rb:172 ./lib/test/unit/testcase.rb:172
#: ./lib/test/unit/testresult.rb:172 ./lib/test/unit/testsuite.rb:172
#: ./lib/test/unit/testsuitecreator.rb:172
#: ./lib/test/unit/ui/console/outputlevel.rb:172
#: ./lib/test/unit/ui/console/testrunner.rb:172
#: ./lib/test/unit/ui/emacs/testrunner.rb:172
#: ./lib/test/unit/ui/testrunner.rb:172
#: ./lib/test/unit/ui/testrunnermediator.rb:172
#: ./lib/test/unit/ui/testrunnerutilities.rb:172
#: ./lib/test/unit/ui/xml/testrunner.rb:172
#: ./lib/test/unit/util/backtracefilter.rb:172
#: ./lib/test/unit/util/method-owner-finder.rb:172
#: ./lib/test/unit/util/observable.rb:172
#: ./lib/test/unit/util/output.rb:172
#: ./lib/test/unit/util/procwrapper.rb:172
#: ./lib/test/unit/version.rb:172
msgid ""
"* Make sure Test::Unit is in your library path.\n"
"* require 'test/unit' in your test script.\n"
"* Create a class that subclasses Test::Unit::TestCase.\n"
"* Add a method that begins with \"test\" to your class.\n"
"* Make assertions in your test method.\n"
"* Optionally define #setup and/or #teardown to set up and/or tear\n"
"  down your common test fixture.\n"
"* You can now run your test as you would any other Ruby\n"
"  script... try it and see!"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:182 ./lib/test/unit.rb:182
#: ./lib/test/unit/assertionfailederror.rb:182
#: ./lib/test/unit/assertions.rb:182
#: ./lib/test/unit/attribute-matcher.rb:182
#: ./lib/test/unit/attribute.rb:182 ./lib/test/unit/autorunner.rb:182
#: ./lib/test/unit/code-snippet-fetcher.rb:182
#: ./lib/test/unit/collector.rb:182
#: ./lib/test/unit/collector/descendant.rb:182
#: ./lib/test/unit/collector/dir.rb:182
#: ./lib/test/unit/collector/load.rb:182
#: ./lib/test/unit/collector/objectspace.rb:182
#: ./lib/test/unit/collector/xml.rb:182
#: ./lib/test/unit/color-scheme.rb:182 ./lib/test/unit/color.rb:182
#: ./lib/test/unit/data.rb:182 ./lib/test/unit/diff.rb:182
#: ./lib/test/unit/error.rb:182 ./lib/test/unit/exceptionhandler.rb:182
#: ./lib/test/unit/failure.rb:182
#: ./lib/test/unit/fault-location-detector.rb:182
#: ./lib/test/unit/fixture.rb:182 ./lib/test/unit/notification.rb:182
#: ./lib/test/unit/omission.rb:182 ./lib/test/unit/pending.rb:182
#: ./lib/test/unit/priority.rb:182
#: ./lib/test/unit/runner/console.rb:182
#: ./lib/test/unit/runner/emacs.rb:182
#: ./lib/test/unit/runner/xml.rb:182 ./lib/test/unit/testcase.rb:182
#: ./lib/test/unit/testresult.rb:182 ./lib/test/unit/testsuite.rb:182
#: ./lib/test/unit/testsuitecreator.rb:182
#: ./lib/test/unit/ui/console/outputlevel.rb:182
#: ./lib/test/unit/ui/console/testrunner.rb:182
#: ./lib/test/unit/ui/emacs/testrunner.rb:182
#: ./lib/test/unit/ui/testrunner.rb:182
#: ./lib/test/unit/ui/testrunnermediator.rb:182
#: ./lib/test/unit/ui/testrunnerutilities.rb:182
#: ./lib/test/unit/ui/xml/testrunner.rb:182
#: ./lib/test/unit/util/backtracefilter.rb:182
#: ./lib/test/unit/util/method-owner-finder.rb:182
#: ./lib/test/unit/util/observable.rb:182
#: ./lib/test/unit/util/output.rb:182
#: ./lib/test/unit/util/procwrapper.rb:182
#: ./lib/test/unit/version.rb:182
msgid ""
"A really simple test might look like this (#setup and #teardown are\n"
"commented out to indicate that they are completely optional):"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:185 ./lib/test/unit.rb:185
#: ./lib/test/unit/assertionfailederror.rb:185
#: ./lib/test/unit/assertions.rb:185
#: ./lib/test/unit/attribute-matcher.rb:185
#: ./lib/test/unit/attribute.rb:185 ./lib/test/unit/autorunner.rb:185
#: ./lib/test/unit/code-snippet-fetcher.rb:185
#: ./lib/test/unit/collector.rb:185
#: ./lib/test/unit/collector/descendant.rb:185
#: ./lib/test/unit/collector/dir.rb:185
#: ./lib/test/unit/collector/load.rb:185
#: ./lib/test/unit/collector/objectspace.rb:185
#: ./lib/test/unit/collector/xml.rb:185
#: ./lib/test/unit/color-scheme.rb:185 ./lib/test/unit/color.rb:185
#: ./lib/test/unit/data.rb:185 ./lib/test/unit/diff.rb:185
#: ./lib/test/unit/error.rb:185 ./lib/test/unit/exceptionhandler.rb:185
#: ./lib/test/unit/failure.rb:185
#: ./lib/test/unit/fault-location-detector.rb:185
#: ./lib/test/unit/fixture.rb:185 ./lib/test/unit/notification.rb:185
#: ./lib/test/unit/omission.rb:185 ./lib/test/unit/pending.rb:185
#: ./lib/test/unit/priority.rb:185
#: ./lib/test/unit/runner/console.rb:185
#: ./lib/test/unit/runner/emacs.rb:185
#: ./lib/test/unit/runner/xml.rb:185 ./lib/test/unit/testcase.rb:185
#: ./lib/test/unit/testresult.rb:185 ./lib/test/unit/testsuite.rb:185
#: ./lib/test/unit/testsuitecreator.rb:185
#: ./lib/test/unit/ui/console/outputlevel.rb:185
#: ./lib/test/unit/ui/console/testrunner.rb:185
#: ./lib/test/unit/ui/emacs/testrunner.rb:185
#: ./lib/test/unit/ui/testrunner.rb:185
#: ./lib/test/unit/ui/testrunnermediator.rb:185
#: ./lib/test/unit/ui/testrunnerutilities.rb:185
#: ./lib/test/unit/ui/xml/testrunner.rb:185
#: ./lib/test/unit/util/backtracefilter.rb:185
#: ./lib/test/unit/util/method-owner-finder.rb:185
#: ./lib/test/unit/util/observable.rb:185
#: ./lib/test/unit/util/output.rb:185
#: ./lib/test/unit/util/procwrapper.rb:185
#: ./lib/test/unit/version.rb:185
msgid "    require 'test/unit'"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:187 ./lib/test/unit.rb:187
#: ./lib/test/unit/assertionfailederror.rb:187
#: ./lib/test/unit/assertions.rb:187
#: ./lib/test/unit/attribute-matcher.rb:187
#: ./lib/test/unit/attribute.rb:187 ./lib/test/unit/autorunner.rb:187
#: ./lib/test/unit/code-snippet-fetcher.rb:187
#: ./lib/test/unit/collector.rb:187
#: ./lib/test/unit/collector/descendant.rb:187
#: ./lib/test/unit/collector/dir.rb:187
#: ./lib/test/unit/collector/load.rb:187
#: ./lib/test/unit/collector/objectspace.rb:187
#: ./lib/test/unit/collector/xml.rb:187
#: ./lib/test/unit/color-scheme.rb:187 ./lib/test/unit/color.rb:187
#: ./lib/test/unit/data.rb:187 ./lib/test/unit/diff.rb:187
#: ./lib/test/unit/error.rb:187 ./lib/test/unit/exceptionhandler.rb:187
#: ./lib/test/unit/failure.rb:187
#: ./lib/test/unit/fault-location-detector.rb:187
#: ./lib/test/unit/fixture.rb:187 ./lib/test/unit/notification.rb:187
#: ./lib/test/unit/omission.rb:187 ./lib/test/unit/pending.rb:187
#: ./lib/test/unit/priority.rb:187
#: ./lib/test/unit/runner/console.rb:187
#: ./lib/test/unit/runner/emacs.rb:187
#: ./lib/test/unit/runner/xml.rb:187 ./lib/test/unit/testcase.rb:187
#: ./lib/test/unit/testresult.rb:187 ./lib/test/unit/testsuite.rb:187
#: ./lib/test/unit/testsuitecreator.rb:187
#: ./lib/test/unit/ui/console/outputlevel.rb:187
#: ./lib/test/unit/ui/console/testrunner.rb:187
#: ./lib/test/unit/ui/emacs/testrunner.rb:187
#: ./lib/test/unit/ui/testrunner.rb:187
#: ./lib/test/unit/ui/testrunnermediator.rb:187
#: ./lib/test/unit/ui/testrunnerutilities.rb:187
#: ./lib/test/unit/ui/xml/testrunner.rb:187
#: ./lib/test/unit/util/backtracefilter.rb:187
#: ./lib/test/unit/util/method-owner-finder.rb:187
#: ./lib/test/unit/util/observable.rb:187
#: ./lib/test/unit/util/output.rb:187
#: ./lib/test/unit/util/procwrapper.rb:187
#: ./lib/test/unit/version.rb:187
msgid ""
"    class MyTest < Test::Unit::TestCase\n"
"      # def setup\n"
"      # end"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:191 ./lib/test/unit.rb:191
#: ./lib/test/unit/assertionfailederror.rb:191
#: ./lib/test/unit/assertions.rb:191
#: ./lib/test/unit/attribute-matcher.rb:191
#: ./lib/test/unit/attribute.rb:191 ./lib/test/unit/autorunner.rb:191
#: ./lib/test/unit/code-snippet-fetcher.rb:191
#: ./lib/test/unit/collector.rb:191
#: ./lib/test/unit/collector/descendant.rb:191
#: ./lib/test/unit/collector/dir.rb:191
#: ./lib/test/unit/collector/load.rb:191
#: ./lib/test/unit/collector/objectspace.rb:191
#: ./lib/test/unit/collector/xml.rb:191
#: ./lib/test/unit/color-scheme.rb:191 ./lib/test/unit/color.rb:191
#: ./lib/test/unit/data.rb:191 ./lib/test/unit/diff.rb:191
#: ./lib/test/unit/error.rb:191 ./lib/test/unit/exceptionhandler.rb:191
#: ./lib/test/unit/failure.rb:191
#: ./lib/test/unit/fault-location-detector.rb:191
#: ./lib/test/unit/fixture.rb:191 ./lib/test/unit/notification.rb:191
#: ./lib/test/unit/omission.rb:191 ./lib/test/unit/pending.rb:191
#: ./lib/test/unit/priority.rb:191
#: ./lib/test/unit/runner/console.rb:191
#: ./lib/test/unit/runner/emacs.rb:191
#: ./lib/test/unit/runner/xml.rb:191 ./lib/test/unit/testcase.rb:191
#: ./lib/test/unit/testresult.rb:191 ./lib/test/unit/testsuite.rb:191
#: ./lib/test/unit/testsuitecreator.rb:191
#: ./lib/test/unit/ui/console/outputlevel.rb:191
#: ./lib/test/unit/ui/console/testrunner.rb:191
#: ./lib/test/unit/ui/emacs/testrunner.rb:191
#: ./lib/test/unit/ui/testrunner.rb:191
#: ./lib/test/unit/ui/testrunnermediator.rb:191
#: ./lib/test/unit/ui/testrunnerutilities.rb:191
#: ./lib/test/unit/ui/xml/testrunner.rb:191
#: ./lib/test/unit/util/backtracefilter.rb:191
#: ./lib/test/unit/util/method-owner-finder.rb:191
#: ./lib/test/unit/util/observable.rb:191
#: ./lib/test/unit/util/output.rb:191
#: ./lib/test/unit/util/procwrapper.rb:191
#: ./lib/test/unit/version.rb:191
msgid ""
"      # def teardown\n"
"      # end"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:194 ./lib/test/unit.rb:194
#: ./lib/test/unit/assertionfailederror.rb:194
#: ./lib/test/unit/assertions.rb:194
#: ./lib/test/unit/attribute-matcher.rb:194
#: ./lib/test/unit/attribute.rb:194 ./lib/test/unit/autorunner.rb:194
#: ./lib/test/unit/code-snippet-fetcher.rb:194
#: ./lib/test/unit/collector.rb:194
#: ./lib/test/unit/collector/descendant.rb:194
#: ./lib/test/unit/collector/dir.rb:194
#: ./lib/test/unit/collector/load.rb:194
#: ./lib/test/unit/collector/objectspace.rb:194
#: ./lib/test/unit/collector/xml.rb:194
#: ./lib/test/unit/color-scheme.rb:194 ./lib/test/unit/color.rb:194
#: ./lib/test/unit/data.rb:194 ./lib/test/unit/diff.rb:194
#: ./lib/test/unit/error.rb:194 ./lib/test/unit/exceptionhandler.rb:194
#: ./lib/test/unit/failure.rb:194
#: ./lib/test/unit/fault-location-detector.rb:194
#: ./lib/test/unit/fixture.rb:194 ./lib/test/unit/notification.rb:194
#: ./lib/test/unit/omission.rb:194 ./lib/test/unit/pending.rb:194
#: ./lib/test/unit/priority.rb:194
#: ./lib/test/unit/runner/console.rb:194
#: ./lib/test/unit/runner/emacs.rb:194
#: ./lib/test/unit/runner/xml.rb:194 ./lib/test/unit/testcase.rb:194
#: ./lib/test/unit/testresult.rb:194 ./lib/test/unit/testsuite.rb:194
#: ./lib/test/unit/testsuitecreator.rb:194
#: ./lib/test/unit/ui/console/outputlevel.rb:194
#: ./lib/test/unit/ui/console/testrunner.rb:194
#: ./lib/test/unit/ui/emacs/testrunner.rb:194
#: ./lib/test/unit/ui/testrunner.rb:194
#: ./lib/test/unit/ui/testrunnermediator.rb:194
#: ./lib/test/unit/ui/testrunnerutilities.rb:194
#: ./lib/test/unit/ui/xml/testrunner.rb:194
#: ./lib/test/unit/util/backtracefilter.rb:194
#: ./lib/test/unit/util/method-owner-finder.rb:194
#: ./lib/test/unit/util/observable.rb:194
#: ./lib/test/unit/util/output.rb:194
#: ./lib/test/unit/util/procwrapper.rb:194
#: ./lib/test/unit/version.rb:194
msgid ""
"      def test_fail\n"
"        assert(false, 'Assertion was false.')\n"
"      end\n"
"    end"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:200 ./lib/test/unit.rb:200
#: ./lib/test/unit/assertionfailederror.rb:200
#: ./lib/test/unit/assertions.rb:200
#: ./lib/test/unit/attribute-matcher.rb:200
#: ./lib/test/unit/attribute.rb:200 ./lib/test/unit/autorunner.rb:200
#: ./lib/test/unit/code-snippet-fetcher.rb:200
#: ./lib/test/unit/collector.rb:200
#: ./lib/test/unit/collector/descendant.rb:200
#: ./lib/test/unit/collector/dir.rb:200
#: ./lib/test/unit/collector/load.rb:200
#: ./lib/test/unit/collector/objectspace.rb:200
#: ./lib/test/unit/collector/xml.rb:200
#: ./lib/test/unit/color-scheme.rb:200 ./lib/test/unit/color.rb:200
#: ./lib/test/unit/data.rb:200 ./lib/test/unit/diff.rb:200
#: ./lib/test/unit/error.rb:200 ./lib/test/unit/exceptionhandler.rb:200
#: ./lib/test/unit/failure.rb:200
#: ./lib/test/unit/fault-location-detector.rb:200
#: ./lib/test/unit/fixture.rb:200 ./lib/test/unit/notification.rb:200
#: ./lib/test/unit/omission.rb:200 ./lib/test/unit/pending.rb:200
#: ./lib/test/unit/priority.rb:200
#: ./lib/test/unit/runner/console.rb:200
#: ./lib/test/unit/runner/emacs.rb:200
#: ./lib/test/unit/runner/xml.rb:200 ./lib/test/unit/testcase.rb:200
#: ./lib/test/unit/testresult.rb:200 ./lib/test/unit/testsuite.rb:200
#: ./lib/test/unit/testsuitecreator.rb:200
#: ./lib/test/unit/ui/console/outputlevel.rb:200
#: ./lib/test/unit/ui/console/testrunner.rb:200
#: ./lib/test/unit/ui/emacs/testrunner.rb:200
#: ./lib/test/unit/ui/testrunner.rb:200
#: ./lib/test/unit/ui/testrunnermediator.rb:200
#: ./lib/test/unit/ui/testrunnerutilities.rb:200
#: ./lib/test/unit/ui/xml/testrunner.rb:200
#: ./lib/test/unit/util/backtracefilter.rb:200
#: ./lib/test/unit/util/method-owner-finder.rb:200
#: ./lib/test/unit/util/observable.rb:200
#: ./lib/test/unit/util/output.rb:200
#: ./lib/test/unit/util/procwrapper.rb:200
#: ./lib/test/unit/version.rb:200
msgid "== Test Runners"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:202 ./lib/test/unit.rb:202
#: ./lib/test/unit/assertionfailederror.rb:202
#: ./lib/test/unit/assertions.rb:202
#: ./lib/test/unit/attribute-matcher.rb:202
#: ./lib/test/unit/attribute.rb:202 ./lib/test/unit/autorunner.rb:202
#: ./lib/test/unit/code-snippet-fetcher.rb:202
#: ./lib/test/unit/collector.rb:202
#: ./lib/test/unit/collector/descendant.rb:202
#: ./lib/test/unit/collector/dir.rb:202
#: ./lib/test/unit/collector/load.rb:202
#: ./lib/test/unit/collector/objectspace.rb:202
#: ./lib/test/unit/collector/xml.rb:202
#: ./lib/test/unit/color-scheme.rb:202 ./lib/test/unit/color.rb:202
#: ./lib/test/unit/data.rb:202 ./lib/test/unit/diff.rb:202
#: ./lib/test/unit/error.rb:202 ./lib/test/unit/exceptionhandler.rb:202
#: ./lib/test/unit/failure.rb:202
#: ./lib/test/unit/fault-location-detector.rb:202
#: ./lib/test/unit/fixture.rb:202 ./lib/test/unit/notification.rb:202
#: ./lib/test/unit/omission.rb:202 ./lib/test/unit/pending.rb:202
#: ./lib/test/unit/priority.rb:202
#: ./lib/test/unit/runner/console.rb:202
#: ./lib/test/unit/runner/emacs.rb:202
#: ./lib/test/unit/runner/xml.rb:202 ./lib/test/unit/testcase.rb:202
#: ./lib/test/unit/testresult.rb:202 ./lib/test/unit/testsuite.rb:202
#: ./lib/test/unit/testsuitecreator.rb:202
#: ./lib/test/unit/ui/console/outputlevel.rb:202
#: ./lib/test/unit/ui/console/testrunner.rb:202
#: ./lib/test/unit/ui/emacs/testrunner.rb:202
#: ./lib/test/unit/ui/testrunner.rb:202
#: ./lib/test/unit/ui/testrunnermediator.rb:202
#: ./lib/test/unit/ui/testrunnerutilities.rb:202
#: ./lib/test/unit/ui/xml/testrunner.rb:202
#: ./lib/test/unit/util/backtracefilter.rb:202
#: ./lib/test/unit/util/method-owner-finder.rb:202
#: ./lib/test/unit/util/observable.rb:202
#: ./lib/test/unit/util/output.rb:202
#: ./lib/test/unit/util/procwrapper.rb:202
#: ./lib/test/unit/version.rb:202
msgid ""
"So, now you have this great test class, but you still\n"
"need a way to run it and view any failures that occur\n"
"during the run. There are some test runner; console test\n"
"runner, GTK+ test runner and so on. The console test\n"
"runner is automatically invoked for you if you require\n"
"'test/unit' and simply run the file. To use another\n"
"runner simply set default test runner ID to\n"
"Test::Unit::AutoRunner:"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:211 ./lib/test/unit.rb:211
#: ./lib/test/unit/assertionfailederror.rb:211
#: ./lib/test/unit/assertions.rb:211
#: ./lib/test/unit/attribute-matcher.rb:211
#: ./lib/test/unit/attribute.rb:211 ./lib/test/unit/autorunner.rb:211
#: ./lib/test/unit/code-snippet-fetcher.rb:211
#: ./lib/test/unit/collector.rb:211
#: ./lib/test/unit/collector/descendant.rb:211
#: ./lib/test/unit/collector/dir.rb:211
#: ./lib/test/unit/collector/load.rb:211
#: ./lib/test/unit/collector/objectspace.rb:211
#: ./lib/test/unit/collector/xml.rb:211
#: ./lib/test/unit/color-scheme.rb:211 ./lib/test/unit/color.rb:211
#: ./lib/test/unit/data.rb:211 ./lib/test/unit/diff.rb:211
#: ./lib/test/unit/error.rb:211 ./lib/test/unit/exceptionhandler.rb:211
#: ./lib/test/unit/failure.rb:211
#: ./lib/test/unit/fault-location-detector.rb:211
#: ./lib/test/unit/fixture.rb:211 ./lib/test/unit/notification.rb:211
#: ./lib/test/unit/omission.rb:211 ./lib/test/unit/pending.rb:211
#: ./lib/test/unit/priority.rb:211
#: ./lib/test/unit/runner/console.rb:211
#: ./lib/test/unit/runner/emacs.rb:211
#: ./lib/test/unit/runner/xml.rb:211 ./lib/test/unit/testcase.rb:211
#: ./lib/test/unit/testresult.rb:211 ./lib/test/unit/testsuite.rb:211
#: ./lib/test/unit/testsuitecreator.rb:211
#: ./lib/test/unit/ui/console/outputlevel.rb:211
#: ./lib/test/unit/ui/console/testrunner.rb:211
#: ./lib/test/unit/ui/emacs/testrunner.rb:211
#: ./lib/test/unit/ui/testrunner.rb:211
#: ./lib/test/unit/ui/testrunnermediator.rb:211
#: ./lib/test/unit/ui/testrunnerutilities.rb:211
#: ./lib/test/unit/ui/xml/testrunner.rb:211
#: ./lib/test/unit/util/backtracefilter.rb:211
#: ./lib/test/unit/util/method-owner-finder.rb:211
#: ./lib/test/unit/util/observable.rb:211
#: ./lib/test/unit/util/output.rb:211
#: ./lib/test/unit/util/procwrapper.rb:211
#: ./lib/test/unit/version.rb:211
msgid ""
"   require 'test/unit'\n"
"   Test::Unit::AutoRunner.default_runner = \"gtk2\""
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:214 ./lib/test/unit.rb:214
#: ./lib/test/unit/assertionfailederror.rb:214
#: ./lib/test/unit/assertions.rb:214
#: ./lib/test/unit/attribute-matcher.rb:214
#: ./lib/test/unit/attribute.rb:214 ./lib/test/unit/autorunner.rb:214
#: ./lib/test/unit/code-snippet-fetcher.rb:214
#: ./lib/test/unit/collector.rb:214
#: ./lib/test/unit/collector/descendant.rb:214
#: ./lib/test/unit/collector/dir.rb:214
#: ./lib/test/unit/collector/load.rb:214
#: ./lib/test/unit/collector/objectspace.rb:214
#: ./lib/test/unit/collector/xml.rb:214
#: ./lib/test/unit/color-scheme.rb:214 ./lib/test/unit/color.rb:214
#: ./lib/test/unit/data.rb:214 ./lib/test/unit/diff.rb:214
#: ./lib/test/unit/error.rb:214 ./lib/test/unit/exceptionhandler.rb:214
#: ./lib/test/unit/failure.rb:214
#: ./lib/test/unit/fault-location-detector.rb:214
#: ./lib/test/unit/fixture.rb:214 ./lib/test/unit/notification.rb:214
#: ./lib/test/unit/omission.rb:214 ./lib/test/unit/pending.rb:214
#: ./lib/test/unit/priority.rb:214
#: ./lib/test/unit/runner/console.rb:214
#: ./lib/test/unit/runner/emacs.rb:214
#: ./lib/test/unit/runner/xml.rb:214 ./lib/test/unit/testcase.rb:214
#: ./lib/test/unit/testresult.rb:214 ./lib/test/unit/testsuite.rb:214
#: ./lib/test/unit/testsuitecreator.rb:214
#: ./lib/test/unit/ui/console/outputlevel.rb:214
#: ./lib/test/unit/ui/console/testrunner.rb:214
#: ./lib/test/unit/ui/emacs/testrunner.rb:214
#: ./lib/test/unit/ui/testrunner.rb:214
#: ./lib/test/unit/ui/testrunnermediator.rb:214
#: ./lib/test/unit/ui/testrunnerutilities.rb:214
#: ./lib/test/unit/ui/xml/testrunner.rb:214
#: ./lib/test/unit/util/backtracefilter.rb:214
#: ./lib/test/unit/util/method-owner-finder.rb:214
#: ./lib/test/unit/util/observable.rb:214
#: ./lib/test/unit/util/output.rb:214
#: ./lib/test/unit/util/procwrapper.rb:214
#: ./lib/test/unit/version.rb:214
msgid "== Test Suite"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:216 ./lib/test/unit.rb:216
#: ./lib/test/unit/assertionfailederror.rb:216
#: ./lib/test/unit/assertions.rb:216
#: ./lib/test/unit/attribute-matcher.rb:216
#: ./lib/test/unit/attribute.rb:216 ./lib/test/unit/autorunner.rb:216
#: ./lib/test/unit/code-snippet-fetcher.rb:216
#: ./lib/test/unit/collector.rb:216
#: ./lib/test/unit/collector/descendant.rb:216
#: ./lib/test/unit/collector/dir.rb:216
#: ./lib/test/unit/collector/load.rb:216
#: ./lib/test/unit/collector/objectspace.rb:216
#: ./lib/test/unit/collector/xml.rb:216
#: ./lib/test/unit/color-scheme.rb:216 ./lib/test/unit/color.rb:216
#: ./lib/test/unit/data.rb:216 ./lib/test/unit/diff.rb:216
#: ./lib/test/unit/error.rb:216 ./lib/test/unit/exceptionhandler.rb:216
#: ./lib/test/unit/failure.rb:216
#: ./lib/test/unit/fault-location-detector.rb:216
#: ./lib/test/unit/fixture.rb:216 ./lib/test/unit/notification.rb:216
#: ./lib/test/unit/omission.rb:216 ./lib/test/unit/pending.rb:216
#: ./lib/test/unit/priority.rb:216
#: ./lib/test/unit/runner/console.rb:216
#: ./lib/test/unit/runner/emacs.rb:216
#: ./lib/test/unit/runner/xml.rb:216 ./lib/test/unit/testcase.rb:216
#: ./lib/test/unit/testresult.rb:216 ./lib/test/unit/testsuite.rb:216
#: ./lib/test/unit/testsuitecreator.rb:216
#: ./lib/test/unit/ui/console/outputlevel.rb:216
#: ./lib/test/unit/ui/console/testrunner.rb:216
#: ./lib/test/unit/ui/emacs/testrunner.rb:216
#: ./lib/test/unit/ui/testrunner.rb:216
#: ./lib/test/unit/ui/testrunnermediator.rb:216
#: ./lib/test/unit/ui/testrunnerutilities.rb:216
#: ./lib/test/unit/ui/xml/testrunner.rb:216
#: ./lib/test/unit/util/backtracefilter.rb:216
#: ./lib/test/unit/util/method-owner-finder.rb:216
#: ./lib/test/unit/util/observable.rb:216
#: ./lib/test/unit/util/output.rb:216
#: ./lib/test/unit/util/procwrapper.rb:216
#: ./lib/test/unit/version.rb:216
msgid ""
"As more and more unit tests accumulate for a given project, it\n"
"becomes a real drag running them one at a time, and it also\n"
"introduces the potential to overlook a failing test because you\n"
"forget to run it. Suddenly it becomes very handy that the\n"
"TestRunners can take any object that returns a Test::Unit::TestSuite\n"
"in response to a suite method. The TestSuite can, in turn, contain\n"
"other TestSuites or individual tests (typically created by a\n"
"TestCase). In other words, you can easily wrap up a group of\n"
"TestCases and TestSuites."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:226 ./lib/test/unit.rb:226
#: ./lib/test/unit/assertionfailederror.rb:226
#: ./lib/test/unit/assertions.rb:226
#: ./lib/test/unit/attribute-matcher.rb:226
#: ./lib/test/unit/attribute.rb:226 ./lib/test/unit/autorunner.rb:226
#: ./lib/test/unit/code-snippet-fetcher.rb:226
#: ./lib/test/unit/collector.rb:226
#: ./lib/test/unit/collector/descendant.rb:226
#: ./lib/test/unit/collector/dir.rb:226
#: ./lib/test/unit/collector/load.rb:226
#: ./lib/test/unit/collector/objectspace.rb:226
#: ./lib/test/unit/collector/xml.rb:226
#: ./lib/test/unit/color-scheme.rb:226 ./lib/test/unit/color.rb:226
#: ./lib/test/unit/data.rb:226 ./lib/test/unit/diff.rb:226
#: ./lib/test/unit/error.rb:226 ./lib/test/unit/exceptionhandler.rb:226
#: ./lib/test/unit/failure.rb:226
#: ./lib/test/unit/fault-location-detector.rb:226
#: ./lib/test/unit/fixture.rb:226 ./lib/test/unit/notification.rb:226
#: ./lib/test/unit/omission.rb:226 ./lib/test/unit/pending.rb:226
#: ./lib/test/unit/priority.rb:226
#: ./lib/test/unit/runner/console.rb:226
#: ./lib/test/unit/runner/emacs.rb:226
#: ./lib/test/unit/runner/xml.rb:226 ./lib/test/unit/testcase.rb:226
#: ./lib/test/unit/testresult.rb:226 ./lib/test/unit/testsuite.rb:226
#: ./lib/test/unit/testsuitecreator.rb:226
#: ./lib/test/unit/ui/console/outputlevel.rb:226
#: ./lib/test/unit/ui/console/testrunner.rb:226
#: ./lib/test/unit/ui/emacs/testrunner.rb:226
#: ./lib/test/unit/ui/testrunner.rb:226
#: ./lib/test/unit/ui/testrunnermediator.rb:226
#: ./lib/test/unit/ui/testrunnerutilities.rb:226
#: ./lib/test/unit/ui/xml/testrunner.rb:226
#: ./lib/test/unit/util/backtracefilter.rb:226
#: ./lib/test/unit/util/method-owner-finder.rb:226
#: ./lib/test/unit/util/observable.rb:226
#: ./lib/test/unit/util/output.rb:226
#: ./lib/test/unit/util/procwrapper.rb:226
#: ./lib/test/unit/version.rb:226
msgid ""
"Test::Unit does a little bit more for you, by wrapping\n"
"these up automatically when you require\n"
"'test/unit'. What does this mean? It means you could\n"
"write the above test case like this instead:"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:231 ./lib/test/unit.rb:231
#: ./lib/test/unit/assertionfailederror.rb:231
#: ./lib/test/unit/assertions.rb:231
#: ./lib/test/unit/attribute-matcher.rb:231
#: ./lib/test/unit/attribute.rb:231 ./lib/test/unit/autorunner.rb:231
#: ./lib/test/unit/code-snippet-fetcher.rb:231
#: ./lib/test/unit/collector.rb:231
#: ./lib/test/unit/collector/descendant.rb:231
#: ./lib/test/unit/collector/dir.rb:231
#: ./lib/test/unit/collector/load.rb:231
#: ./lib/test/unit/collector/objectspace.rb:231
#: ./lib/test/unit/collector/xml.rb:231
#: ./lib/test/unit/color-scheme.rb:231 ./lib/test/unit/color.rb:231
#: ./lib/test/unit/data.rb:231 ./lib/test/unit/diff.rb:231
#: ./lib/test/unit/error.rb:231 ./lib/test/unit/exceptionhandler.rb:231
#: ./lib/test/unit/failure.rb:231
#: ./lib/test/unit/fault-location-detector.rb:231
#: ./lib/test/unit/fixture.rb:231 ./lib/test/unit/notification.rb:231
#: ./lib/test/unit/omission.rb:231 ./lib/test/unit/pending.rb:231
#: ./lib/test/unit/priority.rb:231
#: ./lib/test/unit/runner/console.rb:231
#: ./lib/test/unit/runner/emacs.rb:231
#: ./lib/test/unit/runner/xml.rb:231 ./lib/test/unit/testcase.rb:231
#: ./lib/test/unit/testresult.rb:231 ./lib/test/unit/testsuite.rb:231
#: ./lib/test/unit/testsuitecreator.rb:231
#: ./lib/test/unit/ui/console/outputlevel.rb:231
#: ./lib/test/unit/ui/console/testrunner.rb:231
#: ./lib/test/unit/ui/emacs/testrunner.rb:231
#: ./lib/test/unit/ui/testrunner.rb:231
#: ./lib/test/unit/ui/testrunnermediator.rb:231
#: ./lib/test/unit/ui/testrunnerutilities.rb:231
#: ./lib/test/unit/ui/xml/testrunner.rb:231
#: ./lib/test/unit/util/backtracefilter.rb:231
#: ./lib/test/unit/util/method-owner-finder.rb:231
#: ./lib/test/unit/util/observable.rb:231
#: ./lib/test/unit/util/output.rb:231
#: ./lib/test/unit/util/procwrapper.rb:231
#: ./lib/test/unit/version.rb:231
msgid ""
" require 'test/unit'\n"
" require 'test_myfirsttests'\n"
" require 'test_moretestsbyme'\n"
" require 'test_anothersetoftests'"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:236 ./lib/test/unit.rb:236
#: ./lib/test/unit/assertionfailederror.rb:236
#: ./lib/test/unit/assertions.rb:236
#: ./lib/test/unit/attribute-matcher.rb:236
#: ./lib/test/unit/attribute.rb:236 ./lib/test/unit/autorunner.rb:236
#: ./lib/test/unit/code-snippet-fetcher.rb:236
#: ./lib/test/unit/collector.rb:236
#: ./lib/test/unit/collector/descendant.rb:236
#: ./lib/test/unit/collector/dir.rb:236
#: ./lib/test/unit/collector/load.rb:236
#: ./lib/test/unit/collector/objectspace.rb:236
#: ./lib/test/unit/collector/xml.rb:236
#: ./lib/test/unit/color-scheme.rb:236 ./lib/test/unit/color.rb:236
#: ./lib/test/unit/data.rb:236 ./lib/test/unit/diff.rb:236
#: ./lib/test/unit/error.rb:236 ./lib/test/unit/exceptionhandler.rb:236
#: ./lib/test/unit/failure.rb:236
#: ./lib/test/unit/fault-location-detector.rb:236
#: ./lib/test/unit/fixture.rb:236 ./lib/test/unit/notification.rb:236
#: ./lib/test/unit/omission.rb:236 ./lib/test/unit/pending.rb:236
#: ./lib/test/unit/priority.rb:236
#: ./lib/test/unit/runner/console.rb:236
#: ./lib/test/unit/runner/emacs.rb:236
#: ./lib/test/unit/runner/xml.rb:236 ./lib/test/unit/testcase.rb:236
#: ./lib/test/unit/testresult.rb:236 ./lib/test/unit/testsuite.rb:236
#: ./lib/test/unit/testsuitecreator.rb:236
#: ./lib/test/unit/ui/console/outputlevel.rb:236
#: ./lib/test/unit/ui/console/testrunner.rb:236
#: ./lib/test/unit/ui/emacs/testrunner.rb:236
#: ./lib/test/unit/ui/testrunner.rb:236
#: ./lib/test/unit/ui/testrunnermediator.rb:236
#: ./lib/test/unit/ui/testrunnerutilities.rb:236
#: ./lib/test/unit/ui/xml/testrunner.rb:236
#: ./lib/test/unit/util/backtracefilter.rb:236
#: ./lib/test/unit/util/method-owner-finder.rb:236
#: ./lib/test/unit/util/observable.rb:236
#: ./lib/test/unit/util/output.rb:236
#: ./lib/test/unit/util/procwrapper.rb:236
#: ./lib/test/unit/version.rb:236
msgid ""
"Test::Unit is smart enough to find all the test cases existing in\n"
"the ObjectSpace and wrap them up into a suite for you. It then runs\n"
"the dynamic suite using the console TestRunner."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:241 ./lib/test/unit.rb:241
#: ./lib/test/unit/assertionfailederror.rb:241
#: ./lib/test/unit/assertions.rb:241
#: ./lib/test/unit/attribute-matcher.rb:241
#: ./lib/test/unit/attribute.rb:241 ./lib/test/unit/autorunner.rb:241
#: ./lib/test/unit/code-snippet-fetcher.rb:241
#: ./lib/test/unit/collector.rb:241
#: ./lib/test/unit/collector/descendant.rb:241
#: ./lib/test/unit/collector/dir.rb:241
#: ./lib/test/unit/collector/load.rb:241
#: ./lib/test/unit/collector/objectspace.rb:241
#: ./lib/test/unit/collector/xml.rb:241
#: ./lib/test/unit/color-scheme.rb:241 ./lib/test/unit/color.rb:241
#: ./lib/test/unit/data.rb:241 ./lib/test/unit/diff.rb:241
#: ./lib/test/unit/error.rb:241 ./lib/test/unit/exceptionhandler.rb:241
#: ./lib/test/unit/failure.rb:241
#: ./lib/test/unit/fault-location-detector.rb:241
#: ./lib/test/unit/fixture.rb:241 ./lib/test/unit/notification.rb:241
#: ./lib/test/unit/omission.rb:241 ./lib/test/unit/pending.rb:241
#: ./lib/test/unit/priority.rb:241
#: ./lib/test/unit/runner/console.rb:241
#: ./lib/test/unit/runner/emacs.rb:241
#: ./lib/test/unit/runner/xml.rb:241 ./lib/test/unit/testcase.rb:241
#: ./lib/test/unit/testresult.rb:241 ./lib/test/unit/testsuite.rb:241
#: ./lib/test/unit/testsuitecreator.rb:241
#: ./lib/test/unit/ui/console/outputlevel.rb:241
#: ./lib/test/unit/ui/console/testrunner.rb:241
#: ./lib/test/unit/ui/emacs/testrunner.rb:241
#: ./lib/test/unit/ui/testrunner.rb:241
#: ./lib/test/unit/ui/testrunnermediator.rb:241
#: ./lib/test/unit/ui/testrunnerutilities.rb:241
#: ./lib/test/unit/ui/xml/testrunner.rb:241
#: ./lib/test/unit/util/backtracefilter.rb:241
#: ./lib/test/unit/util/method-owner-finder.rb:241
#: ./lib/test/unit/util/observable.rb:241
#: ./lib/test/unit/util/output.rb:241
#: ./lib/test/unit/util/procwrapper.rb:241
#: ./lib/test/unit/version.rb:241
msgid "== Configuration file"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:257 ./lib/test/unit.rb:257
#: ./lib/test/unit/assertionfailederror.rb:257
#: ./lib/test/unit/assertions.rb:257
#: ./lib/test/unit/attribute-matcher.rb:257
#: ./lib/test/unit/attribute.rb:257 ./lib/test/unit/autorunner.rb:257
#: ./lib/test/unit/code-snippet-fetcher.rb:257
#: ./lib/test/unit/collector.rb:257
#: ./lib/test/unit/collector/descendant.rb:257
#: ./lib/test/unit/collector/dir.rb:257
#: ./lib/test/unit/collector/load.rb:257
#: ./lib/test/unit/collector/objectspace.rb:257
#: ./lib/test/unit/collector/xml.rb:257
#: ./lib/test/unit/color-scheme.rb:257 ./lib/test/unit/color.rb:257
#: ./lib/test/unit/data.rb:257 ./lib/test/unit/diff.rb:257
#: ./lib/test/unit/error.rb:257 ./lib/test/unit/exceptionhandler.rb:257
#: ./lib/test/unit/failure.rb:257
#: ./lib/test/unit/fault-location-detector.rb:257
#: ./lib/test/unit/fixture.rb:257 ./lib/test/unit/notification.rb:257
#: ./lib/test/unit/omission.rb:257 ./lib/test/unit/pending.rb:257
#: ./lib/test/unit/priority.rb:257
#: ./lib/test/unit/runner/console.rb:257
#: ./lib/test/unit/runner/emacs.rb:257
#: ./lib/test/unit/runner/xml.rb:257 ./lib/test/unit/testcase.rb:257
#: ./lib/test/unit/testresult.rb:257 ./lib/test/unit/testsuite.rb:257
#: ./lib/test/unit/testsuitecreator.rb:257
#: ./lib/test/unit/ui/console/outputlevel.rb:257
#: ./lib/test/unit/ui/console/testrunner.rb:257
#: ./lib/test/unit/ui/emacs/testrunner.rb:257
#: ./lib/test/unit/ui/testrunner.rb:257
#: ./lib/test/unit/ui/testrunnermediator.rb:257
#: ./lib/test/unit/ui/testrunnerutilities.rb:257
#: ./lib/test/unit/ui/xml/testrunner.rb:257
#: ./lib/test/unit/util/backtracefilter.rb:257
#: ./lib/test/unit/util/method-owner-finder.rb:257
#: ./lib/test/unit/util/observable.rb:257
#: ./lib/test/unit/util/output.rb:257
#: ./lib/test/unit/util/procwrapper.rb:257
#: ./lib/test/unit/version.rb:257
msgid ""
"  color_schemes:\n"
"    inverted:\n"
"      success:\n"
"        name: red\n"
"        bold: true\n"
"      failure:\n"
"        name: green\n"
"        bold: true\n"
"    other_scheme:\n"
"      ..."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:270 ./lib/test/unit.rb:270
#: ./lib/test/unit/assertionfailederror.rb:270
#: ./lib/test/unit/assertions.rb:270
#: ./lib/test/unit/attribute-matcher.rb:270
#: ./lib/test/unit/attribute.rb:270 ./lib/test/unit/autorunner.rb:270
#: ./lib/test/unit/code-snippet-fetcher.rb:270
#: ./lib/test/unit/collector.rb:270
#: ./lib/test/unit/collector/descendant.rb:270
#: ./lib/test/unit/collector/dir.rb:270
#: ./lib/test/unit/collector/load.rb:270
#: ./lib/test/unit/collector/objectspace.rb:270
#: ./lib/test/unit/collector/xml.rb:270
#: ./lib/test/unit/color-scheme.rb:270 ./lib/test/unit/color.rb:270
#: ./lib/test/unit/data.rb:270 ./lib/test/unit/diff.rb:270
#: ./lib/test/unit/error.rb:270 ./lib/test/unit/exceptionhandler.rb:270
#: ./lib/test/unit/failure.rb:270
#: ./lib/test/unit/fault-location-detector.rb:270
#: ./lib/test/unit/fixture.rb:270 ./lib/test/unit/notification.rb:270
#: ./lib/test/unit/omission.rb:270 ./lib/test/unit/pending.rb:270
#: ./lib/test/unit/priority.rb:270
#: ./lib/test/unit/runner/console.rb:270
#: ./lib/test/unit/runner/emacs.rb:270
#: ./lib/test/unit/runner/xml.rb:270 ./lib/test/unit/testcase.rb:270
#: ./lib/test/unit/testresult.rb:270 ./lib/test/unit/testsuite.rb:270
#: ./lib/test/unit/testsuitecreator.rb:270
#: ./lib/test/unit/ui/console/outputlevel.rb:270
#: ./lib/test/unit/ui/console/testrunner.rb:270
#: ./lib/test/unit/ui/emacs/testrunner.rb:270
#: ./lib/test/unit/ui/testrunner.rb:270
#: ./lib/test/unit/ui/testrunnermediator.rb:270
#: ./lib/test/unit/ui/testrunnerutilities.rb:270
#: ./lib/test/unit/ui/xml/testrunner.rb:270
#: ./lib/test/unit/util/backtracefilter.rb:270
#: ./lib/test/unit/util/method-owner-finder.rb:270
#: ./lib/test/unit/util/observable.rb:270
#: ./lib/test/unit/util/output.rb:270
#: ./lib/test/unit/util/procwrapper.rb:270
#: ./lib/test/unit/version.rb:270
msgid ""
" color_schemes:\n"
"   SCHEME_NAME:\n"
"     EVENT_NAME:\n"
"       name: COLOR_NAME\n"
"       intensity: BOOLEAN\n"
"       bold: BOOLEAN\n"
"       italic: BOOLEAN\n"
"       underline: BOOLEAN\n"
"     ...\n"
"   ..."
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:281 ./lib/test/unit.rb:281
#: ./lib/test/unit/assertionfailederror.rb:281
#: ./lib/test/unit/assertions.rb:281
#: ./lib/test/unit/attribute-matcher.rb:281
#: ./lib/test/unit/attribute.rb:281 ./lib/test/unit/autorunner.rb:281
#: ./lib/test/unit/code-snippet-fetcher.rb:281
#: ./lib/test/unit/collector.rb:281
#: ./lib/test/unit/collector/descendant.rb:281
#: ./lib/test/unit/collector/dir.rb:281
#: ./lib/test/unit/collector/load.rb:281
#: ./lib/test/unit/collector/objectspace.rb:281
#: ./lib/test/unit/collector/xml.rb:281
#: ./lib/test/unit/color-scheme.rb:281 ./lib/test/unit/color.rb:281
#: ./lib/test/unit/data.rb:281 ./lib/test/unit/diff.rb:281
#: ./lib/test/unit/error.rb:281 ./lib/test/unit/exceptionhandler.rb:281
#: ./lib/test/unit/failure.rb:281
#: ./lib/test/unit/fault-location-detector.rb:281
#: ./lib/test/unit/fixture.rb:281 ./lib/test/unit/notification.rb:281
#: ./lib/test/unit/omission.rb:281 ./lib/test/unit/pending.rb:281
#: ./lib/test/unit/priority.rb:281
#: ./lib/test/unit/runner/console.rb:281
#: ./lib/test/unit/runner/emacs.rb:281
#: ./lib/test/unit/runner/xml.rb:281 ./lib/test/unit/testcase.rb:281
#: ./lib/test/unit/testresult.rb:281 ./lib/test/unit/testsuite.rb:281
#: ./lib/test/unit/testsuitecreator.rb:281
#: ./lib/test/unit/ui/console/outputlevel.rb:281
#: ./lib/test/unit/ui/console/testrunner.rb:281
#: ./lib/test/unit/ui/emacs/testrunner.rb:281
#: ./lib/test/unit/ui/testrunner.rb:281
#: ./lib/test/unit/ui/testrunnermediator.rb:281
#: ./lib/test/unit/ui/testrunnerutilities.rb:281
#: ./lib/test/unit/ui/xml/testrunner.rb:281
#: ./lib/test/unit/util/backtracefilter.rb:281
#: ./lib/test/unit/util/method-owner-finder.rb:281
#: ./lib/test/unit/util/observable.rb:281
#: ./lib/test/unit/util/output.rb:281
#: ./lib/test/unit/util/procwrapper.rb:281
#: ./lib/test/unit/version.rb:281
msgid ""
"SCHEME_NAME:: the name of the color scheme\n"
"EVENT_NAME:: one of [success, failure, pending,\n"
"             omission, notification, error]\n"
"COLOR_NAME:: one of [black, red, green, yellow, blue,\n"
"             magenta, cyan, white]\n"
"BOOLEAN:: true or false"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:291 ./lib/test/unit.rb:291
#: ./lib/test/unit/assertionfailederror.rb:291
#: ./lib/test/unit/assertions.rb:291
#: ./lib/test/unit/attribute-matcher.rb:291
#: ./lib/test/unit/attribute.rb:291 ./lib/test/unit/autorunner.rb:291
#: ./lib/test/unit/code-snippet-fetcher.rb:291
#: ./lib/test/unit/collector.rb:291
#: ./lib/test/unit/collector/descendant.rb:291
#: ./lib/test/unit/collector/dir.rb:291
#: ./lib/test/unit/collector/load.rb:291
#: ./lib/test/unit/collector/objectspace.rb:291
#: ./lib/test/unit/collector/xml.rb:291
#: ./lib/test/unit/color-scheme.rb:291 ./lib/test/unit/color.rb:291
#: ./lib/test/unit/data.rb:291 ./lib/test/unit/diff.rb:291
#: ./lib/test/unit/error.rb:291 ./lib/test/unit/exceptionhandler.rb:291
#: ./lib/test/unit/failure.rb:291
#: ./lib/test/unit/fault-location-detector.rb:291
#: ./lib/test/unit/fixture.rb:291 ./lib/test/unit/notification.rb:291
#: ./lib/test/unit/omission.rb:291 ./lib/test/unit/pending.rb:291
#: ./lib/test/unit/priority.rb:291
#: ./lib/test/unit/runner/console.rb:291
#: ./lib/test/unit/runner/emacs.rb:291
#: ./lib/test/unit/runner/xml.rb:291 ./lib/test/unit/testcase.rb:291
#: ./lib/test/unit/testresult.rb:291 ./lib/test/unit/testsuite.rb:291
#: ./lib/test/unit/testsuitecreator.rb:291
#: ./lib/test/unit/ui/console/outputlevel.rb:291
#: ./lib/test/unit/ui/console/testrunner.rb:291
#: ./lib/test/unit/ui/emacs/testrunner.rb:291
#: ./lib/test/unit/ui/testrunner.rb:291
#: ./lib/test/unit/ui/testrunnermediator.rb:291
#: ./lib/test/unit/ui/testrunnerutilities.rb:291
#: ./lib/test/unit/ui/xml/testrunner.rb:291
#: ./lib/test/unit/util/backtracefilter.rb:291
#: ./lib/test/unit/util/method-owner-finder.rb:291
#: ./lib/test/unit/util/observable.rb:291
#: ./lib/test/unit/util/output.rb:291
#: ./lib/test/unit/util/procwrapper.rb:291
#: ./lib/test/unit/version.rb:291
msgid ""
"  runner: console\n"
"  console_options:\n"
"    color_scheme: inverted\n"
"  color_schemes:\n"
"    inverted:\n"
"      success:\n"
"        name: red\n"
"        bold: true\n"
"      failure:\n"
"        name: green\n"
"        bold: true"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:303 ./lib/test/unit.rb:303
#: ./lib/test/unit/assertionfailederror.rb:303
#: ./lib/test/unit/assertions.rb:303
#: ./lib/test/unit/attribute-matcher.rb:303
#: ./lib/test/unit/attribute.rb:303 ./lib/test/unit/autorunner.rb:303
#: ./lib/test/unit/code-snippet-fetcher.rb:303
#: ./lib/test/unit/collector.rb:303
#: ./lib/test/unit/collector/descendant.rb:303
#: ./lib/test/unit/collector/dir.rb:303
#: ./lib/test/unit/collector/load.rb:303
#: ./lib/test/unit/collector/objectspace.rb:303
#: ./lib/test/unit/collector/xml.rb:303
#: ./lib/test/unit/color-scheme.rb:303 ./lib/test/unit/color.rb:303
#: ./lib/test/unit/data.rb:303 ./lib/test/unit/diff.rb:303
#: ./lib/test/unit/error.rb:303 ./lib/test/unit/exceptionhandler.rb:303
#: ./lib/test/unit/failure.rb:303
#: ./lib/test/unit/fault-location-detector.rb:303
#: ./lib/test/unit/fixture.rb:303 ./lib/test/unit/notification.rb:303
#: ./lib/test/unit/omission.rb:303 ./lib/test/unit/pending.rb:303
#: ./lib/test/unit/priority.rb:303
#: ./lib/test/unit/runner/console.rb:303
#: ./lib/test/unit/runner/emacs.rb:303
#: ./lib/test/unit/runner/xml.rb:303 ./lib/test/unit/testcase.rb:303
#: ./lib/test/unit/testresult.rb:303 ./lib/test/unit/testsuite.rb:303
#: ./lib/test/unit/testsuitecreator.rb:303
#: ./lib/test/unit/ui/console/outputlevel.rb:303
#: ./lib/test/unit/ui/console/testrunner.rb:303
#: ./lib/test/unit/ui/emacs/testrunner.rb:303
#: ./lib/test/unit/ui/testrunner.rb:303
#: ./lib/test/unit/ui/testrunnermediator.rb:303
#: ./lib/test/unit/ui/testrunnerutilities.rb:303
#: ./lib/test/unit/ui/xml/testrunner.rb:303
#: ./lib/test/unit/util/backtracefilter.rb:303
#: ./lib/test/unit/util/method-owner-finder.rb:303
#: ./lib/test/unit/util/observable.rb:303
#: ./lib/test/unit/util/output.rb:303
#: ./lib/test/unit/util/procwrapper.rb:303
#: ./lib/test/unit/version.rb:303
msgid "== Questions?"
msgstr ""

# Test::Unit
#: ./lib/test-unit.rb:305 ./lib/test/unit.rb:305
#: ./lib/test/unit/assertionfailederror.rb:305
#: ./lib/test/unit/assertions.rb:305
#: ./lib/test/unit/attribute-matcher.rb:305
#: ./lib/test/unit/attribute.rb:305 ./lib/test/unit/autorunner.rb:305
#: ./lib/test/unit/code-snippet-fetcher.rb:305
#: ./lib/test/unit/collector.rb:305
#: ./lib/test/unit/collector/descendant.rb:305
#: ./lib/test/unit/collector/dir.rb:305
#: ./lib/test/unit/collector/load.rb:305
#: ./lib/test/unit/collector/objectspace.rb:305
#: ./lib/test/unit/collector/xml.rb:305
#: ./lib/test/unit/color-scheme.rb:305 ./lib/test/unit/color.rb:305
#: ./lib/test/unit/data.rb:305 ./lib/test/unit/diff.rb:305
#: ./lib/test/unit/error.rb:305 ./lib/test/unit/exceptionhandler.rb:305
#: ./lib/test/unit/failure.rb:305
#: ./lib/test/unit/fault-location-detector.rb:305
#: ./lib/test/unit/fixture.rb:305 ./lib/test/unit/notification.rb:305
#: ./lib/test/unit/omission.rb:305 ./lib/test/unit/pending.rb:305
#: ./lib/test/unit/priority.rb:305
#: ./lib/test/unit/runner/console.rb:305
#: ./lib/test/unit/runner/emacs.rb:305
#: ./lib/test/unit/runner/xml.rb:305 ./lib/test/unit/testcase.rb:305
#: ./lib/test/unit/testresult.rb:305 ./lib/test/unit/testsuite.rb:305
#: ./lib/test/unit/testsuitecreator.rb:305
#: ./lib/test/unit/ui/console/outputlevel.rb:305
#: ./lib/test/unit/ui/console/testrunner.rb:305
#: ./lib/test/unit/ui/emacs/testrunner.rb:305
#: ./lib/test/unit/ui/testrunner.rb:305
#: ./lib/test/unit/ui/testrunnermediator.rb:305
#: ./lib/test/unit/ui/testrunnerutilities.rb:305
#: ./lib/test/unit/ui/xml/testrunner.rb:305
#: ./lib/test/unit/util/backtracefilter.rb:305
#: ./lib/test/unit/util/method-owner-finder.rb:305
#: ./lib/test/unit/util/observable.rb:305
#: ./lib/test/unit/util/output.rb:305
#: ./lib/test/unit/util/procwrapper.rb:305
#: ./lib/test/unit/version.rb:305
msgid ""
"I'd really like to get feedback from all levels of Ruby\n"
"practitioners about typos, grammatical errors, unclear statements,\n"
"missing points, etc., in this document (or any other)."
msgstr ""

#: ./lib/test-unit.rb:243 ./lib/test/unit.rb:243
#: ./lib/test/unit/assertionfailederror.rb:243
#: ./lib/test/unit/assertions.rb:243
#: ./lib/test/unit/attribute-matcher.rb:243
#: ./lib/test/unit/attribute.rb:243 ./lib/test/unit/autorunner.rb:243
#: ./lib/test/unit/code-snippet-fetcher.rb:243
#: ./lib/test/unit/collector.rb:243
#: ./lib/test/unit/collector/descendant.rb:243
#: ./lib/test/unit/collector/dir.rb:243
#: ./lib/test/unit/collector/load.rb:243
#: ./lib/test/unit/collector/objectspace.rb:243
#: ./lib/test/unit/collector/xml.rb:243
#: ./lib/test/unit/color-scheme.rb:243 ./lib/test/unit/color.rb:243
#: ./lib/test/unit/data.rb:243 ./lib/test/unit/diff.rb:243
#: ./lib/test/unit/error.rb:243 ./lib/test/unit/exceptionhandler.rb:243
#: ./lib/test/unit/failure.rb:243
#: ./lib/test/unit/fault-location-detector.rb:243
#: ./lib/test/unit/fixture.rb:243 ./lib/test/unit/notification.rb:243
#: ./lib/test/unit/omission.rb:243 ./lib/test/unit/pending.rb:243
#: ./lib/test/unit/priority.rb:243
#: ./lib/test/unit/runner/console.rb:243
#: ./lib/test/unit/runner/emacs.rb:243
#: ./lib/test/unit/runner/xml.rb:243 ./lib/test/unit/testcase.rb:243
#: ./lib/test/unit/testresult.rb:243 ./lib/test/unit/testsuite.rb:243
#: ./lib/test/unit/testsuitecreator.rb:243
#: ./lib/test/unit/ui/console/outputlevel.rb:243
#: ./lib/test/unit/ui/console/testrunner.rb:243
#: ./lib/test/unit/ui/emacs/testrunner.rb:243
#: ./lib/test/unit/ui/testrunner.rb:243
#: ./lib/test/unit/ui/testrunnermediator.rb:243
#: ./lib/test/unit/ui/testrunnerutilities.rb:243
#: ./lib/test/unit/ui/xml/testrunner.rb:243
#: ./lib/test/unit/util/backtracefilter.rb:243
#: ./lib/test/unit/util/method-owner-finder.rb:243
#: ./lib/test/unit/util/observable.rb:243
#: ./lib/test/unit/util/output.rb:243
#: ./lib/test/unit/util/procwrapper.rb:243
#: ./lib/test/unit/version.rb:243
msgid ""
"Test::Unit reads 'test-unit.yml' in the current working\n"
"directory as Test::Unit's configuration file. It can\n"
"contain the following configurations:"
msgstr "Test::Unitは現在のワーキングディレクトリにある'test-unit.yml'をTest::Unitの設定ファイルとして読み込みます。このファイルには以下のような設定をすることができます。"

#: ./lib/test-unit.rb:252 ./lib/test/unit.rb:252
#: ./lib/test/unit/assertionfailederror.rb:252
#: ./lib/test/unit/assertions.rb:252
#: ./lib/test/unit/attribute-matcher.rb:252
#: ./lib/test/unit/attribute.rb:252 ./lib/test/unit/autorunner.rb:252
#: ./lib/test/unit/code-snippet-fetcher.rb:252
#: ./lib/test/unit/collector.rb:252
#: ./lib/test/unit/collector/descendant.rb:252
#: ./lib/test/unit/collector/dir.rb:252
#: ./lib/test/unit/collector/load.rb:252
#: ./lib/test/unit/collector/objectspace.rb:252
#: ./lib/test/unit/collector/xml.rb:252
#: ./lib/test/unit/color-scheme.rb:252 ./lib/test/unit/color.rb:252
#: ./lib/test/unit/data.rb:252 ./lib/test/unit/diff.rb:252
#: ./lib/test/unit/error.rb:252 ./lib/test/unit/exceptionhandler.rb:252
#: ./lib/test/unit/failure.rb:252
#: ./lib/test/unit/fault-location-detector.rb:252
#: ./lib/test/unit/fixture.rb:252 ./lib/test/unit/notification.rb:252
#: ./lib/test/unit/omission.rb:252 ./lib/test/unit/pending.rb:252
#: ./lib/test/unit/priority.rb:252
#: ./lib/test/unit/runner/console.rb:252
#: ./lib/test/unit/runner/emacs.rb:252
#: ./lib/test/unit/runner/xml.rb:252 ./lib/test/unit/testcase.rb:252
#: ./lib/test/unit/testresult.rb:252 ./lib/test/unit/testsuite.rb:252
#: ./lib/test/unit/testsuitecreator.rb:252
#: ./lib/test/unit/ui/console/outputlevel.rb:252
#: ./lib/test/unit/ui/console/testrunner.rb:252
#: ./lib/test/unit/ui/emacs/testrunner.rb:252
#: ./lib/test/unit/ui/testrunner.rb:252
#: ./lib/test/unit/ui/testrunnermediator.rb:252
#: ./lib/test/unit/ui/testrunnerutilities.rb:252
#: ./lib/test/unit/ui/xml/testrunner.rb:252
#: ./lib/test/unit/util/backtracefilter.rb:252
#: ./lib/test/unit/util/method-owner-finder.rb:252
#: ./lib/test/unit/util/observable.rb:252
#: ./lib/test/unit/util/output.rb:252
#: ./lib/test/unit/util/procwrapper.rb:252
#: ./lib/test/unit/version.rb:252
msgid ""
"Except color scheme definitions, all of them are\n"
"specified by command line option."
msgstr "カラースキーム定義以外はコマンドラインオプションで指定することができます。"

#: ./lib/test-unit.rb:288 ./lib/test/unit.rb:288
#: ./lib/test/unit/assertionfailederror.rb:288
#: ./lib/test/unit/assertions.rb:288
#: ./lib/test/unit/attribute-matcher.rb:288
#: ./lib/test/unit/attribute.rb:288 ./lib/test/unit/autorunner.rb:288
#: ./lib/test/unit/code-snippet-fetcher.rb:288
#: ./lib/test/unit/collector.rb:288
#: ./lib/test/unit/collector/descendant.rb:288
#: ./lib/test/unit/collector/dir.rb:288
#: ./lib/test/unit/collector/load.rb:288
#: ./lib/test/unit/collector/objectspace.rb:288
#: ./lib/test/unit/collector/xml.rb:288
#: ./lib/test/unit/color-scheme.rb:288 ./lib/test/unit/color.rb:288
#: ./lib/test/unit/data.rb:288 ./lib/test/unit/diff.rb:288
#: ./lib/test/unit/error.rb:288 ./lib/test/unit/exceptionhandler.rb:288
#: ./lib/test/unit/failure.rb:288
#: ./lib/test/unit/fault-location-detector.rb:288
#: ./lib/test/unit/fixture.rb:288 ./lib/test/unit/notification.rb:288
#: ./lib/test/unit/omission.rb:288 ./lib/test/unit/pending.rb:288
#: ./lib/test/unit/priority.rb:288
#: ./lib/test/unit/runner/console.rb:288
#: ./lib/test/unit/runner/emacs.rb:288
#: ./lib/test/unit/runner/xml.rb:288 ./lib/test/unit/testcase.rb:288
#: ./lib/test/unit/testresult.rb:288 ./lib/test/unit/testsuite.rb:288
#: ./lib/test/unit/testsuitecreator.rb:288
#: ./lib/test/unit/ui/console/outputlevel.rb:288
#: ./lib/test/unit/ui/console/testrunner.rb:288
#: ./lib/test/unit/ui/emacs/testrunner.rb:288
#: ./lib/test/unit/ui/testrunner.rb:288
#: ./lib/test/unit/ui/testrunnermediator.rb:288
#: ./lib/test/unit/ui/testrunnerutilities.rb:288
#: ./lib/test/unit/ui/xml/testrunner.rb:288
#: ./lib/test/unit/util/backtracefilter.rb:288
#: ./lib/test/unit/util/method-owner-finder.rb:288
#: ./lib/test/unit/util/observable.rb:288
#: ./lib/test/unit/util/output.rb:288
#: ./lib/test/unit/util/procwrapper.rb:288
#: ./lib/test/unit/version.rb:288
msgid ""
"You can use the above 'inverted' color scheme with the\n"
"following configuration:"
msgstr "上で定義した'inverted'カラースキムを使う設定は以下の通りです。"

# Test::Unit.run=
#: ./lib/test/unit.rb:313
msgid ""
"Set true when Test::Unit has run.  If set to true Test::Unit\n"
"will not automatically run at exit."
msgstr ""

# @deprecated
#: ./lib/test/unit.rb:316
msgid "Use Test::Unit::AutoRunner.need_auto_run= instead."
msgstr ""

# Test::Unit.run?
#: ./lib/test/unit.rb:321
msgid "Already tests have run?"
msgstr ""

# @deprecated
#: ./lib/test/unit.rb:323
msgid "Use Test::Unit::AutoRunner.need_auto_run? instead."
msgstr ""

#: ./lib/test/unit.rb:328 ./lib/test/unit.rb:405 ./lib/test/unit.rb:412
#: ./lib/test/unit.rb:490 ./lib/test/unit/data.rb:97
#: ./lib/test/unit/data.rb:109 ./lib/test/unit/data.rb:149
#: ./lib/test/unit/data.rb:195
msgid "private"
msgstr ""

# Test::Unit.at_start
#: ./lib/test/unit.rb:331
msgid ""
"Regsiter a hook that is run before running tests.\n"
"To register multiple hooks, call this method multiple times."
msgstr ""

# Test::Unit.at_start
#: ./lib/test/unit.rb:334
msgid ""
"Here is an example test case:\n"
"  Test::Unit.at_start do\n"
"    # ...\n"
"  end"
msgstr ""

# Test::Unit.at_start
#: ./lib/test/unit.rb:339
msgid ""
"  class TestMyClass1 < Test::Unit::TestCase\n"
"    class << self\n"
"      def startup\n"
"        # ...\n"
"      end\n"
"    end"
msgstr ""

# Test::Unit.at_start
#: ./lib/test/unit.rb:346 ./lib/test/unit.rb:366
msgid ""
"    def setup\n"
"      # ...\n"
"    end"
msgstr ""

# Test::Unit.at_exit
# Test::Unit.at_start
#: ./lib/test/unit.rb:350 ./lib/test/unit.rb:370 ./lib/test/unit.rb:434
#: ./lib/test/unit.rb:454
msgid ""
"    def test_my_class1\n"
"      # ...\n"
"    end"
msgstr ""

# Test::Unit.at_exit
# Test::Unit.at_start
#: ./lib/test/unit.rb:354 ./lib/test/unit.rb:374 ./lib/test/unit.rb:438
#: ./lib/test/unit.rb:458
msgid ""
"    def test_my_class2\n"
"      # ...\n"
"    end\n"
"  end"
msgstr ""

# Test::Unit.at_start
#: ./lib/test/unit.rb:359
msgid ""
"  class TestMyClass2 < Test::Unit::TestCase\n"
"    class << self\n"
"      def startup\n"
"        # ...\n"
"      end\n"
"    end"
msgstr ""

# Test::Unit.at_start
#: ./lib/test/unit.rb:379
msgid ""
"Here is a call order:\n"
"* at_start\n"
"* TestMyClass1.startup\n"
"* TestMyClass1#setup\n"
"* TestMyClass1#test_my_class1\n"
"* TestMyClass1#setup\n"
"* TestMyClass1#test_my_class2\n"
"* TestMyClass2#setup\n"
"* TestMyClass2#test_my_class1\n"
"* TestMyClass2#setup\n"
"* TestMyClass2#test_my_class2"
msgstr ""

# @example
#: ./lib/test/unit.rb:400
msgid ""
"Test::Unit.at_start do\n"
"  puts \"Start!\"\n"
"end"
msgstr ""

# @yield
#: ./lib/test/unit.rb:400
msgid "A block that is run before running tests."
msgstr ""

# @since
#: ./lib/test/unit.rb:400 ./lib/test/unit.rb:485
msgid "2.5.2"
msgstr ""

# Test::Unit.at_exit
#: ./lib/test/unit.rb:415
msgid ""
"Regsiter a hook that is run after running tests.\n"
"To register multiple hooks, call this method multiple times."
msgstr ""

# Test::Unit.at_exit
#: ./lib/test/unit.rb:418
msgid ""
"Here is an example test case:\n"
"  Test::Unit.at_exit do\n"
"    # ...\n"
"  end"
msgstr ""

# Test::Unit.at_exit
#: ./lib/test/unit.rb:423
msgid ""
"  class TestMyClass1 < Test::Unit::TestCase\n"
"    class << self\n"
"      def shutdown\n"
"        # ...\n"
"      end\n"
"    end"
msgstr ""

# Test::Unit.at_exit
#: ./lib/test/unit.rb:430 ./lib/test/unit.rb:450
msgid ""
"    def teardown\n"
"      # ...\n"
"    end"
msgstr ""

# Test::Unit.at_exit
#: ./lib/test/unit.rb:443
msgid ""
"  class TestMyClass2 < Test::Unit::TestCase\n"
"    class << self\n"
"      def shutdown\n"
"        # ...\n"
"      end\n"
"    end"
msgstr ""

# Test::Unit.at_exit
#: ./lib/test/unit.rb:463
msgid ""
"Here is a call order:\n"
"* TestMyClass1#test_my_class1\n"
"* TestMyClass1#teardown\n"
"* TestMyClass1#test_my_class2\n"
"* TestMyClass1#teardown\n"
"* TestMyClass1.shutdown\n"
"* TestMyClass2#test_my_class1\n"
"* TestMyClass2#teardown\n"
"* TestMyClass2#test_my_class2\n"
"* TestMyClass2#teardown\n"
"* TestMyClass2.shutdown\n"
"* at_exit"
msgstr ""

# @example
#: ./lib/test/unit.rb:485
msgid ""
"Test::Unit.at_exit do\n"
"  puts \"Exit!\"\n"
"end"
msgstr ""

# @yield
#: ./lib/test/unit.rb:485
msgid "A block that is run after running tests."
msgstr ""

#: ./lib/test/unit/assertionfailederror.rb:11
msgid "Thrown by Test::Unit::Assertions when an assertion fails."
msgstr ""

# @param value
#: ./lib/test/unit/assertionfailederror.rb:12
msgid "the value to set the attribute actual to."
msgstr ""

# @param value
#: ./lib/test/unit/assertionfailederror.rb:12
msgid "the value to set the attribute user_message to."
msgstr ""

# @param
#: ./lib/test/unit/assertionfailederror.rb:12
#: ./lib/test/unit/assertionfailederror.rb:13
#: ./lib/test/unit/assertions.rb:1512 ./lib/test/unit/autorunner.rb:126
#: ./lib/test/unit/autorunner.rb:127 ./lib/test/unit/autorunner.rb:128
#: ./lib/test/unit/collector/dir.rb:11
msgid "tag|param|value"
msgstr ""

# @param value
#: ./lib/test/unit/assertionfailederror.rb:12
msgid "the value to set the attribute expected to."
msgstr ""

#: ./lib/test/unit/assertionfailederror.rb:13
#: ./lib/test/unit/failure.rb:16
msgid "Returns the value of attribute actual"
msgstr ""

# @param value
#: ./lib/test/unit/assertionfailederror.rb:13
msgid "the value to set the attribute inspected_actual to."
msgstr ""

#: ./lib/test/unit/assertionfailederror.rb:13
#: ./lib/test/unit/failure.rb:16
msgid "Returns the value of attribute expected"
msgstr ""

# Test::Unit::AssertionFailedError#expected=
#: ./lib/test/unit/assertionfailederror.rb:13
msgid "Sets the attribute expected"
msgstr ""

# Test::Unit::AssertionFailedError#actual=
#: ./lib/test/unit/assertionfailederror.rb:13
msgid "Sets the attribute actual"
msgstr ""

# @param value
#: ./lib/test/unit/assertionfailederror.rb:13
msgid "the value to set the attribute inspected_expected to."
msgstr ""

# Test::Unit::AssertionFailedError#user_message=
#: ./lib/test/unit/assertionfailederror.rb:13
msgid "Sets the attribute user_message"
msgstr ""

#: ./lib/test/unit/assertionfailederror.rb:13
#: ./lib/test/unit/failure.rb:16
msgid "Returns the value of attribute user_message"
msgstr ""

#: ./lib/test/unit/assertionfailederror.rb:14
#: ./lib/test/unit/failure.rb:17
msgid "Returns the value of attribute inspected_actual"
msgstr ""

#: ./lib/test/unit/assertionfailederror.rb:14
#: ./lib/test/unit/failure.rb:17
msgid "Returns the value of attribute inspected_expected"
msgstr ""

# Test::Unit::AssertionFailedError#inspected_expected=
#: ./lib/test/unit/assertionfailederror.rb:14
msgid "Sets the attribute inspected_expected"
msgstr ""

# Test::Unit::AssertionFailedError#inspected_actual=
#: ./lib/test/unit/assertionfailederror.rb:14
msgid "Sets the attribute inspected_actual"
msgstr ""

# Test::Unit::Assertions
#: ./lib/test/unit/assertions.rb:15
msgid ""
"Test::Unit::Assertions contains the standard Test::Unit assertions.\n"
"Assertions is included in Test::Unit::TestCase."
msgstr ""

# Test::Unit::Assertions
#: ./lib/test/unit/assertions.rb:18
msgid ""
"To include it in your own code and use its functionality, you simply\n"
"need to rescue Test::Unit::AssertionFailedError. Additionally you may\n"
"override add_assertion to get notified whenever an assertion is made."
msgstr ""

# Test::Unit::Assertions
#: ./lib/test/unit/assertions.rb:22
msgid ""
"Notes:\n"
"* The message to each assertion, if given, will be propagated with the\n"
"  failure.\n"
"* It is easy to add your own assertions based on assert_block()."
msgstr ""

# Test::Unit::Assertions
#: ./lib/test/unit/assertions.rb:27
msgid "= Example Custom Assertion"
msgstr ""

# Test::Unit::Assertions
#: ./lib/test/unit/assertions.rb:29
msgid ""
"  def deny(boolean, message = nil)\n"
"    message = build_message message, '<?> is not false or nil.', boolean\n"
"    assert_block message do\n"
"      not boolean\n"
"    end\n"
"  end"
msgstr ""

#: ./lib/test/unit/assertions.rb:49
msgid ":yields:"
msgstr ""

# Test::Unit::Assertions#refute
#: ./lib/test/unit/assertions.rb:89
msgid "Asserts that +object+ is false or nil."
msgstr ""

# @example Pass patterns
#: ./lib/test/unit/assertions.rb:104
msgid ""
"refute(false)    # => pass\n"
"refute(nil)      # => pass"
msgstr ""

# @example
#: ./lib/test/unit/assertions.rb:104
msgid "tag|example|Fialure patterns"
msgstr ""

# @example Fialure patterns
#: ./lib/test/unit/assertions.rb:104
msgid ""
"refute(true)     # => failure\n"
"refute(\"string\") # => failure"
msgstr ""

# @since
#: ./lib/test/unit/assertions.rb:104 ./lib/test/unit/assertions.rb:364
#: ./lib/test/unit/assertions.rb:498 ./lib/test/unit/assertions.rb:520
#: ./lib/test/unit/assertions.rb:537 ./lib/test/unit/assertions.rb:555
#: ./lib/test/unit/assertions.rb:606 ./lib/test/unit/assertions.rb:704
#: ./lib/test/unit/assertions.rb:1336
msgid "2.5.3"
msgstr ""

# @param [Object]
#: ./lib/test/unit/assertions.rb:104
msgid "tag|param|object"
msgstr ""

# @example
#: ./lib/test/unit/assertions.rb:104
msgid "tag|example|Pass patterns"
msgstr ""

# @param [Object] object
#: ./lib/test/unit/assertions.rb:104
msgid "The object to be asserted."
msgstr ""

# Test::Unit::Assertions#assert_raise_kind_of
#: ./lib/test/unit/assertions.rb:211
msgid ""
"Passes if the block raises one of the given\n"
"exceptions or sub exceptions of the given exceptions."
msgstr ""

# Test::Unit::Assertions#assert_raise_kind_of
#: ./lib/test/unit/assertions.rb:214
msgid ""
"Example:\n"
"  assert_raise_kind_of(SystemCallError) do\n"
"    raise Errno::EACCES\n"
"  end"
msgstr ""

#: ./lib/test/unit/assertions.rb:721
#: ./lib/test/unit/assertions.rb:104 ./lib/test/unit/assertions.rb:208
#: ./lib/test/unit/assertions.rb:382 ./lib/test/unit/assertions.rb:509
#: ./lib/test/unit/assertions.rb:526 ./lib/test/unit/assertions.rb:543
#: ./lib/test/unit/assertions.rb:568 ./lib/test/unit/assertions.rb:641
msgid "Just for minitest compatibility. :<"
msgstr "minitestとの互換製のためだけのリリースです。 :"

#: ./lib/test/unit/assertions.rb:983
msgid "Passes if the method send doesn't return a true value."
msgstr ""

# Test::Unit::Assertions#assert_not_send
#: ./lib/test/unit/assertions.rb:985
msgid ""
"+send_array+ is composed of:\n"
"* A receiver\n"
"* A method\n"
"* Arguments to the method"
msgstr ""

# Test::Unit::Assertions#assert_not_send
#: ./lib/test/unit/assertions.rb:990
msgid ""
"Example:\n"
"  assert_not_send([[1, 2], :member?, 1]) # -> fail\n"
"  assert_not_send([[1, 2], :member?, 4]) # -> pass"
msgstr ""

# Test::Unit::Assertions#assert_boolean
#: ./lib/test/unit/assertions.rb:1023
msgid "Passes if +actual+ is a boolean value."
msgstr ""

# Test::Unit::Assertions#assert_boolean
#: ./lib/test/unit/assertions.rb:1025
msgid ""
"Example:\n"
"  assert_boolean(true) # -> pass\n"
"  assert_boolean(nil)  # -> fail"
msgstr ""

# Test::Unit::Assertions#assert_true
#: ./lib/test/unit/assertions.rb:1039
msgid "Passes if +actual+ is true."
msgstr ""

# Test::Unit::Assertions#assert_true
#: ./lib/test/unit/assertions.rb:1041
msgid ""
"Example:\n"
"  assert_true(true)  # -> pass\n"
"  assert_true(:true) # -> fail"
msgstr ""

# Test::Unit::Assertions#assert_false
#: ./lib/test/unit/assertions.rb:1055
msgid "Passes if +actual+ is false."
msgstr ""

# Test::Unit::Assertions#assert_false
#: ./lib/test/unit/assertions.rb:1057
msgid ""
"Example:\n"
"  assert_false(false)  # -> pass\n"
"  assert_false(nil)    # -> fail"
msgstr ""

# Test::Unit::Assertions#assert_compare
#: ./lib/test/unit/assertions.rb:1071
msgid ""
"Passes if expression \"+expected+ +operator+\n"
"+actual+\" is true."
msgstr ""

# Test::Unit::Assertions#assert_compare
#: ./lib/test/unit/assertions.rb:1074
msgid ""
"Example:\n"
"  assert_compare(1, \"<\", 10)  # -> pass\n"
"  assert_compare(1, \">=\", 10) # -> fail"
msgstr ""

#: ./lib/test/unit/assertions.rb:1105
msgid "Passes if assertion is failed in block."
msgstr ""

# Test::Unit::Assertions#assert_fail_assertion
#: ./lib/test/unit/assertions.rb:1107
msgid ""
"Example:\n"
"  assert_fail_assertion {assert_equal(\"A\", \"B\")}  # -> pass\n"
"  assert_fail_assertion {assert_equal(\"A\", \"A\")}  # -> fail"
msgstr ""

# Test::Unit::Assertions#assert_raise_message
#: ./lib/test/unit/assertions.rb:1126
msgid ""
"Passes if an exception is raised in block and its\n"
"message is +expected+."
msgstr ""

# Test::Unit::Assertions#assert_raise_message
#: ./lib/test/unit/assertions.rb:1129
msgid ""
"Example:\n"
"  assert_raise_message(\"exception\") {raise \"exception\"}  # -> pass\n"
"  assert_raise_message(/exc/i) {raise \"exception\"}       # -> pass\n"
"  assert_raise_message(\"exception\") {raise \"EXCEPTION\"}  # -> fail\n"
"  assert_raise_message(\"exception\") {}                   # -> fail"
msgstr ""

# Test::Unit::Assertions#assert_const_defined
#: ./lib/test/unit/assertions.rb:1167
msgid "Passes if +object+.const_defined?(+constant_name+)"
msgstr ""

# Test::Unit::Assertions#assert_const_defined
#: ./lib/test/unit/assertions.rb:1169
msgid ""
"Example:\n"
"  assert_const_defined(Test, :Unit)          # -> pass\n"
"  assert_const_defined(Object, :Nonexistent) # -> fail"
msgstr ""

# Test::Unit::Assertions#assert_not_const_defined
#: ./lib/test/unit/assertions.rb:1184
msgid "Passes if !+object+.const_defined?(+constant_name+)"
msgstr ""

# Test::Unit::Assertions#assert_not_const_defined
#: ./lib/test/unit/assertions.rb:1186
msgid ""
"Example:\n"
"  assert_not_const_defined(Object, :Nonexistent) # -> pass\n"
"  assert_not_const_defined(Test, :Unit)          # -> fail"
msgstr ""

# Test::Unit::Assertions#assert_predicate
#: ./lib/test/unit/assertions.rb:1201
msgid "Passes if +object+.+predicate+ is _true_."
msgstr ""

# Test::Unit::Assertions#assert_predicate
#: ./lib/test/unit/assertions.rb:1203
msgid ""
"Example:\n"
"  assert_predicate([], :empty?)  # -> pass\n"
"  assert_predicate([1], :empty?) # -> fail"
msgstr ""

# Test::Unit::Assertions#assert_not_predicate
#: ./lib/test/unit/assertions.rb:1223
msgid "Passes if +object+.+predicate+ is not _true_."
msgstr ""

# Test::Unit::Assertions#assert_not_predicate
#: ./lib/test/unit/assertions.rb:1225
msgid ""
"Example:\n"
"  assert_not_predicate([1], :empty?) # -> pass\n"
"  assert_not_predicate([], :empty?)  # -> fail"
msgstr ""

# Test::Unit::Assertions#assert_alias_method
#: ./lib/test/unit/assertions.rb:1245
msgid ""
"Passes if +object+#+alias_name+ is an alias method of\n"
"+object+#+original_name+."
msgstr ""

# Test::Unit::Assertions#assert_alias_method
#: ./lib/test/unit/assertions.rb:1248
msgid ""
"Example:\n"
"  assert_alias_method([], :length, :size)  # -> pass\n"
"  assert_alias_method([], :size, :length)  # -> pass\n"
"  assert_alias_method([], :each, :size)    # -> fail"
msgstr ""

# Test::Unit::Assertions#assert_path_exist
#: ./lib/test/unit/assertions.rb:1293
msgid "Passes if +path+ exists."
msgstr ""

# Test::Unit::Assertions#assert_path_exist
#: ./lib/test/unit/assertions.rb:1295
msgid ""
"Example:\n"
"  assert_path_exist(\"/tmp\")          # -> pass\n"
"  assert_path_exist(\"/bin/sh\")       # -> pass\n"
"  assert_path_exist(\"/nonexistent\")  # -> fail"
msgstr ""

# Test::Unit::Assertions#assert_path_not_exist
#: ./lib/test/unit/assertions.rb:1311
msgid "Passes if +path+ doesn't exist."
msgstr ""

# Test::Unit::Assertions#assert_path_not_exist
#: ./lib/test/unit/assertions.rb:1313
msgid ""
"Example:\n"
"  assert_path_not_exist(\"/nonexistent\")  # -> pass\n"
"  assert_path_not_exist(\"/tmp\")          # -> fail\n"
"  assert_path_not_exist(\"/bin/sh\")       # -> fail"
msgstr ""

# Test::Unit::Assertions#assert_include
# Test::Unit::Assertions#assert_includes
#: ./lib/test/unit/assertions.rb:1329
#: ./lib/test/unit/assertions.rb:1351
msgid "Passes if +collection+ includes +object+."
msgstr ""

# Test::Unit::Assertions#assert_include
#: ./lib/test/unit/assertions.rb:1331
msgid ""
"Example:\n"
"  assert_include([1, 10], 1)            # -> pass\n"
"  assert_include(1..10, 5)              # -> pass\n"
"  assert_include([1, 10], 5)            # -> fail\n"
"  assert_include(1..10, 20)             # -> fail"
msgstr ""

# Test::Unit::Assertions#assert_includes
#: ./lib/test/unit/assertions.rb:1353
msgid ""
"Example:\n"
"  assert_include([1, 10], 1)            # -> pass\n"
"  assert_include(1..10, 5)              # -> pass\n"
"  assert_include([1, 10], 5)            # -> fail\n"
"  assert_include(1..10, 20)             # -> fail\n"
"Just for minitest compatibility. :<"
msgstr ""

# Test::Unit::Assertions#assert_not_include
#: ./lib/test/unit/assertions.rb:1356
msgid "Passes if +collection+ doesn't include +object+."
msgstr ""

# Test::Unit::Assertions#assert_not_include
#: ./lib/test/unit/assertions.rb:1358
msgid ""
"Example:\n"
"  assert_not_include([1, 10], 5)            # -> pass\n"
"  assert_not_include(1..10, 20)             # -> pass\n"
"  assert_not_include([1, 10], 1)            # -> fail\n"
"  assert_not_include(1..10, 5)              # -> fail"
msgstr ""

# Test::Unit::Assertions#assert_empty
#: ./lib/test/unit/assertions.rb:1378
msgid "Passes if +object+ is empty."
msgstr ""

# Test::Unit::Assertions#assert_empty
#: ./lib/test/unit/assertions.rb:1380
msgid ""
"Example:\n"
"  assert_empty(\"\")                       # -> pass\n"
"  assert_empty([])                       # -> pass\n"
"  assert_empty({})                       # -> pass\n"
"  assert_empty(\" \")                      # -> fail\n"
"  assert_empty([nil])                    # -> fail\n"
"  assert_empty({1 => 2})                 # -> fail"
msgstr ""

# Test::Unit::Assertions#assert_not_empty
#: ./lib/test/unit/assertions.rb:1401
msgid "Passes if +object+ is not empty."
msgstr ""

# Test::Unit::Assertions#assert_not_empty
#: ./lib/test/unit/assertions.rb:1403
msgid ""
"Example:\n"
"  assert_not_empty(\" \")                      # -> pass\n"
"  assert_not_empty([nil])                    # -> pass\n"
"  assert_not_empty({1 => 2})                 # -> pass\n"
"  assert_not_empty(\"\")                       # -> fail\n"
"  assert_not_empty([])                       # -> fail\n"
"  assert_not_empty({})                       # -> fail"
msgstr ""

# Test::Unit::Assertions#add_assertion
#: ./lib/test/unit/assertions.rb:1451
msgid ""
"Called whenever an assertion is made. Define this in classes\n"
"that include Test::Unit::Assertions to record assertion\n"
"counts."
msgstr ""

#: ./lib/test/unit/assertions.rb:1455
#: ./lib/test/unit/exceptionhandler.rb:30 ./lib/test/unit/failure.rb:89
#: ./lib/test/unit/testcase.rb:658 ./lib/test/unit/testcase.rb:671
msgid "This is a public API for developers who extend test-unit."
msgstr ""

# @param value
#: ./lib/test/unit/assertions.rb:1512
msgid "the value to set the attribute use_pp to."
msgstr ""

# Test::Unit::Assertions::AssertionMessage.use_pp
#: ./lib/test/unit/assertions.rb:1513
msgid "Returns the value of attribute use_pp"
msgstr ""

# Test::Unit::Assertions::AssertionMessage.use_pp=
#: ./lib/test/unit/assertions.rb:1513
msgid "Sets the attribute use_pp"
msgstr ""

#: ./lib/test/unit/assertions.rb:1644
msgid "Returns the value of attribute object"
msgstr ""

#: ./lib/test/unit/assertions.rb:1775
msgid "a new instance of Literal"
msgstr ""

#: ./lib/test/unit/assertions.rb:1775
msgid "a new instance of Literal"
msgstr ""

#: ./lib/test/unit/assertions.rb:1775
msgid "a new instance of Literal"
msgstr ""

#: ./lib/test/unit/assertions.rb:1775
msgid "a new instance of Literal"
msgstr ""

#: ./lib/test/unit/assertions.rb:1795
msgid "a new instance of MaybeContainer"
msgstr ""

#: ./lib/test/unit/assertions.rb:1795
msgid "a new instance of MaybeContainer"
msgstr ""

#: ./lib/test/unit/assertions.rb:1795
msgid "a new instance of MaybeContainer"
msgstr ""

#: ./lib/test/unit/assertions.rb:1795
msgid "a new instance of MaybeContainer"
msgstr ""

#: ./lib/test/unit/assertions.rb:1819
msgid "Returns the value of attribute count"
msgstr ""

#: ./lib/test/unit/assertions.rb:1892 ./lib/test/unit/error.rb:19
msgid "Returns the value of attribute exception"
msgstr ""

# @param value
#: ./lib/test/unit/autorunner.rb:126
msgid "the value to set the attribute to_run to."
msgstr ""

# @param value
#: ./lib/test/unit/autorunner.rb:126
msgid "the value to set the attribute exclude to."
msgstr ""

#: ./lib/test/unit/autorunner.rb:126
msgid "Returns the value of attribute suite"
msgstr ""

# @param value
#: ./lib/test/unit/autorunner.rb:126
#: ./lib/test/unit/collector/dir.rb:11
msgid "the value to set the attribute base to."
msgstr ""

# @param value
#: ./lib/test/unit/autorunner.rb:126
msgid "the value to set the attribute pattern to."
msgstr ""

# @param value
#: ./lib/test/unit/autorunner.rb:126
msgid "the value to set the attribute filters to."
msgstr ""

# @param value
#: ./lib/test/unit/autorunner.rb:126
msgid "the value to set the attribute workdir to."
msgstr ""

#: ./lib/test/unit/autorunner.rb:126
msgid "Returns the value of attribute runner_options"
msgstr ""

#: ./lib/test/unit/autorunner.rb:127
msgid "Returns the value of attribute filters"
msgstr ""

# Test::Unit::AutoRunner#workdir=
#: ./lib/test/unit/autorunner.rb:127
msgid "Sets the attribute workdir"
msgstr ""

#: ./lib/test/unit/autorunner.rb:127
msgid "Returns the value of attribute to_run"
msgstr ""

#: ./lib/test/unit/autorunner.rb:127
msgid "Returns the value of attribute workdir"
msgstr ""

# @param value
#: ./lib/test/unit/autorunner.rb:127
msgid "the value to set the attribute listeners to."
msgstr ""

#: ./lib/test/unit/autorunner.rb:127
msgid "the value to set the attribute color_scheme to."
msgstr ""

# Test::Unit::AutoRunner#pattern=
#: ./lib/test/unit/autorunner.rb:127
msgid "Sets the attribute pattern"
msgstr ""

#: ./lib/test/unit/autorunner.rb:127
#: ./lib/test/unit/collector/dir.rb:11
msgid "Returns the value of attribute exclude"
msgstr ""

# Test::Unit::AutoRunner#exclude=
#: ./lib/test/unit/autorunner.rb:127
msgid "Sets the attribute exclude"
msgstr ""

#: ./lib/test/unit/autorunner.rb:127
#: ./lib/test/unit/collector/dir.rb:11
msgid "Returns the value of attribute pattern"
msgstr ""

#: ./lib/test/unit/autorunner.rb:127
#: ./lib/test/unit/collector/dir.rb:12
#: ./lib/test/unit/collector/load.rb:13
msgid "Returns the value of attribute base"
msgstr ""

# Test::Unit::AutoRunner#base=
# Test::Unit::Collector::Dir#base=
#: ./lib/test/unit/autorunner.rb:127
#: ./lib/test/unit/collector/dir.rb:12
msgid "Sets the attribute base"
msgstr ""

# Test::Unit::AutoRunner#to_run=
#: ./lib/test/unit/autorunner.rb:127
msgid "Sets the attribute to_run"
msgstr ""

# Test::Unit::AutoRunner#filters=
#: ./lib/test/unit/autorunner.rb:127
msgid "Sets the attribute filters"
msgstr ""

#: ./lib/test/unit/autorunner.rb:128
#: ./lib/test/unit/ui/testrunner.rb:10
msgid "Returns the value of attribute listeners"
msgstr ""

#: ./lib/test/unit/autorunner.rb:128
msgid "Sets the attribute color_scheme"
msgstr ""

# Test::Unit::AutoRunner#listeners=
#: ./lib/test/unit/autorunner.rb:128
msgid "Sets the attribute listeners"
msgstr ""

#: ./lib/test/unit/autorunner.rb:128
msgid "the value to set the attribute collector to."
msgstr ""

#: ./lib/test/unit/autorunner.rb:128
msgid "the value to set the attribute runner to."
msgstr ""

#: ./lib/test/unit/autorunner.rb:128
msgid "Returns the value of attribute color_scheme"
msgstr ""

#: ./lib/test/unit/autorunner.rb:129
msgid "Sets the attribute collector"
msgstr ""

#: ./lib/test/unit/autorunner.rb:129
msgid "Sets the attribute runner"
msgstr ""

#: ./lib/test/unit/autorunner.rb:130
msgid "a new instance of AutoRunner"
msgstr ""

#: ./lib/test/unit/autorunner.rb:130
msgid "a new instance of AutoRunner"
msgstr ""

# @yieldparam [Test::Unit::AutoRunner]
#: ./lib/test/unit/autorunner.rb:130
msgid "tag|yieldparam|_self"
msgstr ""

#: ./lib/test/unit/autorunner.rb:130
msgid "the object that the method was called on"
msgstr ""

#: ./lib/test/unit/collector/dir.rb:13
msgid "a new instance of Dir"
msgstr ""

#: ./lib/test/unit/collector/dir.rb:13
msgid "a new instance of Dir"
msgstr ""

#: ./lib/test/unit/collector/load.rb:13
msgid "Returns the value of attribute patterns"
msgstr ""

#: ./lib/test/unit/collector/load.rb:13
msgid "Returns the value of attribute excludes"
msgstr ""

#: ./lib/test/unit/collector/load.rb:14
msgid "a new instance of Load"
msgstr ""

#: ./lib/test/unit/collector/xml.rb:37
msgid "a new instance of Listener"
msgstr ""

#: ./lib/test/unit/collector/xml.rb:37
msgid "a new instance of Listener"
msgstr ""

#: ./lib/test/unit/collector/xml.rb:37
msgid "a new instance of Listener"
msgstr ""

#: ./lib/test/unit/collector/xml.rb:37
msgid "a new instance of Listener"
msgstr ""

#: ./lib/test/unit/collector/xml.rb:37
msgid "Returns the value of attribute test_suites"
msgstr ""

#: ./lib/test/unit/color.rb:28 ./lib/test/unit/testsuite.rb:22
msgid "Returns the value of attribute name"
msgstr ""

#: ./lib/test/unit/color.rb:111
msgid "Returns the value of attribute colors"
msgstr ""

# Test::Unit::Data::ClassMethods#data
#: ./lib/test/unit/data.rb:14
msgid "Define test data in the test code."
msgstr ""

# @overload
#: ./lib/test/unit/data.rb:55
msgid "tag|overload|data"
msgstr ""

# Test::Unit::Data::ClassMethods#load_data
#: ./lib/test/unit/data.rb:76
msgid ""
"Load test data from the file. This is shorthand to load\n"
"test data from file.  If you want to load complex file, you\n"
"can use {#data} with block."
msgstr ""

# @see
#: ./lib/test/unit/data.rb:90
msgid "tag|see|Loader#load"
msgstr ""

#: ./lib/test/unit/data.rb:90
msgid "tag|example|Load data from CSV file"
msgstr "CSVファイルからデータを読み込みます。"

# @example Load data from CSV file
#: ./lib/test/unit/data.rb:90
msgid ""
"load_data(\"/path/to/test-data.csv\")\n"
"def test_empty?(data)\n"
"  assert_equal(data[\"expected\"], data[\"target\"].empty?)\n"
"end"
msgstr ""

# @param [String]
#: ./lib/test/unit/data.rb:90 ./lib/test/unit/data.rb:109
msgid "tag|param|file_name"
msgstr ""

#: ./lib/test/unit/data.rb:97
msgid "a new instance of Loader"
msgstr ""

#: ./lib/test/unit/data.rb:102
msgid "Load data from file."
msgstr "ファイルからデータを読み込みます。"

# @see
#: ./lib/test/unit/data.rb:109
msgid "tag|see|#load_csv"
msgstr ""

# @see
#: ./lib/test/unit/data.rb:109
msgid "tag|see|#load_tsv"
msgstr ""

#: ./lib/test/unit/data.rb:121
msgid "Load data from CSV file."
msgstr "CSVファイルからデータを読み込みます。"

#: ./lib/test/unit/data.rb:123
msgid ""
"There are 2 types of CSV file as following examples.\n"
"First, there is a header on first row and it's first column is \"label\".\n"
"Another, there is no header in the file."
msgstr ""
"以下の2種類のサンプルのようなCSVファイルを使用できます。\n"
"一つ目は、一行目の最初のカラムが\"label\"という文字列であるものです。\n"
"もう一つは、ヘッダ行のないファイルです。"

#: ./lib/test/unit/data.rb:149
msgid "tag|example|Load data from CSV file with header"
msgstr "ヘッダのあるCSVファイルを読み込みます"

# @example Load data from CSV file with header
#: ./lib/test/unit/data.rb:149
msgid ""
"# test-data.csv:\n"
"#  label,expected,target\n"
"#  empty string,true,\"\"\n"
"#  plain string,false,hello\n"
"#\n"
"load_data(\"/path/to/test-data.csv\")\n"
"def test_empty?(data)\n"
"  assert_equal(data[\"expected\"], data[\"target\"].empty?)\n"
"end"
msgstr ""

#: ./lib/test/unit/data.rb:149
msgid "tag|example|Load data from CSV file without header"
msgstr "ヘッダのないCSVファイルを読み込みます"

# @example Load data from CSV file without header
#: ./lib/test/unit/data.rb:149
msgid ""
"# test-data-without-header.csv:\n"
"#  empty string,true,\"\"\n"
"#  plain string,false,hello\n"
"#\n"
"load_data(\"/path/to/test-data-without-header.csv\")\n"
"def test_empty?(data)\n"
"  expected, target = data\n"
"  assert_equal(expected, target.empty?)\n"
"end"
msgstr ""

#: ./lib/test/unit/data.rb:167
msgid "Load data from TSV file."
msgstr "TSVファイルからデータを読み込みます。"

#: ./lib/test/unit/data.rb:169
msgid ""
"There are 2 types of TSV file as following examples.\n"
"First, there is a header on first row and it's first column is \"label\".\n"
"Another, there is no header in the file."
msgstr ""
"以下の2種類のサンプルのようなTSVファイルを使用できます。\n"
"一つ目は、一行目の最初のカラムが\"label\"という文字列であるものです。\n"
"もう一つは、ヘッダ行のないファイルです。"

#: ./lib/test/unit/data.rb:195
msgid "tag|example|Load data from TSV file without header"
msgstr "ヘッダのないTSVファイルを読み込みます"

#: ./lib/test/unit/data.rb:195
msgid "tag|example|Load data from TSV file with header"
msgstr "ヘッダのあるTSVファイルを読み込みます"

# @example Load data from TSV file without header
#: ./lib/test/unit/data.rb:195
msgid ""
"# test-data-without-header.tsv:\n"
"#  empty string	true	\"\"\n"
"#  plain string	false	hello\n"
"#\n"
"load_data(\"/path/to/test-data-without-header.tsv\")\n"
"def test_empty?(data)\n"
"  expected, target = data\n"
"  assert_equal(expected, target.empty?)\n"
"end"
msgstr ""

# @example Load data from TSV file with header
#: ./lib/test/unit/data.rb:195
msgid ""
"# test-data.tsv:\n"
"#  label	expected	target\n"
"#  empty string	true	\"\"\n"
"#  plain string	false	hello\n"
"#\n"
"load_data(\"/path/to/test-data.tsv\")\n"
"def test_empty?(data)\n"
"  assert_equal(data[\"expected\"], data[\"target\"].empty?)\n"
"end"
msgstr ""

#: ./lib/test/unit/data.rb:12 ./lib/test/unit/data.rb:74
msgid "This method provides Data-Driven-Test functionality."
msgstr "データ駆動テスト機能のドキュメントを追加しました。"

#: ./lib/test/unit/data.rb:90 ./lib/test/unit/data.rb:109
msgid ""
"full path to test data file.\n"
"File format is automatically detected from filename extension."
msgstr "データファイルのフルパスを指定します。ファイルフォーマットはファイルの拡張子から自動的に判別します。"

#: ./lib/test/unit/data.rb:90 ./lib/test/unit/data.rb:109
msgid "if +file_name+ is not supported file format."
msgstr "+file_name+ がサポートされていないファイルフォーマットのときに発生します。"

#: ./lib/test/unit/diff.rb:265
msgid "a new instance of Differ"
msgstr ""

#: ./lib/test/unit/diff.rb:265
msgid "a new instance of Differ"
msgstr ""

# Test::Unit::Diff::UTF8Line::WIDE_CHARACTERS
#: ./lib/test/unit/diff.rb:279
msgid "from http://unicode.org/reports/tr11/"
msgstr ""

# Test::Unit::Error
#: ./lib/test/unit/error.rb:13
msgid ""
"Encapsulates an error in a test. Created by\n"
"Test::Unit::TestCase when it rescues an exception thrown\n"
"during the processing of a test."
msgstr ""

#: ./lib/test/unit/error.rb:19 ./lib/test/unit/failure.rb:14
#: ./lib/test/unit/notification.rb:8 ./lib/test/unit/omission.rb:8
#: ./lib/test/unit/pending.rb:8
msgid "Returns the value of attribute test_name"
msgstr ""

#: ./lib/test/unit/error.rb:20 ./lib/test/unit/failure.rb:15
#: ./lib/test/unit/notification.rb:9 ./lib/test/unit/omission.rb:9
#: ./lib/test/unit/pending.rb:9 ./lib/test/unit/testcase.rb:391
msgid "Returns the value of attribute method_name"
msgstr ""

# Test::Unit::Error#initialize
#: ./lib/test/unit/error.rb:25
msgid ""
"Creates a new Error with the given test_name and\n"
"exception."
msgstr ""

#: ./lib/test/unit/error.rb:26
msgid "a new instance of Error"
msgstr ""

#: ./lib/test/unit/error.rb:26
msgid "a new instance of Error"
msgstr ""

#: ./lib/test/unit/error.rb:33
msgid "Returns a single character representation of an error."
msgstr ""

#: ./lib/test/unit/error.rb:42
msgid "Returns the message associated with the error."
msgstr ""

#: ./lib/test/unit/error.rb:47 ./lib/test/unit/failure.rb:46
#: ./lib/test/unit/notification.rb:32 ./lib/test/unit/omission.rb:32
#: ./lib/test/unit/pending.rb:32
msgid "Returns a brief version of the error description."
msgstr ""

#: ./lib/test/unit/error.rb:52 ./lib/test/unit/failure.rb:51
#: ./lib/test/unit/notification.rb:37 ./lib/test/unit/omission.rb:37
#: ./lib/test/unit/pending.rb:37
msgid "Returns a verbose version of the error description."
msgstr ""

# Test::Unit::Error#backtrace
#: ./lib/test/unit/error.rb:61
msgid "Deprecated"
msgstr ""

#: ./lib/test/unit/error.rb:63 ./lib/test/unit/failure.rb:61
#: ./lib/test/unit/notification.rb:43 ./lib/test/unit/omission.rb:43
#: ./lib/test/unit/pending.rb:43
msgid "Overridden to return long_display."
msgstr ""

#: ./lib/test/unit/error.rb:123
msgid "Returns the value of attribute errors"
msgstr ""

#: ./lib/test/unit/error.rb:125
msgid "Records a Test::Unit::Error."
msgstr ""

# Test::Unit::TestResultErrorSupport#error_count
#: ./lib/test/unit/error.rb:132
msgid ""
"Returns the number of errors this TestResult has\n"
"recorded."
msgstr ""

# @overload
#: ./lib/test/unit/exceptionhandler.rb:52
msgid "tag|overload|exception_handler"
msgstr ""

# Test::Unit::Failure
#: ./lib/test/unit/failure.rb:11
msgid ""
"Encapsulates a test failure. Created by Test::Unit::TestCase\n"
"when an assertion fails."
msgstr ""

#: ./lib/test/unit/failure.rb:14 ./lib/test/unit/notification.rb:8
#: ./lib/test/unit/omission.rb:8 ./lib/test/unit/pending.rb:8
msgid "Returns the value of attribute location"
msgstr ""

#: ./lib/test/unit/failure.rb:14 ./lib/test/unit/notification.rb:8
#: ./lib/test/unit/omission.rb:8 ./lib/test/unit/pending.rb:8
msgid "Returns the value of attribute message"
msgstr ""

#: ./lib/test/unit/failure.rb:15
msgid "Returns the value of attribute source_location"
msgstr ""

# Test::Unit::Failure#initialize
#: ./lib/test/unit/failure.rb:22
msgid ""
"Creates a new Failure with the given location and\n"
"message."
msgstr ""

#: ./lib/test/unit/failure.rb:23
msgid "a new instance of Failure"
msgstr ""

#: ./lib/test/unit/failure.rb:37
msgid "Returns a single character representation of a failure."
msgstr ""

#: ./lib/test/unit/failure.rb:87
msgid "Report a failure."
msgstr ""

# @param [String]
#: ./lib/test/unit/failure.rb:112
msgid "tag|param|message"
msgstr ""

#: ./lib/test/unit/failure.rb:112
msgid "The backtrace for the failure."
msgstr ""

# @option
#: ./lib/test/unit/failure.rb:112
msgid "tag|option|options"
msgstr ""

# @param [Hash]
#: ./lib/test/unit/failure.rb:112
msgid "tag|param|options"
msgstr ""

#: ./lib/test/unit/failure.rb:112
msgid "The description about the failure."
msgstr ""

#: ./lib/test/unit/failure.rb:112 ./lib/test/unit/testcase.rb:352
msgid "a customizable set of options"
msgstr ""

# @param [Array<String>]
#: ./lib/test/unit/failure.rb:112
msgid "tag|param|backtrace"
msgstr ""

#: ./lib/test/unit/failure.rb:138
msgid "Returns the value of attribute failures"
msgstr ""

#: ./lib/test/unit/failure.rb:140
msgid "Records a Test::Unit::Failure."
msgstr ""

# Test::Unit::TestResultFailureSupport#failure_count
#: ./lib/test/unit/failure.rb:147
msgid ""
"Returns the number of failures this TestResult has\n"
"recorded."
msgstr ""

# Test::Unit::Notification#initialize
#: ./lib/test/unit/notification.rb:14
msgid ""
"Creates a new Notification with the given location and\n"
"message."
msgstr ""

#: ./lib/test/unit/notification.rb:23
msgid "Returns a single character representation of a notification."
msgstr ""

#: ./lib/test/unit/notification.rb:66
msgid "Notify some information."
msgstr ""

# Test::Unit::TestCaseNotificationSupport#notify
#: ./lib/test/unit/notification.rb:68
msgid ""
"Example:\n"
"  def test_notification\n"
"    notify(\"I'm here!\")\n"
"    # Reached here\n"
"    notify(\"Special!\") if special_case?\n"
"    # Reached here too\n"
"  end"
msgstr ""

# Test::Unit::TestCaseNotificationSupport#notify
#: ./lib/test/unit/notification.rb:76
msgid ""
"options:\n"
"  :backtrace override backtrace."
msgstr ""

#: ./lib/test/unit/notification.rb:110
msgid "Returns the value of attribute notifications"
msgstr ""

#: ./lib/test/unit/notification.rb:112
msgid "Records a Test::Unit::Notification."
msgstr ""

# Test::Unit::TestResultNotificationSupport#notification_count
#: ./lib/test/unit/notification.rb:119
msgid ""
"Returns the number of notifications this TestResult has\n"
"recorded."
msgstr ""

# Test::Unit::Omission#initialize
#: ./lib/test/unit/omission.rb:14
msgid ""
"Creates a new Omission with the given location and\n"
"message."
msgstr ""

#: ./lib/test/unit/omission.rb:23
msgid "Returns a single character representation of a omission."
msgstr ""

#: ./lib/test/unit/omission.rb:66
msgid "Omit the test or part of the test."
msgstr ""

# Test::Unit::TestCaseOmissionSupport#omit
#: ./lib/test/unit/omission.rb:68
msgid ""
"Example:\n"
"  def test_omission\n"
"    omit\n"
"    # Not reached here\n"
"  end"
msgstr ""

# Test::Unit::TestCaseOmissionSupport#omit
#: ./lib/test/unit/omission.rb:74
msgid ""
"  def test_omission_with_here\n"
"    omit do\n"
"      # Not ran here\n"
"    end\n"
"    # Reached here\n"
"  end"
msgstr ""

# Test::Unit::TestCaseOmissionSupport#omit_if
#: ./lib/test/unit/omission.rb:91
msgid ""
"Omit the test or part of the test if _condition_ is\n"
"true."
msgstr ""

# Test::Unit::TestCaseOmissionSupport#omit_if
#: ./lib/test/unit/omission.rb:94
msgid ""
"Example:\n"
"  def test_omission\n"
"    omit_if(\"\".empty?)\n"
"    # Not reached here\n"
"  end"
msgstr ""

# Test::Unit::TestCaseOmissionSupport#omit_if
#: ./lib/test/unit/omission.rb:100
msgid ""
"  def test_omission_with_here\n"
"    omit_if(true) do\n"
"      # Not ran here\n"
"    end\n"
"    omit_if(false) do\n"
"      # Reached here\n"
"    end\n"
"    # Reached here too\n"
"  end"
msgstr ""

# Test::Unit::TestCaseOmissionSupport#omit_unless
#: ./lib/test/unit/omission.rb:117
msgid ""
"Omit the test or part of the test if _condition_ is\n"
"not true."
msgstr ""

# Test::Unit::TestCaseOmissionSupport#omit_unless
#: ./lib/test/unit/omission.rb:120
msgid ""
"Example:\n"
"  def test_omission\n"
"    omit_unless(\"string\".empty?)\n"
"    # Not reached here\n"
"  end"
msgstr ""

# Test::Unit::TestCaseOmissionSupport#omit_unless
#: ./lib/test/unit/omission.rb:126
msgid ""
"  def test_omission_with_here\n"
"    omit_unless(true) do\n"
"      # Reached here\n"
"    end\n"
"    omit_unless(false) do\n"
"      # Not ran here\n"
"    end\n"
"    # Reached here too\n"
"  end"
msgstr ""

#: ./lib/test/unit/omission.rb:169
msgid "Returns the value of attribute omissions"
msgstr ""

#: ./lib/test/unit/omission.rb:171
msgid "Records a Test::Unit::Omission."
msgstr ""

# Test::Unit::TestResultOmissionSupport#omission_count
#: ./lib/test/unit/omission.rb:178
msgid ""
"Returns the number of omissions this TestResult has\n"
"recorded."
msgstr ""

# Test::Unit::Pending#initialize
#: ./lib/test/unit/pending.rb:14
msgid ""
"Creates a new Pending with the given location and\n"
"message."
msgstr ""

#: ./lib/test/unit/pending.rb:15
msgid "a new instance of Pending"
msgstr ""

#: ./lib/test/unit/pending.rb:15
msgid "a new instance of Pending"
msgstr ""

#: ./lib/test/unit/pending.rb:23
msgid "Returns a single character representation of a pending."
msgstr ""

#: ./lib/test/unit/pending.rb:66
msgid "Marks the test or part of the test is pending."
msgstr ""

# Test::Unit::TestCasePendingSupport#pend
#: ./lib/test/unit/pending.rb:68
msgid ""
"Example:\n"
"  def test_pending\n"
"    pend\n"
"    # Not reached here\n"
"  end"
msgstr ""

# Test::Unit::TestCasePendingSupport#pend
#: ./lib/test/unit/pending.rb:74
msgid ""
"  def test_pending_with_here\n"
"    pend do\n"
"      # Ran here\n"
"      # Fails if the block doesn't raise any error.\n"
"      # Because it means the block is passed unexpectedly.\n"
"    end\n"
"    # Reached here\n"
"  end"
msgstr ""

#: ./lib/test/unit/pending.rb:128
msgid "Returns the value of attribute pendings"
msgstr ""

#: ./lib/test/unit/pending.rb:130
msgid "Records a Test::Unit::Pending."
msgstr ""

# Test::Unit::TestResultPendingSupport#pending_count
#: ./lib/test/unit/pending.rb:137
msgid ""
"Returns the number of pendings this TestResult has\n"
"recorded."
msgstr ""

#: ./lib/test/unit/priority.rb:99
msgid "Returns the value of attribute test"
msgstr ""

# Test::Unit::TestCase
#: ./lib/test/unit/testcase.rb:31
msgid ""
"Ties everything together. If you subclass and add your own\n"
"test methods, it takes care of making them into tests and\n"
"wrapping those tests into a suite. It also does the\n"
"nitty-gritty of actually running an individual test and\n"
"collecting its results into a Test::Unit::TestResult object."
msgstr ""

#: ./lib/test/unit/testcase.rb:37
msgid "You can run two hooks before/after a TestCase run."
msgstr ""

# Test::Unit::TestCase
#: ./lib/test/unit/testcase.rb:39
msgid ""
"Example:\n"
"  class TestMyClass < Test::Unit::TestCase\n"
"    class << self\n"
"      def startup\n"
"        ...\n"
"      end"
msgstr ""

# Test::Unit::TestCase
#: ./lib/test/unit/testcase.rb:46
msgid ""
"      def shutdown\n"
"        ...\n"
"      end\n"
"    end"
msgstr ""

# Test::Unit::TestCase
# Test::Unit::TestCase.startup
#: ./lib/test/unit/testcase.rb:51 ./lib/test/unit/testcase.rb:155
msgid ""
"    def setup\n"
"      ...\n"
"    end"
msgstr ""

# Test::Unit::TestCase
#: ./lib/test/unit/testcase.rb:55
msgid ""
"    def cleanup\n"
"      ...\n"
"    end"
msgstr ""

# Test::Unit::TestCase
# Test::Unit::TestCase.shutdown
#: ./lib/test/unit/testcase.rb:59 ./lib/test/unit/testcase.rb:191
msgid ""
"    def teardown\n"
"      ...\n"
"    end"
msgstr ""

# Test::Unit::TestCase
#: ./lib/test/unit/testcase.rb:63
msgid ""
"    def test_my_method1\n"
"      ...\n"
"    end"
msgstr ""

# Test::Unit::TestCase
#: ./lib/test/unit/testcase.rb:67
msgid ""
"    def test_my_method2\n"
"      ...\n"
"    end\n"
"  end"
msgstr ""

# Test::Unit::TestCase
#: ./lib/test/unit/testcase.rb:72
msgid ""
"Here is a call order:\n"
"* startup\n"
"* setup\n"
"* test_my_method1\n"
"* cleanup\n"
"* teardown\n"
"* setup\n"
"* test_my_method2\n"
"* cleanup\n"
"* teardown\n"
"* shutdown"
msgstr ""

#: ./lib/test/unit/testcase.rb:98 ./lib/test/unit/testcase.rb:99
#: ./lib/test/unit/testcase.rb:100 ./lib/test/unit/testcase.rb:101
#: ./lib/test/unit/testcase.rb:103 ./lib/test/unit/testcase.rb:104
#: ./lib/test/unit/testcase.rb:107 ./lib/test/unit/testcase.rb:114
#: ./lib/test/unit/testcase.rb:131
#: ./lib/test/unit/testsuitecreator.rb:11
msgid ":nodoc:"
msgstr ""

# Test::Unit::TestCase.suite
#: ./lib/test/unit/testcase.rb:135
msgid ""
"Rolls up all of the test* methods in the fixture into\n"
"one suite, creating a new instance of the fixture for\n"
"each method."
msgstr ""

# Test::Unit::TestCase.startup
#: ./lib/test/unit/testcase.rb:143
msgid ""
"Called before every test case runs. Can be used\n"
"to set up fixture information used in test case\n"
"scope."
msgstr ""

# Test::Unit::TestCase.startup
#: ./lib/test/unit/testcase.rb:147
msgid ""
"Here is an example test case:\n"
"  class TestMyClass < Test::Unit::TestCase\n"
"    class << self\n"
"      def startup\n"
"        ...\n"
"      end\n"
"    end"
msgstr ""

# Test::Unit::TestCase.shutdown
# Test::Unit::TestCase.startup
#: ./lib/test/unit/testcase.rb:159 ./lib/test/unit/testcase.rb:195
msgid ""
"    def test_my_class1\n"
"      ...\n"
"    end"
msgstr ""

# Test::Unit::TestCase.shutdown
# Test::Unit::TestCase.startup
#: ./lib/test/unit/testcase.rb:163 ./lib/test/unit/testcase.rb:199
msgid ""
"    def test_my_class2\n"
"      ...\n"
"    end\n"
"  end"
msgstr ""

# Test::Unit::TestCase.startup
#: ./lib/test/unit/testcase.rb:168
msgid ""
"Here is a call order:\n"
"* startup\n"
"* setup\n"
"* test_my_class1 (or test_my_class2)\n"
"* setup\n"
"* test_my_class2 (or test_my_class1)"
msgstr ""

# Test::Unit::TestCase.shutdown
# Test::Unit::TestCase.startup
#: ./lib/test/unit/testcase.rb:175 ./lib/test/unit/testcase.rb:211
msgid ""
"Note that you should not assume test order. Tests\n"
"should be worked in any order."
msgstr ""

# Test::Unit::TestCase.shutdown
#: ./lib/test/unit/testcase.rb:180
msgid ""
"Called after every test case runs. Can be used to tear\n"
"down fixture information used in test case scope."
msgstr ""

# Test::Unit::TestCase.shutdown
#: ./lib/test/unit/testcase.rb:183
msgid ""
"Here is an example test case:\n"
"  class TestMyClass < Test::Unit::TestCase\n"
"    class << self\n"
"      def shutdown\n"
"        ...\n"
"      end\n"
"    end"
msgstr ""

# Test::Unit::TestCase.shutdown
#: ./lib/test/unit/testcase.rb:204
msgid ""
"Here is a call order:\n"
"* test_my_class1 (or test_my_class2)\n"
"* teardown\n"
"* test_my_class2 (or test_my_class1)\n"
"* teardown\n"
"* shutdown"
msgstr ""

# Test::Unit::TestCase.test_order
#: ./lib/test/unit/testcase.rb:218
msgid ""
"Returns the current test order. This returns\n"
"+:alphabetic+ by default."
msgstr ""

#: ./lib/test/unit/testcase.rb:224
msgid "Sets the current test order."
msgstr ""

# Test::Unit::TestCase.test_order=
#: ./lib/test/unit/testcase.rb:226
msgid ""
"Here are the available _order_:\n"
"[:alphabetic]\n"
"  Default. Tests are sorted in alphabetic order.\n"
"[:random]\n"
"  Tests are sorted in random order.\n"
"[:defined]\n"
"  Tests are sorted in defined order."
msgstr ""

# Test::Unit::TestCase.test
#: ./lib/test/unit/testcase.rb:237
msgid ""
"Defines a test in declarative syntax or marks\n"
"following method as a test method."
msgstr ""

# Test::Unit::TestCase.test
#: ./lib/test/unit/testcase.rb:240
msgid ""
"In declarative syntax usage, the following two\n"
"test definitions are the almost same:"
msgstr ""

# Test::Unit::TestCase.test
#: ./lib/test/unit/testcase.rb:243
msgid ""
"  description \"register user\"\n"
"  def test_register_user\n"
"    ...\n"
"  end"
msgstr ""

# Test::Unit::TestCase.test
#: ./lib/test/unit/testcase.rb:248
msgid ""
"  test \"register user\" do\n"
"    ...\n"
"  end"
msgstr ""

# Test::Unit::TestCase.test
#: ./lib/test/unit/testcase.rb:252
msgid ""
"In test method mark usage, the \"my_test_method\" is\n"
"treated as a test method:"
msgstr ""

# Test::Unit::TestCase.test
#: ./lib/test/unit/testcase.rb:255
msgid ""
"  test\n"
"  def my_test_method\n"
"    assert_equal(\"call me\", ...)\n"
"  end"
msgstr ""

#: ./lib/test/unit/testcase.rb:283
msgid "Describes a test."
msgstr ""

# Test::Unit::TestCase.description
#: ./lib/test/unit/testcase.rb:285
msgid ""
"The following example associates \"register a\n"
"normal user\" description with \"test_register\"\n"
"test."
msgstr ""

# Test::Unit::TestCase.description
#: ./lib/test/unit/testcase.rb:289
msgid ""
"  description \"register a normal user\"\n"
"  def test_register\n"
"    ...\n"
"  end"
msgstr ""

#: ./lib/test/unit/testcase.rb:298
msgid "Defines a sub test case."
msgstr ""

# Test::Unit::TestCase.sub_test_case
#: ./lib/test/unit/testcase.rb:300
msgid ""
"This is a syntax sugar. The both of the following codes are\n"
"the same in meaning:"
msgstr ""

# Test::Unit::TestCase.sub_test_case
#: ./lib/test/unit/testcase.rb:303
msgid ""
"Standard:\n"
"  class TestParent < Test::UnitTestCase\n"
"    class TestChild < self\n"
"      def test_in_child\n"
"      end\n"
"    end\n"
"  end"
msgstr ""

# Test::Unit::TestCase.sub_test_case
#: ./lib/test/unit/testcase.rb:311
msgid ""
"Syntax sugar:\n"
"  class TestParent < Test::UnitTestCase\n"
"    sub_test_case(\"TestChild\") do\n"
"      def test_in_child\n"
"      end\n"
"    end\n"
"  end"
msgstr ""

#: ./lib/test/unit/testcase.rb:319
msgid "The diffrence of them are the following:"
msgstr ""

# Test::Unit::TestCase.sub_test_case
#: ./lib/test/unit/testcase.rb:321
msgid ""
"* Test case created by {sub_test_case} is an anonymous class.\n"
"  So you can't refer the test case by name.\n"
"* The class name of class style must follow\n"
"  constant naming rule in Ruby. But the name of test case\n"
"  created by {sub_test_case} doesn't need to follow the rule.\n"
"  For example, you can use a space in name such as \"child test\"."
msgstr ""

# @param [String]
#: ./lib/test/unit/testcase.rb:332
msgid "tag|param|name"
msgstr ""

# @yield
#: ./lib/test/unit/testcase.rb:332
msgid ""
"The block is evaludated under the newly created sub test\n"
"case class context."
msgstr ""

#: ./lib/test/unit/testcase.rb:332
msgid "Created sub test case class."
msgstr ""

#: ./lib/test/unit/testcase.rb:332
msgid "The name of newly created sub test case."
msgstr ""

# Test::Unit::TestCase.test_defined?
#: ./lib/test/unit/testcase.rb:344
msgid ""
"Checkes whether a test that is mathched the query is\n"
"defined."
msgstr ""

# @option
#: ./lib/test/unit/testcase.rb:352
msgid "tag|option|query"
msgstr ""

# @param [Hash]
#: ./lib/test/unit/testcase.rb:352
msgid "tag|param|query"
msgstr ""

# Test::Unit::TestCase#initialize
#: ./lib/test/unit/testcase.rb:393
msgid ""
"Creates a new instance of the fixture for running the\n"
"test represented by test_method_name."
msgstr ""

#: ./lib/test/unit/testcase.rb:394
msgid "a new instance of TestCase"
msgstr ""

#: ./lib/test/unit/testcase.rb:394
msgid "a new instance of TestCase"
msgstr ""

#: ./lib/test/unit/testcase.rb:394
msgid "a new instance of TestCase"
msgstr ""

#: ./lib/test/unit/testcase.rb:394
msgid "a new instance of TestCase"
msgstr ""

#: ./lib/test/unit/testcase.rb:400
msgid "Assigns test data to the test. It is used in internal."
msgstr ""

#: ./lib/test/unit/testcase.rb:405
msgid "Returns the test is valid test. It is used in internal."
msgstr ""

# Test::Unit::TestCase#run
#: ./lib/test/unit/testcase.rb:421
msgid ""
"Runs the individual test method represented by this\n"
"instance of the fixture, collecting statistics, failures\n"
"and errors in result."
msgstr ""

# Test::Unit::TestCase#setup
#: ./lib/test/unit/testcase.rb:454
msgid ""
"Called before every test method runs. Can be used\n"
"to set up fixture information."
msgstr ""

# Test::Unit::TestCase#setup
#: ./lib/test/unit/testcase.rb:457
msgid ""
"You can add additional setup tasks by the following\n"
"code:\n"
"  class TestMyClass < Test::Unit::TestCase\n"
"    def setup\n"
"      ...\n"
"    end"
msgstr ""

# Test::Unit::TestCase#setup
#: ./lib/test/unit/testcase.rb:464
msgid ""
"    setup\n"
"    def my_setup1\n"
"      ...\n"
"    end"
msgstr ""

# Test::Unit::TestCase#setup
#: ./lib/test/unit/testcase.rb:469
msgid ""
"    setup do\n"
"      ... # setup callback1\n"
"    end"
msgstr ""

# Test::Unit::TestCase#setup
#: ./lib/test/unit/testcase.rb:473
msgid ""
"    setup\n"
"    def my_setup2\n"
"      ...\n"
"    end"
msgstr ""

# Test::Unit::TestCase#setup
#: ./lib/test/unit/testcase.rb:478
msgid ""
"    setup do\n"
"      ... # setup callback2\n"
"    end"
msgstr ""

# Test::Unit::TestCase#cleanup
# Test::Unit::TestCase#setup
# Test::Unit::TestCase#teardown
#: ./lib/test/unit/testcase.rb:482 ./lib/test/unit/testcase.rb:527
#: ./lib/test/unit/testcase.rb:570
msgid ""
"    def test_my_class\n"
"      ...\n"
"    end\n"
"  end"
msgstr ""

# Test::Unit::TestCase#setup
#: ./lib/test/unit/testcase.rb:487
msgid ""
"Here is a call order:\n"
"* setup\n"
"* my_setup1\n"
"* setup callback1\n"
"* my_setup2\n"
"* setup callback2\n"
"* test_my_class"
msgstr ""

# Test::Unit::TestCase#cleanup
#: ./lib/test/unit/testcase.rb:497
msgid ""
"Called after every test method runs but the test\n"
"method isn't marked as 'passed'. Can be used to\n"
"clean up and/or verify tested condition.\n"
"e.g. Can be used to verify mock."
msgstr ""

# Test::Unit::TestCase#cleanup
#: ./lib/test/unit/testcase.rb:502
msgid ""
"You can add additional cleanup tasks by the following\n"
"code:\n"
"  class TestMyClass < Test::Unit::TestCase\n"
"    def cleanup\n"
"      ...\n"
"    end"
msgstr ""

# Test::Unit::TestCase#cleanup
#: ./lib/test/unit/testcase.rb:509
msgid ""
"    cleanup\n"
"    def my_cleanup1\n"
"      ...\n"
"    end"
msgstr ""

# Test::Unit::TestCase#cleanup
#: ./lib/test/unit/testcase.rb:514
msgid ""
"    cleanup do\n"
"      ... # cleanup callback1\n"
"    end"
msgstr ""

# Test::Unit::TestCase#cleanup
#: ./lib/test/unit/testcase.rb:518
msgid ""
"    cleanup\n"
"    def my_cleanup2\n"
"      ...\n"
"    end"
msgstr ""

# Test::Unit::TestCase#cleanup
#: ./lib/test/unit/testcase.rb:523
msgid ""
"    cleanup do\n"
"      ... # cleanup callback2\n"
"    end"
msgstr ""

# Test::Unit::TestCase#cleanup
#: ./lib/test/unit/testcase.rb:532
msgid ""
"Here is a call order:\n"
"* test_my_class\n"
"* cleanup callback2\n"
"* my_cleanup2\n"
"* cleanup callback1\n"
"* my_cleanup1\n"
"* cleanup"
msgstr ""

# Test::Unit::TestCase#teardown
#: ./lib/test/unit/testcase.rb:542
msgid ""
"Called after every test method runs. Can be used to tear\n"
"down fixture information."
msgstr ""

# Test::Unit::TestCase#teardown
#: ./lib/test/unit/testcase.rb:545
msgid ""
"You can add additional teardown tasks by the following\n"
"code:\n"
"  class TestMyClass < Test::Unit::TestCase\n"
"    def teardown\n"
"      ...\n"
"    end"
msgstr ""

# Test::Unit::TestCase#teardown
#: ./lib/test/unit/testcase.rb:552
msgid ""
"    teardown\n"
"    def my_teardown1\n"
"      ...\n"
"    end"
msgstr ""

# Test::Unit::TestCase#teardown
#: ./lib/test/unit/testcase.rb:557
msgid ""
"    teardown do\n"
"      ... # teardown callback1\n"
"    end"
msgstr ""

# Test::Unit::TestCase#teardown
#: ./lib/test/unit/testcase.rb:561
msgid ""
"    teardown\n"
"    def my_teardown2\n"
"      ...\n"
"    end"
msgstr ""

# Test::Unit::TestCase#teardown
#: ./lib/test/unit/testcase.rb:566
msgid ""
"    teardown do\n"
"      ... # teardown callback2\n"
"    end"
msgstr ""

# Test::Unit::TestCase#teardown
#: ./lib/test/unit/testcase.rb:575
msgid ""
"Here is a call order:\n"
"* test_my_class\n"
"* teardown callback2\n"
"* my_teardown2\n"
"* teardown callback1\n"
"* my_teardown1\n"
"* teardown"
msgstr ""

# Test::Unit::TestCase#data_label
#: ./lib/test/unit/testcase.rb:593
msgid ""
"Returns a label of test data for the test. If the\n"
"test isn't associated with any test data, it returns\n"
"+nil+."
msgstr ""

# Test::Unit::TestCase#name
#: ./lib/test/unit/testcase.rb:600
msgid ""
"Returns a human-readable name for the specific test that\n"
"this instance of TestCase represents."
msgstr ""

# Test::Unit::TestCase#description
#: ./lib/test/unit/testcase.rb:610
msgid ""
"Returns a description for the test. A description\n"
"will be associated by Test::Unit::TestCase.test or\n"
"Test::Unit::TestCase.description."
msgstr ""

#: ./lib/test/unit/testcase.rb:614
msgid "Returns a name for the test for no description test."
msgstr ""

#: ./lib/test/unit/testcase.rb:619
msgid "Overridden to return #name."
msgstr ""

#: ./lib/test/unit/testcase.rb:624
msgid "It's handy to be able to compare TestCase instances."
msgstr ""

#: ./lib/test/unit/testcase.rb:632
msgid "Returns a Time at the test was started."
msgstr ""

#: ./lib/test/unit/testcase.rb:637
msgid "Returns elapsed time for the test was ran."
msgstr ""

#: ./lib/test/unit/testcase.rb:642
msgid "Returns whether the test is interrupted."
msgstr ""

# Test::Unit::TestCase#passed?
#: ./lib/test/unit/testcase.rb:647
msgid ""
"Returns whether this individual test passed or\n"
"not. Primarily for use in teardown so that artifacts\n"
"can be left behind if the test fails."
msgstr ""

# Test::Unit::TestCase#problem_occurred
#: ./lib/test/unit/testcase.rb:654
msgid ""
"Notify that a problem is occurred in the test. It means that\n"
"the test is a failed test. If any failed tests exist in test\n"
"suites, the test process exits with failure exit status."
msgstr ""

# Test::Unit::TestCase#add_pass
#: ./lib/test/unit/testcase.rb:665
msgid ""
"Notify that the test is passed. Normally, it is not needed\n"
"because #run calls it automatically. If you want to override\n"
"#run, it is not a good idea. Please contact test-unit\n"
"developers. We will help you without your custom #run. For\n"
"example, we may add a new hook in #run."
msgstr ""

#: ./lib/test/unit/testcase.rb:713 ./lib/test/unit/testsuite.rb:22
msgid "Returns the value of attribute start_time"
msgstr ""

#: ./lib/test/unit/testcase.rb:713 ./lib/test/unit/testsuite.rb:22
msgid "Returns the value of attribute elapsed_time"
msgstr ""

# Test::Unit::TestCase::InternalData#test_data_label
#: ./lib/test/unit/testcase.rb:714
msgid "Returns the value of attribute test_data_label"
msgstr ""

# Test::Unit::TestCase::InternalData#test_data
#: ./lib/test/unit/testcase.rb:714
msgid "Returns the value of attribute test_data"
msgstr ""

# Test::Unit::TestResult
#: ./lib/test/unit/testresult.rb:22
msgid ""
"Collects Test::Unit::Failure and Test::Unit::Error so that\n"
"they can be displayed to the user. To this end, observers\n"
"can be added to it, allowing the dynamic updating of, say, a\n"
"UI."
msgstr ""

#: ./lib/test/unit/testresult.rb:40
msgid "Returns the value of attribute run_count"
msgstr ""

#: ./lib/test/unit/testresult.rb:40
msgid "Returns the value of attribute faults"
msgstr ""

#: ./lib/test/unit/testresult.rb:40
msgid "Returns the value of attribute pass_count"
msgstr ""

#: ./lib/test/unit/testresult.rb:40
msgid "Returns the value of attribute assertion_count"
msgstr ""

#: ./lib/test/unit/testresult.rb:42
msgid "Constructs a new, empty TestResult."
msgstr ""

#: ./lib/test/unit/testresult.rb:51
msgid "Records a test run."
msgstr ""

#: ./lib/test/unit/testresult.rb:62
msgid "Records an individual assertion."
msgstr ""

# Test::Unit::TestResult#summary
#: ./lib/test/unit/testresult.rb:69
msgid ""
"Returns a string contain the recorded runs, assertions,\n"
"failures and errors in this TestResult."
msgstr ""

#: ./lib/test/unit/testresult.rb:77
msgid "Returnes a string that shows result status."
msgstr ""

# Test::Unit::TestResult#passed?
#: ./lib/test/unit/testresult.rb:100
msgid ""
"Returns whether or not this TestResult represents\n"
"successful completion."
msgstr ""

#: ./lib/test/unit/testsuite.rb:14
msgid "A collection of tests which can be #run."
msgstr ""

# Test::Unit::TestSuite
#: ./lib/test/unit/testsuite.rb:16
msgid ""
"Note: It is easy to confuse a TestSuite instance with\n"
"something that has a static suite method; I know because _I_\n"
"have trouble keeping them straight. Think of something that\n"
"has a suite method as simply providing a way to get a\n"
"meaningful TestSuite instance."
msgstr ""

#: ./lib/test/unit/testsuite.rb:22
msgid "Returns the value of attribute tests"
msgstr ""

#: ./lib/test/unit/testsuite.rb:22
msgid "Returns the value of attribute test_case"
msgstr ""

# Test::Unit::TestSuite#priority
# Test::Unit::TestSuite#priority=
#: ./lib/test/unit/testsuite.rb:24
msgid ""
"Test suite that has higher priority is ran prior to\n"
"test suites that have lower priority."
msgstr ""

#: ./lib/test/unit/testsuite.rb:33
msgid "Creates a new TestSuite with the given name."
msgstr ""

# Test::Unit::TestSuite#run
#: ./lib/test/unit/testsuite.rb:45
msgid ""
"Runs the tests and/or suites contained in this\n"
"TestSuite."
msgstr ""

#: ./lib/test/unit/testsuite.rb:64
msgid "Adds the test to the suite."
msgstr ""

# Test::Unit::TestSuite#size
#: ./lib/test/unit/testsuite.rb:78
msgid ""
"Retuns the rolled up number of tests in this suite;\n"
"i.e. if the suite contains other suites, it counts the\n"
"tests within those suites, not the suites themselves."
msgstr ""

# Test::Unit::TestSuite#to_s
#: ./lib/test/unit/testsuite.rb:91
msgid ""
"Overridden to return the name given the suite at\n"
"creation."
msgstr ""

#: ./lib/test/unit/testsuite.rb:97
msgid "It's handy to be able to compare TestSuite instances."
msgstr ""

#: ./lib/test/unit/ui/console/testrunner.rb:23
msgid "Runs a Test::Unit::TestSuite on the console."
msgstr ""

# Test::Unit::UI::Console::TestRunner#initialize
#: ./lib/test/unit/ui/console/testrunner.rb:27
msgid ""
"Creates a new TestRunner for running the passed\n"
"suite. If quiet_mode is true, the output while\n"
"running is limited to progress dots, errors and\n"
"failures, and the final result. io specifies\n"
"where runner output should go to; defaults to\n"
"STDOUT."
msgstr ""

#: ./lib/test/unit/ui/console/testrunner.rb:32
#: ./lib/test/unit/ui/testrunner.rb:10
#: ./lib/test/unit/ui/xml/testrunner.rb:25
msgid "a new instance of TestRunner"
msgstr ""

#: ./lib/test/unit/ui/console/testrunner.rb:32
#: ./lib/test/unit/ui/testrunner.rb:10
#: ./lib/test/unit/ui/xml/testrunner.rb:25
msgid "a new instance of TestRunner"
msgstr ""

#: ./lib/test/unit/ui/console/testrunner.rb:32
#: ./lib/test/unit/ui/testrunner.rb:10
#: ./lib/test/unit/ui/xml/testrunner.rb:25
msgid "a new instance of TestRunner"
msgstr ""

#: ./lib/test/unit/ui/console/testrunner.rb:32
#: ./lib/test/unit/ui/testrunner.rb:10
#: ./lib/test/unit/ui/xml/testrunner.rb:25
msgid "a new instance of TestRunner"
msgstr ""

#: ./lib/test/unit/ui/testrunner.rb:21
msgid "Begins the test run."
msgstr ""

# Test::Unit::UI::TestRunnerMediator
#: ./lib/test/unit/ui/testrunnermediator.rb:16
msgid ""
"Provides an interface to write any given UI against,\n"
"hopefully making it easy to write new UIs."
msgstr ""

# Test::Unit::UI::TestRunnerMediator#initialize
#: ./lib/test/unit/ui/testrunnermediator.rb:25
msgid ""
"Creates a new TestRunnerMediator initialized to run\n"
"the passed suite."
msgstr ""

# Test::Unit::UI::TestRunnerMediator#run
#: ./lib/test/unit/ui/testrunnermediator.rb:31
msgid ""
"Runs the suite the TestRunnerMediator was created\n"
"with."
msgstr ""

# Test::Unit::UI::TestRunnerMediator#run_suite
#: ./lib/test/unit/ui/testrunnermediator.rb:56
msgid ""
"Just for backward compatibility for NetBeans.\n"
"NetBeans should not use monkey patching. NetBeans\n"
"should use runner change public API."
msgstr ""

# Test::Unit::UI::TestRunnerMediator#run_suite
#: ./lib/test/unit/ui/testrunnermediator.rb:60
msgid ""
"See GitHub#38\n"
"  https://github.com/test-unit/test-unit/issues/38"
msgstr ""

# Test::Unit::UI::TestRunnerMediator#create_result
#: ./lib/test/unit/ui/testrunnermediator.rb:73
msgid ""
"A factory method to create the result the mediator\n"
"should run with. Can be overridden by subclasses if\n"
"one wants to use a different result."
msgstr ""

# Test::Unit::UI::TestRunnerUtilities
#: ./lib/test/unit/ui/testrunnerutilities.rb:12
msgid ""
"Provides some utilities common to most, if not all,\n"
"TestRunners."
msgstr ""

#: ./lib/test/unit/ui/testrunnerutilities.rb:15
#: ./lib/test/unit/util/observable.rb:70
msgid "--"
msgstr ""

# Test::Unit::UI::TestRunnerUtilities
#: ./lib/test/unit/ui/testrunnerutilities.rb:17
msgid ""
"Perhaps there ought to be a TestRunner superclass? There\n"
"seems to be a decent amount of shared code between test\n"
"runners."
msgstr ""

#: ./lib/test/unit/ui/testrunnerutilities.rb:23
msgid "Creates a new TestRunner and runs the suite."
msgstr ""

# Test::Unit::UI::TestRunnerUtilities#start_command_line_test
#: ./lib/test/unit/ui/testrunnerutilities.rb:28
msgid ""
"Takes care of the ARGV parsing and suite\n"
"determination necessary for running one of the\n"
"TestRunners from the command line."
msgstr ""

#: ./lib/test/unit/ui/xml/testrunner.rb:19
msgid "Runs a Test::Unit::TestSuite and outputs XML."
msgstr ""

# Test::Unit::UI::XML::TestRunner#initialize
#: ./lib/test/unit/ui/xml/testrunner.rb:23
msgid ""
"Creates a new TestRunner for running the passed\n"
"suite. :output option specifies where runner\n"
"output should go to; defaults to STDOUT."
msgstr ""

# Test::Unit::Util::Observable
#: ./lib/test/unit/util/observable.rb:14
msgid ""
"This is a utility class that allows anything mixing\n"
"it in to notify a set of listeners about interesting\n"
"events."
msgstr ""

#: ./lib/test/unit/util/observable.rb:18
msgid "We use this for defaults since nil might mean something"
msgstr ""

# Test::Unit::Util::Observable#add_listener
#: ./lib/test/unit/util/observable.rb:21
msgid ""
"Adds the passed proc as a listener on the\n"
"channel indicated by channel_name. listener_key\n"
"is used to remove the listener later; if none is\n"
"specified, the proc itself is used."
msgstr ""

# Test::Unit::Util::Observable#add_listener
#: ./lib/test/unit/util/observable.rb:26
msgid ""
"Whatever is used as the listener_key is\n"
"returned, making it very easy to use the proc\n"
"itself as the listener_key:"
msgstr ""

# Test::Unit::Util::Observable#add_listener
#: ./lib/test/unit/util/observable.rb:30
msgid ""
" listener = add_listener(\"Channel\") { ... }\n"
" remove_listener(\"Channel\", listener)"
msgstr ""

# Test::Unit::Util::Observable#remove_listener
#: ./lib/test/unit/util/observable.rb:48
msgid ""
"Removes the listener indicated by listener_key\n"
"from the channel indicated by\n"
"channel_name. Returns the registered proc, or\n"
"nil if none was found."
msgstr ""

# Test::Unit::Util::Observable#notify_listeners
#: ./lib/test/unit/util/observable.rb:65
msgid ""
"Calls all the procs registered on the channel\n"
"indicated by channel_name. If value is\n"
"specified, it is passed in to the procs,\n"
"otherwise they are called with no arguments."
msgstr ""

# Test::Unit::Util::Observable#notify_listeners
#: ./lib/test/unit/util/observable.rb:72
msgid ""
"Perhaps this should be private? Would it ever\n"
"make sense for an external class to call this\n"
"method directly?"
msgstr ""

# Test::Unit::Util::Output#capture_output
#: ./lib/test/unit/util/output.rb:6
msgid ""
"Returns output for standard output and standard\n"
"error as string."
msgstr ""

# Test::Unit::Util::Output#capture_output
#: ./lib/test/unit/util/output.rb:9
msgid ""
"Example:\n"
"  capture_output do\n"
"    puts(\"stdout\")\n"
"    warn(\"stderr\")\n"
"  end # -> [\"stdout\n"
"\", \"stderr\n"
"\"]"
msgstr ""

# Test::Unit::Util::ProcWrapper
#: ./lib/test/unit/util/procwrapper.rb:12
msgid ""
"Allows the storage of a Proc passed through '&' in a\n"
"hash."
msgstr ""

# Test::Unit::Util::ProcWrapper
#: ./lib/test/unit/util/procwrapper.rb:15
msgid ""
"Note: this may be inefficient, since the hash being\n"
"used is not necessarily very good. In Observable,\n"
"efficiency is not too important, since the hash is\n"
"only accessed when adding and removing listeners,\n"
"not when notifying."
msgstr ""

#: ./lib/test/unit/util/procwrapper.rb:23
msgid "a new instance of ProcWrapper"
msgstr ""

#: ./lib/test/unit/util/procwrapper.rb:23
msgid "Creates a new wrapper for a_proc."
msgstr ""

#: doc/reference/en/Test/Unit/Collector.html:480(p)
msgid "a new instance of Collector"
msgstr ""

#: doc/reference/en/Test/Unit/Collector.html:480(p)
msgid "a new instance of Collector"
msgstr ""

#: doc/reference/en/Test/Unit/Collector.html:480(p)
msgid "a new instance of Collector"
msgstr ""

#: doc/reference/en/Test/Unit/Collector.html:480(p)
msgid "a new instance of Collector"
msgstr ""

#: doc/reference/en/Test/Unit/Collector.html:480(p)
msgid "a new instance of Collector"
msgstr ""

#: doc/reference/en/Test/Unit/Collector.html:480(p)
msgid "a new instance of Collector"
msgstr ""

#: doc/reference/en/Test/Unit/Collector.html:480(p)
msgid "a new instance of Collector"
msgstr ""

#: doc/reference/en/file.how-to.html:84(p)
msgid "The output format can be changed via the command line with the <placeholder-1/> option. Simply tack it to the end:"
msgstr "テスト結果の出力フォーマットはコマンドラインで<placeholder-1/>オプションを指定すると変更できます。単純にこのオプションを最後に追加してください。"

#: doc/reference/en/file.news.html:70(li)
msgid "Accepted screen-256color <placeholder-1/> as 256 colors available environment. [GitHub#55] [Reported by Tom Miller]"
msgstr ""

#: doc/reference/en/file.how-to.html:84(p)
#, fuzzy
#~ msgid "The output format can be changed via the command line with the <placeholder-1/> option. Simply tack it to the end:"
#~ msgstr "テスト結果の出力フォーマットはコマンドラインで<placeholder-1/>オプションを指定すると変更できます。単純にこのオプションを最後に追加してください。"

#: doc/reference/en/file.news.html:70(li)
#, fuzzy
#~ msgid "Accepted screen-256color <placeholder-1/> as 256 colors available environment. [GitHub#55] [Reported by Tom Miller]"
#~ msgstr "[ui][console] <placeholder-1/>を色付けできるターミナルに追加。 [GitHub#26] [Michael Grosserさんが報告]"
