<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry 
  PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="install-to-freebsd">
<refmeta>
  <refentrytitle role='top_of_page' id='install-to-freebsd.top_of_page'>Install to FreeBSD</refentrytitle>
  <refmiscinfo>MILTER-MANAGER Library</refmiscinfo>
</refmeta>
<refnamediv>
  <refname>Install to FreeBSD</refname>
  <refpurpose>How to install milter manager to FreeBSD</refpurpose>
</refnamediv>
<refsect1>
  <title>About this document</title>
  <para>
  This document describes how to install milter manager to FreeBSD. See 
  <link linkend='install'>Install</link>
   for general install information.
</para>
  <para>This document assumes that FreeBSD 9.1-RELEASE is used.</para>
</refsect1>

<refsect1>
  <title>Install packages</title>
  <para>To install the following packages, related packages are also installed:</para>
  <programlisting>% sudo /usr/local/sbin/portupgrade -NRr lang/ruby18 glib20</programlisting>
  <para>We use Postfix as MTA:</para>
  <programlisting>% sudo /usr/local/sbin/portupgrade -NRr postfix</programlisting>
  <para>We use spamass-milter, clamav-milter and milter-greylist as milters:</para>
  <programlisting>% sudo /usr/local/sbin/portupgrade -NRr spamass-milter
% sudo /usr/local/sbin/portupgrade -NRr -m 'WITH_POSTFIX=true' milter-greylist
% sudo /usr/local/sbin/portupgrade -NRr -m 'WITH_MILTER=true' clamav</programlisting>
</refsect1>

<refsect1>
  <title>Build and Install</title>
  <para>We work at ~/src/. We will install milter manager into /usr/local/.</para>
  <programlisting>% mkdir -p ~/src/
% cd ~/src/
% fetch http://downloads.sourceforge.net/milter-manager/milter-manager-2.0.0.tar.gz
% tar xvzf milter-manager-2.0.0.tar.gz
% cd milter-manager-2.0.0
% ./configure CPPFLAGS=&quot;-I/usr/local/include&quot;
% gmake
% sudo gmake install</programlisting>
</refsect1>

<refsect1>
  <title>Configuration</title>
  <para>Here is a basic configuration policy.</para>
  <para>We use UNIX domain socket for accepting connection from MTA because security and speed.</para>
  <para>We use general user for milter's effective user. This is also for security. 'mail' group has permission of read/write UNIX domain socket. 'postfix' user is joined to 'mail' group.</para>
  <para>
  milter-greylist should be applied only if
  <ulink url='http://gabacho.reto.jp/en/anti-spam/'>S25R</ulink>
  condition is matched to reduce needless delivery delay. But the configuration is automatically done by milter-manager. We need to do nothing for it.
</para>
  <refsect2>
  <title>Configure spamass-milter</title>
  <para>At first, we configure spamd.</para>
  <para>We create /usr/local/etc/mail/spamassassin/local.cf with the following configuration. This configuration is for adding headers only if spam detected.</para>
  <programlisting>remove_header ham Status
remove_header ham Level</programlisting>
  <para>We need to append the following to /etc/rc.conf to enable spamd:</para>
  <programlisting>spamd_enable=YES</programlisting>
  <para>If our SMTP server has many concurrent connections, we should increase max concurrent connections. It is 5 by default. It's a good first value that about 1/3 of the max SMTP connections. e.g. about 30 for about 100 connections SMTP server:</para>
  <programlisting>spamd_flags=&quot;-c --max-children=30 &quot;</programlisting>
  <para>We can adjust apposite value after operation. We can see milter manager's statistics graphs at the time.</para>
  <para>spamd should be started:</para>
  <programlisting>% sudo /usr/sbin/service sa-spamd start</programlisting>
  <para>Next, we configure spamass-milter. We run spamass-milter with 'spamd' user and 'spamd' group.</para>
  <para>spamass-milter creates a socket file as /var/run/spamass-milter.sock by default. But general user can't create a new file in /var/run/. We create /var/run/spamass-milter/ directory owned by 'spamd' user. spamass-milter creates a socket file in the directory:</para>
  <programlisting>% sudo mkdir /var/run/spamass-milter/
% sudo /usr/sbin/chown spamd:spamd /var/run/spamass-milter</programlisting>
  <para>We add the following to /etc/rc.conf:</para>
  <programlisting>spamass_milter_enable=&quot;YES&quot;
spamass_milter_user=&quot;spamd&quot;
spamass_milter_group=&quot;spamd&quot;
spamass_milter_socket=&quot;/var/run/spamss-milter/spamass-milter.sock&quot;
spamass_milter_socket_owner=&quot;spamd&quot;
spamass_milter_socket_group=&quot;mail&quot;
spamass_milter_socket_mode=&quot;660&quot;
spamass_milter_localflags=&quot;-u spamd -- -u spamd&quot;</programlisting>
  <para>spamass-milter should be started:</para>
  <programlisting>% sudo /usr/sbin/service spamass-milter start</programlisting>
</refsect2>

  <refsect2>
  <title>Configure clamav-milter</title>
  <para>At first, we configure ClamAV.</para>
  <para>We add the following to /etc/rc.conf to enable clamd and freshclam:</para>
  <programlisting>clamav_clamd_enable=&quot;YES&quot;
clamav_freshclam_enable=&quot;YES&quot;</programlisting>
  <para>Get the latest definition files before run clamd:</para>
  <programlisting>% sudo /usr/local/bin/freshcram</programlisting>
  <para>clamd and freshclam should be started:</para>
  <programlisting>% sudo /usr/sbin/service clamav-clamd start
% sudo /usr/sbin/service clamav-freshclam start</programlisting>
  <para>clamav-milter is ran as 'clamav' user and 'clamav' group by default. We use the configuration because 'clamav' user is general user. We set group read/write permission of socket.</para>
  <para>We add the following to /etc/rc.conf:</para>
  <programlisting>clamav_milter_enable=&quot;YES&quot;
clamav_milter_socket_mode=&quot;660&quot;
clamav_milter_socket_group=&quot;mail&quot;</programlisting>
  <para>We may need to configure /usr/local/etc/clamav-milter.conf. e.g.:</para>
  <para>/usr/local/etc/clamav-milter.conf</para>
  <para>Before:</para>
  <programlisting>#OnInfected Quarantine
#AddHeader Replace
#LogSyslog yes
#LogFacility LOG_MAIL
#LogInfected Basic</programlisting>
  <para>After:</para>
  <programlisting>OnInfected Reject
AddHeader Replace
LogSyslog yes
LogFacility LOG_MAIL
LogInfected Full</programlisting>
  <para>Here are explanations of the above configurations:</para>
  <variablelist>
  <varlistentry>
  <term id='install-to-freebsd.OnInfected'>OnInfected Reject</term>
  <listitem>
  <para>Rejects infected mails. The default value is Quarantine. It puts infected mails into Postfix's hold queue. If we don't want to confirm hold queue periodically, Reject is a good way for easy maintenance.</para>
</listitem>
</varlistentry>
  <varlistentry>
  <term id='install-to-freebsd.AddHeader'>AddHeader Replace</term>
  <listitem>
  <para>Replaces X-Virus-Scanned header even if it's existed.</para>
</listitem>
</varlistentry>
  <varlistentry>
  <term id='install-to-freebsd.LogSyslog'>LogSyslog yes</term>
  <listitem>
  <para>Logs to syslog.</para>
</listitem>
</varlistentry>
  <varlistentry>
  <term id='install-to-freebsd.LogFacility'>LogFacility LOG_MAIL</term>
  <listitem>
  <para>Logs to syslog with LOG_MAIL facility. /var/log/maillog is the default LOG_MAIL log file.</para>
</listitem>
</varlistentry>
  <varlistentry>
  <term id='install-to-freebsd.LogInfected'>LogInfected Full</term>
  <listitem>
  <para>Logs verbosity on finding infected mails.</para>
</listitem>
</varlistentry>
</variablelist>
  <para>clamav-milter should be started:</para>
  <programlisting>% sudo /usr/sbin/service clamav-milter start</programlisting>
</refsect2>

  <refsect2>
  <title>Configure milter-greylist</title>
  <para>We run milter-greylist as 'mailnull' user and 'mailnull' group. 'mailnull' user is the default configuration and it is unused user on Postfix environment.</para>
  <para>We copy /usr/local/etc/mail/greylist.conf.sample to /usr/local/etc/mail/greylist.conf and change it for the following configurations:</para>
  <itemizedlist>
  <listitem>
  <para>change the effective group to &quot;mail&quot; group from &quot;mailnull&quot; group.</para>
</listitem>
  <listitem>
  <para>add write permission for the socket file to &quot;mail&quot; group.</para>
</listitem>
  <listitem>
  <para>use the leading 24bits for IP address match to avoid Greylist adverse effect for sender uses some MTA case.</para>
</listitem>
  <listitem>
  <para>decrease retransmit check time to 10 minutes from 30 minutes (default value) to avoid Greylist adverse effect.</para>
</listitem>
  <listitem>
  <para>increase auto whitelist period to a week from 1 day (default value) to avoid Greylist adverse effect.</para>
</listitem>
  <listitem>
  <para>use Greylist by default.</para>
</listitem>
</itemizedlist>
  <note>The configuration relaxes Greylist check to avoid Greylist
adverse effect. It increases received spam mails but we
should give priority to avoid false positive rather than
false negative. We should not consider that we blocks all
spam mails by Greylist. We can blocks spam mails that
isn't blocked by Greylist by other anti-spam technique
such as SpamAssassin. milter manager helps constructing
mail system that combines some anti-spam techniques.</note>
  <para>Before:</para>
  <programlisting>socket &quot;/var/milter-greylist/milter-greylist.sock&quot;
user &quot;mailnull:mailnull&quot;
racl whitelist default</programlisting>
  <para>After:</para>
  <programlisting>socket &quot;/var/milter-greylist/milter-greylist.sock&quot; 660
user &quot;mailnull:mail&quot;
subnetmatch /24
greylist 10m
autowhite 1w
racl greylist default</programlisting>
  <para>We add the following to /etc/rc.conf:</para>
  <programlisting>miltergreylist_enable=&quot;YES&quot;
miltergreylist_runas=&quot;mailnull:mail&quot;</programlisting>
  <para>milter-greylist should be started:</para>
  <programlisting>% sudo /usr/sbin/service milter-greylist start</programlisting>
</refsect2>

  <refsect2>
  <title>Configure milter-manager</title>
  <para>We create 'milter-manager' user because we run milter-manager as 'milter-manager' user:</para>
  <programlisting>% sudo /usr/sbin/pw groupadd milter-manager
% sudo /usr/sbin/pw useradd milter-manager -g milter-manager -G mail -m</programlisting>
  <para>milter-manager detects milters that installed in system. We can confirm spamass-milter, clamav-milter and milter-greylist are detected:</para>
  <programlisting>% sudo /usr/local/sbin/milter-manager -u milter-manager --show-config</programlisting>
  <para>The following output shows milters are detected:</para>
  <programlisting>...
define_milter(&quot;milter-greylist&quot;) do |milter|
  milter.connection_spec = &quot;unix:/var/milter-greylist/milter-greylist.sock&quot;
  ...
  milter.enabled = true
  ...
end
..
define_milter(&quot;clamav-milter&quot;) do |milter|
  milter.connection_spec = &quot;unix:/var/run/clamav/clmilter.sock&quot;
  ...
  milter.enabled = true
  ...
end
..
define_milter(&quot;spamass-milter&quot;) do |milter|
  milter.connection_spec = &quot;unix:/var/run/spamss-milter/spamass-milter.sock&quot;
  ...
  milter.enabled = true
  ...
end
..</programlisting>
  <para>
  We should confirm that milter's name, socket path and 'enabled = true'. If the values are unexpected, we need to change /usr/local/etc/milter-manager/milter-manager.conf. See 
  <link linkend='configuration'>Configuration</link>
   for details of milter-manager.conf.
</para>
  <para>But if we can, we want to use milter manager without editing miter-manager.conf. If you report your environment to the milter manager project, the milter manager project may improve detect method.</para>
  <para>milter-manager creates socket file as /var/run/milter-manager/milter-manager.sock by default on FreeBSD. We need to create /var/run/milter-manager directory before running milter-manager:</para>
  <programlisting>% sudo mkdir -p /var/run/milter-manager
% sudo /usr/sbin/chown -R milter-manager:milter-manager /var/run/milter-manager</programlisting>
  <para>milter-manager's configuration is completed. We start to setup running milter-manager.</para>
  <para>We add the following to /etc/rc.conf to enable milter-manager:</para>
  <programlisting>milter_manager_enable=&quot;YES&quot;</programlisting>
  <para>milter-manager should be started:</para>
  <programlisting>% sudo /usr/sbin/service milter-manager start</programlisting>
  <para>/usr/local/bin/milter-test-server is usuful to confirm milter-manager was ran:</para>
  <programlisting>% sudo -u mailnull milter-test-server -s unix:/var/run/milter-manager/milter-manager.sock</programlisting>
  <para>Here is a sample success output:</para>
  <programlisting>status: pass
elapsed-time: 0.128 seconds</programlisting>
  <para>If milter-manager fails to run, the following message will be shown:</para>
  <programlisting>Failed to connect to unix:/var/run/milter-manager/milter-manager.sock: No such file or directory</programlisting>
  <para>In this case, we can use log to solve the problem. milter-manager is verbosily if --verbose option is specified. milter-manager outputs logs to standard output if milter-manager isn't daemon process.</para>
  <para>We add the following to /etc/rc.conf to output verbose log to standard output:</para>
  <programlisting>milter_manager_debug=&quot;YES&quot;</programlisting>
  <para>milter-manager should be started:</para>
  <programlisting>% sudo /usr/sbin/service milter-manager restart</programlisting>
  <para>Some logs are output if there is a problem. Running milter-manager can be exitted by Ctrl+c.</para>
  <para>milter_manager_debug configuration in /etc/rc.conf should be commented out after the problem is solved to run milter-manager as daemon process. And milter-manager should restarted.</para>
</refsect2>

  <refsect2>
  <title>Configure Postfix</title>
  <para>We add 'postfix' user to 'mail' group:</para>
  <programlisting>% sudo /usr/sbin/pw groupmod mail -m postfix</programlisting>
  <para>We start milter's configuration.</para>
  <para>We add the following milter configuration to /usr/local/etc/postfix/main.cf:</para>
  <programlisting>milter_protocol = 6
milter_default_action = accept
milter_mail_macros = {auth_author} {auth_type} {auth_authen}</programlisting>
  <para>Here are descriptions of the configuration.</para>
  <variablelist>
  <varlistentry>
  <term id='install-to-freebsd.milter-protocol'>milter_protocol = 6</term>
  <listitem>
  <para>Postfix uses milter protocol version 6.</para>
</listitem>
</varlistentry>
  <varlistentry>
  <term id='install-to-freebsd.milter-default-action'>milter_default_action = accept</term>
  <listitem>
  <para>Postfix accepts a mail if Postfix can't connect to milter. It's useful configuration for not stopping mail server function if milter has some problems. But it causes some problems that spam mails and virus mails may be delivered until milter is recovered.</para>
  <para>If you can recover milter, 'tempfail' will be better choice rather than 'accept'. Default is 'tempfail'.</para>
</listitem>
</varlistentry>
  <varlistentry>
  <term id='install-to-freebsd.milter-mail-macros'>milter_mail_macros = {auth_author} {auth_type} {auth_authen}</term>
  <listitem>
  <para>Postfix passes SMTP Auth related infomation to milter. Some milters like milter-greylist use it.</para>
</listitem>
</varlistentry>
</variablelist>
  <para>We need to register milter-manager to Postfix. It's important that spamass-milter, clamav-milter, milter-greylist aren't needed to be registered because they are used via milter-manager.</para>
  <para>We add the following to /usr/local/etc/postfix/main.cf:</para>
  <programlisting>smtpd_milters = unix:/var/run/milter-manager/milter-manager.sock</programlisting>
  <para>Postfix should reload its configuration:</para>
  <programlisting>% sudo /usr/sbin/service postfix reload</programlisting>
  <para>Postfix's milter configuration is completed.</para>
  <para>milter-manager logs to syslog. If milter-manager works well, some logs can be showen in /var/log/maillog. We need to sent a test mail for confirming.</para>
</refsect2>

</refsect1>

<refsect1>
  <title>Conclusion</title>
  <para>There are many configurations to work milter and Postfix together. They can be reduced by introducing milter-manager.</para>
  <para>Without milter-manager, we need to specify sockets of spamass-milter, clamav-milter and milter-greylist to smtpd_milters. With milter-manager, we doesn't need to specify sockets of them, just specify a coket of milter-manager. They are detected automatically. We doesn't need to take care some small mistakes like typo.</para>
  <para>milter-manager also supports xxx_enabled=&quot;NO&quot; configuration used in /etc/rc.conf. If we disable a milter, we use the following steps:</para>
  <programlisting>% sudo /usr/sbin/service XXX stop
% sudo vim /etc/rc.conf # XXX_enabled=&quot;YES&quot; =&gt; XXX_enabled=&quot;NO&quot;</programlisting>
  <para>We need to reload milter-manager after we disable a milter.</para>
  <programlisting>% sudo /usr/sbin/service milter-manager reload</programlisting>
  <para>milter-manager detects a milter is disabled and doesn't use it. We doesn't need to change Postfix's main.cf.</para>
  <para>We can reduce maintainance cost by introducing milter-manager if we use some milters on FreeBSD.</para>
  <para>
  milter manager also provides tools to help operation. Installing them is optional but we can reduce operation cost too. If we also install them, we will go to
  <link linkend='install-options-to-freebsd'>Install to FreeBSD (optional)</link>
  .
</para>
</refsect1>
</refentry>
