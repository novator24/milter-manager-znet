<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry 
  PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="performance">
<refmeta>
  <refentrytitle role='top_of_page' id='performance.top_of_page'>パフォーマンス</refentrytitle>
  <refmiscinfo>milter managerライブラリ</refmiscinfo>
</refmeta>
<refnamediv>
  <refname>パフォーマンス</refname>
  <refpurpose>milter managerを用いた迷惑メール対策システムの性能</refpurpose>
</refnamediv>
<refsect1>
  <title>このドキュメントについて</title>
  <para>milter managerを用いた迷惑メール対策（スパム対策・ウイルス対 策）システムは中小規模から大規模まで幅広く適用可能です。ここ では、中小規模での必要なスペックの目安、システムの性能改善の 方法について説明します。</para>
</refsect1>

<refsect1>
  <title>性能測定結果</title>
  <para>milter managerはできるだけ既存のメールシステムに性能面で悪影 響を与えることなく導入できるよう、十分高速に動作するように開 発されています。例えば、柔軟性が必要とされるmilterを適用する かどうかを動的に判断する部分はRubyで実装されていますが、ベー ス部分はC言語で実装されています。</para>
  <para>まず、エントリクラスのサーバで中小規模のメールシステムを運用 している場合を想定した性能測定結果を紹介します。この測定では、 実際の環境よりもやや負荷の高い環境を想定して行っています。そ の方が、実在するより多くの環境でこの測定結果を参考にできると 考えられるからです。もし、milter managerの利用を検討している メール環境が、この測定で想定している環境よりも条件がよいので あれば、この測定結果が参考になるでしょう。</para>
  <para>この測定ではメールがキューに溜まっていくことなく処理されるこ とを確認できました。つまり、エントリクラスのサーバにmilter managerを導入したメールシステムでも、中小規模のメール流量に対 応できる十分な性能を発揮できるということです。</para>
  <refsect2>
  <title>測定環境</title>
  <para>まず、測定環境を説明します。</para>
  <refsect3>
  <title>サーバ</title>
  <para>測定ではエントリクラスのサーバを想定して以下のスペックのマシ ンを利用しました。</para>
  <variablelist>
  <varlistentry>
  <term id='performance.CPU'>CPU</term>
  <listitem>
  <para>Intel Xeon 3040</para>
</listitem>
</varlistentry>
  <varlistentry>
  <term id='performance.メモリ'>メモリ</term>
  <listitem>
  <para>1GB</para>
</listitem>
</varlistentry>
  <varlistentry>
  <term id='performance.OS'>OS</term>
  <listitem>
  <para>Ubuntu 8.04 LTS Hardy Heron</para>
</listitem>
</varlistentry>
</variablelist>
</refsect3>

  <refsect3>
  <title>トラフィック</title>
  <para>中小規模のメールシステムとして以下のメールトラフィックを想定 したテストメールを利用しました。テストメールは、測定用に作成 したものではなく、実際に受信したメールを利用しています。</para>
  <variablelist>
  <varlistentry>
  <term id='performance.メールアカウント数'>メールアカウント数</term>
  <listitem>
  <para>500アカウント</para>
</listitem>
</varlistentry>
  <varlistentry>
  <term id='performance.1アカウントあたりのメールトラフィック量'>1アカウントあたりのメールトラフィック量</term>
  <listitem>
  <para>100通/日</para>
</listitem>
</varlistentry>
  <varlistentry>
  <term id='performance.迷惑メール率'>迷惑メール率</term>
  <listitem>
  <para>95%</para>
</listitem>
</varlistentry>
  <varlistentry>
  <term id='performance.迷惑メールの分布'>迷惑メールの分布</term>
  <listitem>
  <para>昼夜問わず一定（迷惑メールは世界中から発信されるため）</para>
</listitem>
</varlistentry>
  <varlistentry>
  <term id='performance.正常メールの分布'>正常メールの分布</term>
  <listitem>
  <itemizedlist>
  <listitem>
  <para>午前8時から午後8時まで: 6.67%/時間</para>
</listitem>
  <listitem>
  <para>午後8時から午前8時まで: 1.67%/時間</para>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
  <varlistentry>
  <term id='performance.平均メールサイズ'>平均メールサイズ</term>
  <listitem>
  <itemizedlist>
  <listitem>
  <para>迷惑メール: 20KB/1通</para>
</listitem>
  <listitem>
  <para>正常メール: 50KB/1通</para>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
  <varlistentry>
  <term id='performance.迷惑メールの内訳'>迷惑メールの内訳</term>
  <listitem>
  <itemizedlist>
  <listitem>
  <para>コネクションレベルで拒否されるもの: 63.8%</para>
</listitem>
  <listitem>
  <para>スパムと判断されるもの: 36.2%</para>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
  <para>この測定では、実際のメールトラフィックよりもやや負荷の高いメー ルトラフィックを想定しています。例えば、迷惑メール率が90%程度 や平均メールサイズが数KB程度になる環境も多いでしょう。多くの 場合、迷惑メール率が高くなったり、平均メールサイズが大きくなっ たりすると、milterの処理時間が長くなります。ここでは、どちら も処理時間が長くような環境にしました。</para>
</refsect3>

  <refsect3>
  <title>利用するmilter</title>
  <para>最後に、以下が利用したmilterです。ここでもやや負荷の高い環境 としました。</para>
  <itemizedlist>
  <listitem>
  <para>milter-greylist: Greylisting</para>
</listitem>
  <listitem>
  <para>sid-milter: SPF</para>
</listitem>
  <listitem>
  <para>dkim-milter: DKIM</para>
</listitem>
  <listitem>
  <para>dnsbl-milter: DNSBL</para>
</listitem>
  <listitem>
  <para>spamass-milter: ベイジアンフィルタ</para>
</listitem>
  <listitem>
  <para>clamav-milter: ウィルスチェック</para>
</listitem>
</itemizedlist>
  <para>この測定では実際の運用よりも多めに利用しています。例えば、 sid-milterとdkim-milterを利用する代わりに、SPF/DKIM両方に対応 しているENMAだけを利用することができます。これにより、利用す るmilterが1つ減るのでmilterに関わるオーバヘッドが減ります。ま た、milter-greylistやspamass-milterはDNSBLの機能があるので、 dnsbl-milterを使わずに同等の機能を実現することができます。</para>
</refsect3>

</refsect2>

  <refsect2>
  <title>測定結果</title>
  <para>上記の測定条件を満たす、昼の場合と夜の場合のテストメールをそ れぞれ準備しました。これらのテストメールは実際に受信したメー ルを利用しています。</para>
  <para>測定はmilter managerを利用していない場合とmilter managerを利 用した場合の両方のケースで行います。これはmilter managerを導 入しても性能に悪影響を与えず、高速に動作することを示すためで す。そのため、milter manager内では個々のmilterを適用するかど うかの判断を行わず、すべてのmilterを適用しています。こうする ことにより、単純にmilter managerを導入したオーバーヘッドのみ がかかります。</para>
  <para>通常の運用ではmilter managerを用いて適用するmilterが削減され るので、milter managerを導入することにより性能は向上します。</para>
  <para>以下が測定結果です。測定ではテストメールを5分間送信し、処理時 間を確認しています。また、それぞれの測定の前にBindのキャッシュ をクリアし、DNSのキャッシュにヒットすることによる影響を受け づらくしてあります。</para>
  <para>まず、日中のメールトラフィックをシミュレートした場合の測定結 果です。</para>
  <table id='performance-measurement-day'>["<caption>AM8:00-PM8:00の場合を5分（300秒）間シミュレートした場合の測定結果</caption>", ["<thead>[[\"<tr>[[\\\"<th>milter manager</th>\\\"], [\\\"<th>全メール数</th>\\\"], [\\\"<th>全処理時間（秒）</th>\\\"], [\\\"<th>平均処理メール数（通/秒）</th>\\\"], [\\\"<th>最大処理時間（秒/通）</th>\\\"], [\\\"<th>最小処理時間（秒/通）</th>\\\"], [\\\"<th>平均処理時間（秒/通）</th>\\\"]]</tr>\"]]</thead>"], ["<tbody>[[\"<tr>[[\\\"<td>なし</td>\\\"], [\\\"<td>174</td>\\\"], [\\\"<td>303.86</td>\\\"], [\\\"<td>0.57</td>\\\"], [\\\"<td>15.35</td>\\\"], [\\\"<td>0.01</td>\\\"], [\\\"<td>2.07</td>\\\"]]</tr>\"], [\"<tr>[[\\\"<td>あり</td>\\\"], [\\\"<td>174</td>\\\"], [\\\"<td>304.32</td>\\\"], [\\\"<td>0.57</td>\\\"], [\\\"<td>10.56</td>\\\"], [\\\"<td>0.02</td>\\\"], [\\\"<td>2.02</td>\\\"]]</tr>\"]]</tbody>"]]</table>
  <para>続いて、夜間のメールトラフィックをシミュレートした場合の測定 結果です。</para>
  <table id='performance-measurement-night'>["<caption>PM8:00-AM8:00の場合を5分（300秒）間シミュレートした場合の測定結果</caption>", ["<thead>[[\"<tr>[[\\\"<th>milter manager</th>\\\"], [\\\"<th>全メール数</th>\\\"], [\\\"<th>全処理時間（秒）</th>\\\"], [\\\"<th>平均処理メール数（通/秒）</th>\\\"], [\\\"<th>最大処理時間（秒/通）</th>\\\"], [\\\"<th>最小処理時間（秒/通）</th>\\\"], [\\\"<th>平均処理時間（秒/通）</th>\\\"]]</tr>\"]]</thead>"], ["<tbody>[[\"<tr>[[\\\"<td>なし</td>\\\"], [\\\"<td>174</td>\\\"], [\\\"<td>299.56</td>\\\"], [\\\"<td>0.58</td>\\\"], [\\\"<td>11.33</td>\\\"], [\\\"<td>0.01</td>\\\"], [\\\"<td>2.01</td>\\\"]]</tr>\"], [\"<tr>[[\\\"<td>あり</td>\\\"], [\\\"<td>174</td>\\\"], [\\\"<td>299.80</td>\\\"], [\\\"<td>0.58</td>\\\"], [\\\"<td>12.67</td>\\\"], [\\\"<td>0.02</td>\\\"], [\\\"<td>1.82</td>\\\"]]</tr>\"]]</tbody>"]]</table>
  <para>今回は50000通/日のメールを処理するシステムを想定しています。 これを1秒あたりのメール数に直すと0.578通/秒となります。結果 では1秒あたり0.57-0.58通のメールを処理できているため、この測 定のように多めにmilterを適用している環境でもエントリクラスの サーバでメールシステムを運用できることが確認できます。</para>
  <para>また、milter managerあり・なしでほとんど結果が変わっていない ことも確認できます。つまり、この規模ではmilter managerを導入 することによる性能低下はみられないといえます。前述の通り、 milter managerを導入することによりmilter適用を削減できること から、むしろmilter managerを導入することにより性能が向上する ことが予想されます。</para>
  <para>1通あたりの最大処理時間が10秒を越えているのは、DNSのタイムア ウト待ちのためです。迷惑メールの中にはDNS処理に失敗するよう なドメインが入っていることもあるため、1通あたりの処理時間が 長くなってしまうことがあります。これに関しては、DNSのネガティ ブキャッシュを利用したり、特定のドメインのときのみSPFのチェッ クを行うなどして改善することが可能です。</para>
  <para>
  この測定にはmilter managerパッケージに付属している
  <link linkend='milter-performance-check'>milter-performance-check.rd</link>
  を用いています。テストメール を用意すれば手元の環境でも簡単に測定することができます。
</para>
</refsect2>

</refsect1>

<refsect1>
  <title>性能に関わるポイント</title>
  <para>エントリクラスのサーバでも中小規模のメールシステムを運用可能 であるという測定を紹介しました。つづいて、より大きな規模のメー ルシステムに導入する場合の性能について説明します。</para>
  <para>システムの性能には以下のポイントが関わってきます。それぞれの ポイントを改善することに性能が向上し、より大きな規模のメール システムにも導入することができるようになります。</para>
  <itemizedlist>
  <listitem>
  <para>サーバの性能を上げる（スケールアップ）</para>
</listitem>
  <listitem>
  <para>複数のサーバで処理を分散する（スケールアウト）</para>
</listitem>
  <listitem>
  <para>適用するmilter数を減らす</para>
</listitem>
</itemizedlist>
  <para>まず、それぞれのmilterの処理効率を向上させることにより、シス テム全体の性能を向上させる方法を説明します。その後に、milter の処理を減らすことによりシステム全体の性能を向上させる方法を 説明します。</para>
  <refsect2>
  <title>サーバの性能を上げる: スケールアップ</title>
  <para>サーバの性能を上げることにより、milterの処理効率が向上します。 中小規模のメールシステムであればエントリクラスのサーバで十分 な性能を発揮しますし、大規模のメールシステムであればより性能 のよいサーバを利用することでシステムの性能を向上できます。</para>
</refsect2>

  <refsect2>
  <title>複数のサーバで処理を分散する: スケールアウト</title>
  <para>milterはメールサーバとは別プロセスで動作し、milterとメールサー バ間はソケットを用いて通信します。このため、milterとメールサー バを同一ホスト上で動かす必要はなく、複数のサーバに分散させる ことができます。</para>
  <para>milterを配置するサーバを分散することにより、負荷を分散するこ とができます。つまり、サーバ台数を増やすことにより1台あたりの 負荷を下がるので、システム全体ではより高い性能を発揮すること ができます。</para>
  <para>このように、milterはスケールアウトが用意なシステムになってお り、中小規模だけではなく、大規模環境にも対応することができます。</para>
</refsect2>

  <refsect2>
  <title>適用するmilterを減らす</title>
  <para>それぞれのmilterの処理効率向上で対応できない場合は、利用する milterの数を減らすことでシステム全体の処理効率を向上させるこ とができます。しかし、導入しているmilterはそれぞれ理由があっ て導入されているはずなので、簡単にmilterを外すことは難しいで しょう。そのため、システムから完全にmilterを外すのではなく、 必要なときだけmilterを適用することが現実的です。</para>
  <para>milter managerを用いるとそれを実現することができます。milter managerはメール毎に柔軟に適用するmilterを選択することができま す。そのため、必要なときだけmilterを適用し、milterの効果を維 持したまま、システム全体の処理効率を向上させることができます。</para>
  <para>実際は、どのような場合にどのmilterを利用すると効率がよくなる かを検討することの方が大変です。milter managerは現在のメール システムでのmilter適用結果を分析するための情報とツールを提供 しています。また、検討した改善案を検証するために便利なツール も提供しているため、効率よく検討作業を行うことができます。</para>
</refsect2>

</refsect1>

<refsect1>
  <title>まとめ</title>
  <para>milter managerを用いた迷惑メール対策システムを中小規模〜大規 模メールシステムに適用する場合に考慮する必要のある性能面につ いて説明しました。</para>
  <para>中小規模であればエントリクラスのサーバで運用可能な性能が発揮 できる測定結果を示しました。中小規模での運用を検討している場 合は参考にしてください。</para>
  <para>また、大規模環境で導入する場合などで必要になる、性能を向上さ せる方法を3点示しました。</para>
  <itemizedlist>
  <listitem>
  <para>サーバの性能を上げる（スケールアップ）</para>
</listitem>
  <listitem>
  <para>複数のサーバで処理を分散する（スケールアウト）</para>
</listitem>
  <listitem>
  <para>適用するmilter数を減らす</para>
</listitem>
</itemizedlist>
  <para>これらの方法を適用することで、大規模環境でもmilter managerを 用いて効率的に迷惑メール対策を行うことができます。</para>
</refsect1>
</refentry>
